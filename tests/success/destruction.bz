import resource;

function f()
{
	let _ = resource_t();
}

function f(: resource_t)
{
}

function f_move(: move resource_t)
{
}

function main()
{
	(consteval {
		resource_t();
	});
	(consteval {
		resource_t(), resource_t();
	});
	(consteval {
		let _ = resource_t();
	});
	(consteval {
		mut _ = resource_t();
	});
	(consteval {
		(resource_t(), false) && (resource_t(), true);
	});
	(consteval {
		(resource_t(), true) || (resource_t(), false);
	});
	(consteval {
		(resource_t(), false) && ((resource_t(), true) || (resource_t(), false));
	});
	(consteval {
		(if ((resource_t(), false)) {} else {});
	});
	(consteval {
		let b = false;
		let _ = (if (b) { resource_t() } else { resource_t() });
	});
	(consteval {
		let b = false;
		(if (b) { resource_t() } else { resource_t() });
	});
	(consteval {
		if (false) { resource_t(); } else { resource_t(); }
	});
	(consteval {
		let b = false;
		(if (b) resource_t() else resource_t());
	});
	(consteval {
		(switch ((resource_t(), 1)) { else => {} });
	});
	(consteval {
		let n = 1;
		let _ = (switch (n) { 0, 1, 2 => resource_t(), else => resource_t(), });
	});
	(consteval {
		let n = 1;
		(switch (n) { 0, 1, 2 => { resource_t() }, else => { resource_t() }, });
	});
	(consteval {
		let n = 1;
		(switch (n) { 0, 1, 2 => resource_t(), else => resource_t(), });
	});
	(consteval {
		let _ = [ resource_t() ];
	});
	(consteval {
		[ resource_t() ];
	});
	(consteval {
		f_move(resource_t());
	});

	(consteval f());
	(consteval f(resource_t()));
	(consteval f_move(resource_t()));
}
