function get_tuple() -> [int32, int32]
{
	return [ 0, 0 ];
}

function get_tuple_reference() -> [&int32, &int32]
{
	consteval i = 0;
	return [ i, i ];
}

function get_array() -> [2: int32]
{
	return [ 0, 0 ];
}

function get_array_slice() -> [: int32]
{
	consteval a: [2: int32] = [ 0, 0 ];
	return a;
}

function test()
{
	(consteval {
		for (let _ in 0..10)
		{
			let _ = get_tuple()[0];
			let _ = get_tuple()[1];
			let &_ = get_tuple_reference()[0];
			let &_ = get_tuple_reference()[1];
			let _ = get_tuple_reference()[0];
			let _ = get_tuple_reference()[1];
			let _ = get_array()[0];
			let _ = get_array()[1];
			let _ = get_array_slice()[0];
			let _ = get_array_slice()[1];
		}
	});
}
