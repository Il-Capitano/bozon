// value_arg
// 0
// 42
// 123
// 123
// 0
// 42
// 123
// 123
// 0
// 42
// 123
// 123
// reference_arg
// 123
// 123
// 123
// mut_reference_arg
// 123
// 123
// 123
// move_reference_arg
// 0
// 42
// 123
// 0
// 42
// 123
// 0
// 42
// 123
// ================
// value_arg
// 0
// 42
// 123
// 123
// 0
// 42
// 123
// 123
// 0
// 42
// 123
// 123
// reference_arg
// 123
// 123
// 123
// mut_reference_arg
// 123
// 123
// 123
// move_reference_arg
// 0
// 42
// 123
// 0
// 42
// 123
// 0
// 42
// 123
import std::format;
import counting_resource;

function value_arg1(n: int32)
{
	std::print("{}\n", n);
}

function value_arg2(res: relocatable_counting_resource_t)
{
	std::print("{}\n", res.value);
}

function value_arg3(res: counting_resource_t)
{
	std::print("{}\n", res.value);
}

function reference_arg1(n: &int32)
{
	std::print("{}\n", n);
}

function reference_arg2(res: &relocatable_counting_resource_t)
{
	std::print("{}\n", res.value);
}

function reference_arg3(res: &counting_resource_t)
{
	std::print("{}\n", res.value);
}

function mut_reference_arg1(n: &mut int32)
{
	std::print("{}\n", n);
}

function mut_reference_arg2(res: &mut relocatable_counting_resource_t)
{
	std::print("{}\n", res.value);
}

function mut_reference_arg3(res: &mut counting_resource_t)
{
	std::print("{}\n", res.value);
}

function move_reference_arg1(n: move int32)
{
	std::print("{}\n", n);
}

function move_reference_arg2(res: move relocatable_counting_resource_t)
{
	std::print("{}\n", res.value);
}

function move_reference_arg3(res: move counting_resource_t)
{
	std::print("{}\n", res.value);
}

function main()
{
	{
		std::print("value_arg\n");
		value_arg1(0);
		value_arg1(42);
		let n = 123;
		value_arg1(n);
		value_arg1(move n);

		value_arg2(relocatable_counting_resource_t());
		value_arg2(relocatable_counting_resource_t(42));
		let res = relocatable_counting_resource_t(123);
		value_arg2(res);
		value_arg2(move res);

		value_arg3(counting_resource_t());
		value_arg3(counting_resource_t(42));
		let res = counting_resource_t(123);
		value_arg3(res);
		value_arg3(move res);

		std::print("reference_arg\n");
		let n = 123;
		reference_arg1(n);

		let res = relocatable_counting_resource_t(123);
		reference_arg2(res);

		let res = counting_resource_t(123);
		reference_arg3(res);

		std::print("mut_reference_arg\n");
		mut n = 123;
		mut_reference_arg1(n);

		mut res = relocatable_counting_resource_t(123);
		mut_reference_arg2(res);

		mut res = counting_resource_t(123);
		mut_reference_arg3(res);

		std::print("move_reference_arg\n");
		move_reference_arg1(0);
		move_reference_arg1(42);
		let n = 123;
		move_reference_arg1(move n);

		move_reference_arg2(relocatable_counting_resource_t());
		move_reference_arg2(relocatable_counting_resource_t(42));
		let res = relocatable_counting_resource_t(123);
		move_reference_arg2(move res);

		move_reference_arg3(counting_resource_t());
		move_reference_arg3(counting_resource_t(42));
		let res = counting_resource_t(123);
		move_reference_arg3(move res);
	}

	std::print("================\n");

	{
		std::print("value_arg\n");
		let f: function(int32) = value_arg1;
		f(0);
		f(42);
		let n = 123;
		f(n);
		f(move n);

		let f: function(relocatable_counting_resource_t) = value_arg2;
		f(relocatable_counting_resource_t());
		f(relocatable_counting_resource_t(42));
		let res = relocatable_counting_resource_t(123);
		f(res);
		f(move res);

		let f: function(counting_resource_t) = value_arg3;
		f(counting_resource_t());
		f(counting_resource_t(42));
		let res = counting_resource_t(123);
		f(res);
		f(move res);

		std::print("reference_arg\n");
		let f: function(&int32) = reference_arg1;
		let n = 123;
		f(n);

		let f: function(&relocatable_counting_resource_t) = reference_arg2;
		let res = relocatable_counting_resource_t(123);
		f(res);

		let f: function(&counting_resource_t) = reference_arg3;
		let res = counting_resource_t(123);
		f(res);

		std::print("mut_reference_arg\n");
		let f: function(&mut int32) = mut_reference_arg1;
		mut n = 123;
		f(n);

		let f: function(&mut relocatable_counting_resource_t) = mut_reference_arg2;
		mut res = relocatable_counting_resource_t(123);
		f(res);

		let f: function(&mut counting_resource_t) = mut_reference_arg3;
		mut res = counting_resource_t(123);
		f(res);

		std::print("move_reference_arg\n");
		let f: function(move int32) = move_reference_arg1;
		f(0);
		f(42);
		let n = 123;
		f(move n);

		let f: function(move relocatable_counting_resource_t) = move_reference_arg2;
		f(relocatable_counting_resource_t());
		f(relocatable_counting_resource_t(42));
		let res = relocatable_counting_resource_t(123);
		f(move res);

		let f: function(move counting_resource_t) = move_reference_arg3;
		f(counting_resource_t());
		f(counting_resource_t(42));
		let res = counting_resource_t(123);
		f(move res);
	}

	if (!relocatable_counting_resource_is_valid()) unreachable;
	if (!counting_resource_is_valid()) unreachable;
}
