function plus_test(consteval a, consteval b)
{
	let dyn_a = a;
	let dyn_b = b;
	consteval result = ((a + b));
	if (dyn_a + dyn_b != result) unreachable;

	mut dyn_a = a;
	let dyn_b = b;
	dyn_a += dyn_b;
	if (dyn_a != result) unreachable;
}

function plus_signed_overflow(intN: typename)
{
	consteval size_in_bits = 8 * sizeof intN;
	consteval max = ((1u64 << (size_in_bits - 1)) - 1) as intN;
	consteval min = (((1u64 << (size_in_bits - 1)) as intN));

	plus_test(max, 1 as intN);
	plus_test(1 as intN, max);
	plus_test(max, max);

	plus_test(min, -1 as intN);
	plus_test(-1 as intN, min);
	plus_test(min, min);
}

function plus_unsigned_overflow(uintN: typename)
{
	consteval max = ~uintN(0);

	plus_test(max, 1 as uintN);
	plus_test(1 as uintN, max);
	plus_test(max, max);
}

function main()
{
	plus_test(3u8, 10u8);
	plus_test(3u16, 10u16);
	plus_test(3u32, 10u32);
	plus_test(3u64, 10u64);
	plus_test(3i8, 10i8);
	plus_test(3i16, 10i16);
	plus_test(3i32, 10i32);
	plus_test(3i64, 10i64);
	plus_test(-3i8, 10i8);
	plus_test(-3i16, 10i16);
	plus_test(-3i32, 10i32);
	plus_test(-3i64, 10i64);
	plus_test(0.1f32, 0.2f32);
	plus_test(0.1f64, 0.2f64);

	consteval inf_f32 = ((1.0f32 / 0.0f32));
	consteval inf_f64 = ((1.0f64 / 0.0f64));
	plus_test(inf_f32, -3.235f32);
	plus_test(inf_f64, -3.235f64);
	plus_test(-3.235f32, inf_f32);
	plus_test(-3.235f64, inf_f64);
	plus_test(inf_f32, inf_f32);
	plus_test(inf_f64, inf_f64);
	plus_test(-inf_f32, -inf_f32);
	plus_test(-inf_f64, -inf_f64);

	plus_signed_overflow(int8);
	plus_signed_overflow(int16);
	plus_signed_overflow(int32);
	plus_signed_overflow(int64);

	plus_unsigned_overflow(uint8);
	plus_unsigned_overflow(uint16);
	plus_unsigned_overflow(uint32);
	plus_unsigned_overflow(uint64);

	let a = [10: int32]();
	let p1 = &a[0];
	let p2 = &a[8];
	if (p1 + 8 != p2) unreachable;
	if (8 + p1 != p2) unreachable;

	mut p = &a[0];
	p += 5;
	if (p != &a[5]) unreachable;

	let a = [10: [int32, str, [3: float32]]]();
	let p1 = &a[0];
	let p2 = &a[8];
	if (p1 + 8 != p2) unreachable;
	if (8 + p1 != p2) unreachable;

	mut p = &a[0];
	p += 5;
	if (p != &a[5]) unreachable;
}
