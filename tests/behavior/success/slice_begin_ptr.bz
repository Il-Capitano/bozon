function main()
{
	let s = [: mut int32]();
	mut p: ?*int32 = null;
	static_assert(sizeof p <= sizeof s);
	__builtin_memcpy(&p, &s, sizeof p);
	if (p != __builtin_slice_begin_ptr(s)) unreachable;
	if (p != __builtin_slice_begin_mut_ptr(s)) unreachable;

	consteval a = [10: int32]();
	let s: [: int32] = a;
	mut p: ?*int32 = null;
	static_assert(sizeof p <= sizeof s);
	__builtin_memcpy(&p, &s, sizeof p);
	if (p != __builtin_slice_begin_ptr(s)) unreachable;

	mut a = [10: uint8]();
	let s: [: mut uint8] = a;
	if (__builtin_slice_begin_ptr(s) != &a[0]) unreachable;
	if (__builtin_slice_begin_mut_ptr(s) != &a[0]) unreachable;
}
