function bitreverse_test()
{
	let n = 0x00u8;
	if (__builtin_bitreverse_u8(n) != 0x00) unreachable;

	let n = 0xffu8;
	if (__builtin_bitreverse_u8(n) != 0xff) unreachable;

	let n = 0b1010'0011u8;
	if (__builtin_bitreverse_u8(n) != 0b1100'0101) unreachable;

	let n = 0x0000u16;
	if (__builtin_bitreverse_u16(n) != 0x0000) unreachable;

	let n = 0xffffu16;
	if (__builtin_bitreverse_u16(n) != 0xffff) unreachable;

	let n = 0b0100'1110'1010'0011u16;
	if (__builtin_bitreverse_u16(n) != 0b1100'0101'0111'0010) unreachable;

	let n = 0x0000'0000u32;
	if (__builtin_bitreverse_u32(n) != 0x0000'0000) unreachable;

	let n = 0xffff'ffffu32;
	if (__builtin_bitreverse_u32(n) != 0xffff'ffff) unreachable;

	let n = 0b0110'0010'0110'0101'1111'0111'0011'1001u32;
	if (__builtin_bitreverse_u32(n) != 0b1001'1100'1110'1111'1010'0110'0100'0110) unreachable;

	let n = 0x0000'0000'0000'0000u64;
	if (__builtin_bitreverse_u64(n) != 0x0000'0000'0000'0000) unreachable;

	let n = 0xffff'ffff'ffff'ffffu64;
	if (__builtin_bitreverse_u64(n) != 0xffff'ffff'ffff'ffff) unreachable;

	let n = 0b1101'1011'0110'0110'1010'0011'0011'1111'1100'0011'0000'0111'0011'1110'1110'0110u64;
	if (__builtin_bitreverse_u64(n) != 0b0110'0111'0111'1100'1110'0000'1100'0011'1111'1100'1100'0101'0110'0110'1101'1011) unreachable;
}

function popcount_test()
{
	let n = 0x00u8;
	if (__builtin_popcount_u8(n) != 0) unreachable;

	let n = 0xffu8;
	if (__builtin_popcount_u8(n) != 8) unreachable;

	//        2    2
	let n = 0b1010'0011u8;
	if (__builtin_popcount_u8(n) != 4) unreachable;

	let n = 0x0000u16;
	if (__builtin_popcount_u16(n) != 0) unreachable;

	let n = 0xffffu16;
	if (__builtin_popcount_u16(n) != 16) unreachable;

	//        1    3    2    2
	let n = 0b0100'1110'1010'0011u16;
	if (__builtin_popcount_u16(n) != 8) unreachable;

	let n = 0x0000'0000u32;
	if (__builtin_popcount_u32(n) != 0) unreachable;

	let n = 0xffff'ffffu32;
	if (__builtin_popcount_u32(n) != 32) unreachable;

	//        2    1    2    2    4    3    2    2
	let n = 0b0110'0010'0110'0101'1111'0111'0011'1001u32;
	if (__builtin_popcount_u32(n) != 18) unreachable;

	let n = 0x0000'0000'0000'0000u64;
	if (__builtin_popcount_u64(n) != 0) unreachable;

	let n = 0xffff'ffff'ffff'ffffu64;
	if (__builtin_popcount_u64(n) != 64) unreachable;

	//        3    3    2    2    2    2    2    4    2    2    0    3    2    3    3    2
	let n = 0b1101'1011'0110'0110'1010'0011'0011'1111'1100'0011'0000'0111'0011'1110'1110'0110u64;
	if (__builtin_popcount_u64(n) != 37) unreachable;
}

function byteswap_test()
{
	let n = 0x0000u16;
	if (__builtin_byteswap_u16(n) != 0x0000) unreachable;

	let n = 0xffffu16;
	if (__builtin_byteswap_u16(n) != 0xffff) unreachable;

	let n = 0x4ea3u16;
	if (__builtin_byteswap_u16(n) != 0xa34e) unreachable;

	let n = 0x0000'0000u32;
	if (__builtin_byteswap_u32(n) != 0x0000'0000) unreachable;

	let n = 0xffff'ffffu32;
	if (__builtin_byteswap_u32(n) != 0xffff'ffff) unreachable;

	let n = 0x6265'f739u32;
	if (__builtin_byteswap_u32(n) != 0x39f7'6562) unreachable;

	let n = 0x0000'0000'0000'0000u64;
	if (__builtin_byteswap_u64(n) != 0x0000'0000'0000'0000) unreachable;

	let n = 0xffff'ffff'ffff'ffffu64;
	if (__builtin_byteswap_u64(n) != 0xffff'ffff'ffff'ffff) unreachable;

	let n = 0xdb66'a33f'c307'3ee6u64;
	if (__builtin_byteswap_u64(n) != 0xe63e'07c3'3fa3'66db) unreachable;
}

function clz = __builtin_clz_u8;
function clz = __builtin_clz_u16;
function clz = __builtin_clz_u32;
function clz = __builtin_clz_u64;

function clz_test(T: typename)
{
	consteval bit_count = 8 * sizeof T;

	let n = (1 as T) << (bit_count - 1);
	for (let i in 0..bit_count)
	{
		if (clz(n >> i) != i) unreachable;
	}

	let n = ~(0 as T);
	for (let i in 0..bit_count)
	{
		if (clz(n >> i) != i) unreachable;
	}

	let n = 0 as T;
	if (clz(n) != bit_count) unreachable;
}

function ctz = __builtin_ctz_u8;
function ctz = __builtin_ctz_u16;
function ctz = __builtin_ctz_u32;
function ctz = __builtin_ctz_u64;

function ctz_test(T: typename)
{
	consteval bit_count = 8 * sizeof T;

	let n = 1 as T;
	for (let i in 0..bit_count)
	{
		if (ctz(n << i) != i) unreachable;
	}

	let n = ~(0 as T);
	for (let i in 0..bit_count)
	{
		if (ctz(n << i) != i) unreachable;
	}

	let n = 0 as T;
	if (ctz(n) != bit_count) unreachable;
}

function fshl_test()
{
	let a = 0b1010'0011u8;
	let b = 0b0110'1010u8;
	if (__builtin_fshl_u8(a, b, 0) != a) unreachable;
	if (__builtin_fshl_u8(a, b, 1) != 0b0100'0110) unreachable;
	if (__builtin_fshl_u8(a, b, 3) != 0b0001'1011) unreachable;
	if (__builtin_fshl_u8(a, b, 6) != 0b1101'1010) unreachable;
	if (__builtin_fshl_u8(a, b, 7) != 0b1011'0101) unreachable;
	if (__builtin_fshl_u8(a, b, 8) != a) unreachable;
	if (__builtin_fshl_u8(a, b, 11) != 0b0001'1011) unreachable;
	if (__builtin_fshl_u8(a, b, 123) != 0b0001'1011) unreachable;

	let a = 0b0100'1110'1010'0011u16;
	let b = 0b0100'0101'1010'1000u16;
	if (__builtin_fshl_u16(a, b, 0) != a) unreachable;
	if (__builtin_fshl_u16(a, b, 1) != 0b1001'1101'0100'0110) unreachable;
	if (__builtin_fshl_u16(a, b, 5) != 0b1101'0100'0110'1000) unreachable;
	if (__builtin_fshl_u16(a, b, 8) != 0b1010'0011'0100'0101) unreachable;
	if (__builtin_fshl_u16(a, b, 11) != 0b0001'1010'0010'1101) unreachable;
	if (__builtin_fshl_u16(a, b, 15) != 0b1010'0010'1101'0100) unreachable;
	if (__builtin_fshl_u16(a, b, 16) != a) unreachable;
	if (__builtin_fshl_u16(a, b, 22) != 0b1010'1000'1101'0001) unreachable;
	if (__builtin_fshl_u16(a, b, 123) != 0b0001'1010'0010'1101) unreachable;

	let a = 0b0110'0010'0110'0101'1111'0111'0011'1001u32;
	let b = 0b1111'1001'0110'0000'1001'0010'0010'1110u32;
	if (__builtin_fshl_u32(a, b, 0) != a) unreachable;
	if (__builtin_fshl_u32(a, b, 1) != 0b1100'0100'1100'1011'1110'1110'0111'0011) unreachable;
	if (__builtin_fshl_u32(a, b, 8) != 0b0110'0101'1111'0111'0011'1001'1111'1001) unreachable;
	if (__builtin_fshl_u32(a, b, 9) != 0b1100'1011'1110'1110'0111'0011'1111'0010) unreachable;
	if (__builtin_fshl_u32(a, b, 15) != 0b1111'1011'1001'1100'1111'1100'1011'0000) unreachable;
	if (__builtin_fshl_u32(a, b, 21) != 0b1110'0111'0011'1111'0010'1100'0001'0010) unreachable;
	if (__builtin_fshl_u32(a, b, 28) != 0b1001'1111'1001'0110'0000'1001'0010'0010) unreachable;
	if (__builtin_fshl_u32(a, b, 32) != a) unreachable;
	if (__builtin_fshl_u32(a, b, 42) != 0b1001'0111'1101'1100'1110'0111'1110'0101) unreachable;
	if (__builtin_fshl_u32(a, b, 70) != 0b1001'1001'0111'1101'1100'1110'0111'1110) unreachable;
	if (__builtin_fshl_u32(a, b, 123) != 0b1100'1111'1100'1011'0000'0100'1001'0001) unreachable;

	let a = 0b1101'1011'0110'0110'1010'0011'0011'1111'1100'0011'0000'0111'0011'1110'1110'0110u64;
	let b = 0b0100'0111'1110'1010'0011'1010'1001'0111'1110'0110'0011'0000'1111'0100'1101'0011u64;
	if (__builtin_fshl_u64(a, b, 0) != a) unreachable;
	if (__builtin_fshl_u64(a, b, 1) != 0b1011'0110'1100'1101'0100'0110'0111'1111'1000'0110'0000'1110'0111'1101'1100'1100) unreachable;
	if (__builtin_fshl_u64(a, b, 12) != 0b0110'1010'0011'0011'1111'1100'0011'0000'0111'0011'1110'1110'0110'0100'0111'1110) unreachable;
	if (__builtin_fshl_u64(a, b, 17) != 0b0100'0110'0111'1111'1000'0110'0000'1110'0111'1101'1100'1100'1000'1111'1101'0100) unreachable;
	if (__builtin_fshl_u64(a, b, 26) != 0b1111'1111'0000'1100'0001'1100'1111'1011'1001'1001'0001'1111'1010'1000'1110'1010) unreachable;
	if (__builtin_fshl_u64(a, b, 37) != 0b0110'0000'1110'0111'1101'1100'1100'1000'1111'1101'0100'0111'0101'0010'1111'1100) unreachable;
	if (__builtin_fshl_u64(a, b, 50) != 0b1111'1011'1001'1001'0001'1111'1010'1000'1110'1010'0101'1111'1001'1000'1100'0011) unreachable;
	if (__builtin_fshl_u64(a, b, 64) != a) unreachable;
	if (__builtin_fshl_u64(a, b, 99) != 0b0001'1000'0011'1001'1111'0111'0011'0010'0011'1111'0101'0001'1101'0100'1011'1111) unreachable;
	if (__builtin_fshl_u64(a, b, 123) != 0b0011'0010'0011'1111'0101'0001'1101'0100'1011'1111'0011'0001'1000'0111'1010'0110) unreachable;
	if (__builtin_fshl_u64(a, b, 123456) != a) unreachable;
}

function main()
{
	bitreverse_test();
	popcount_test();
	byteswap_test();
	clz_test(uint8);
	clz_test(uint16);
	clz_test(uint32);
	clz_test(uint64);
	ctz_test(uint8);
	ctz_test(uint16);
	ctz_test(uint32);
	ctz_test(uint64);
	fshl_test();
}
