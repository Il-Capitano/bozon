// Copyright 2018 Ulf Adams
//
// The contents of this file may be used under the terms of the Apache License,
// Version 2.0.
//
//    (See accompanying file LICENSE-Apache or copy at
//     http://www.apache.org/licenses/LICENSE-2.0)
//
// Alternatively, the contents of this file may be used under the terms of
// the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE-Boost or copy at
//     https://www.boost.org/LICENSE_1_0.txt)
//
// Unless required by applicable law or agreed to in writing, this software
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.

// A table of all two-digit numbers. This is used to speed up decimal digit
// generation by copying pairs of digits into the final output.
export consteval DIGIT_TABLE: [200: uint8] = [
	// "00" starts here
	48, 48, 48, 49, 48, 50, 48, 51, 48, 52,
	48, 53, 48, 54, 48, 55, 48, 56, 48, 57,
	// "10" starts here
	49, 48, 49, 49, 49, 50, 49, 51, 49, 52,
	49, 53, 49, 54, 49, 55, 49, 56, 49, 57,
	// "20" starts here
	50, 48, 50, 49, 50, 50, 50, 51, 50, 52,
	50, 53, 50, 54, 50, 55, 50, 56, 50, 57,
	// "30" starts here
	51, 48, 51, 49, 51, 50, 51, 51, 51, 52,
	51, 53, 51, 54, 51, 55, 51, 56, 51, 57,
	// "40" starts here
	52, 48, 52, 49, 52, 50, 52, 51, 52, 52,
	52, 53, 52, 54, 52, 55, 52, 56, 52, 57,
	// "50" starts here
	53, 48, 53, 49, 53, 50, 53, 51, 53, 52,
	53, 53, 53, 54, 53, 55, 53, 56, 53, 57,
	// "60" starts here
	54, 48, 54, 49, 54, 50, 54, 51, 54, 52,
	54, 53, 54, 54, 54, 55, 54, 56, 54, 57,
	// "70" starts here
	55, 48, 55, 49, 55, 50, 55, 51, 55, 52,
	55, 53, 55, 54, 55, 55, 55, 56, 55, 57,
	// "80" starts here
	56, 48, 56, 49, 56, 50, 56, 51, 56, 52,
	56, 53, 56, 54, 56, 55, 56, 56, 56, 57,
	// "90" starts here
	57, 48, 57, 49, 57, 50, 57, 51, 57, 52,
	57, 53, 57, 54, 57, 55, 57, 56, 57, 57
];

static_assert({
	let good = true;
	const table = DIGIT_TABLE;
	for (let i = 0; i < 100; ++i)
	{
		good &= table[2 * i]     == ('0' + i / 10) as uint32;
		good &= table[2 * i + 1] == ('0' + i % 10) as uint32;
	}
	good
});

/*
export consteval DIGIT_TABLE: [200: uint8] = [
	'0','0','0','1','0','2','0','3','0','4',
	'0','5','0','6','0','7','0','8','0','9',
	'1','0','1','1','1','2','1','3','1','4',
	'1','5','1','6','1','7','1','8','1','9',
	'2','0','2','1','2','2','2','3','2','4',
	'2','5','2','6','2','7','2','8','2','9',
	'3','0','3','1','3','2','3','3','3','4',
	'3','5','3','6','3','7','3','8','3','9',
	'4','0','4','1','4','2','4','3','4','4',
	'4','5','4','6','4','7','4','8','4','9',
	'5','0','5','1','5','2','5','3','5','4',
	'5','5','5','6','5','7','5','8','5','9',
	'6','0','6','1','6','2','6','3','6','4',
	'6','5','6','6','6','7','6','8','6','9',
	'7','0','7','1','7','2','7','3','7','4',
	'7','5','7','6','7','7','7','8','7','9',
	'8','0','8','1','8','2','8','3','8','4',
	'8','5','8','6','8','7','8','8','8','9',
	'9','0','9','1','9','2','9','3','9','4',
	'9','5','9','6','9','7','9','8','9','9'
];
*/
