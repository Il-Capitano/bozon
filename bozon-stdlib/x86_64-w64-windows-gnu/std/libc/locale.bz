import types;
import stddef;
export struct lconv
{
	.decimal_point: ?*char;
	.thousands_sep: ?*char;
	.grouping: ?*char;
	.int_curr_symbol: ?*char;
	.currency_symbol: ?*char;
	.mon_decimal_point: ?*char;
	.mon_thousands_sep: ?*char;
	.mon_grouping: ?*char;
	.positive_sign: ?*char;
	.negative_sign: ?*char;
	.int_frac_digits: char;
	.frac_digits: char;
	.p_cs_precedes: char;
	.p_sep_by_space: char;
	.n_cs_precedes: char;
	.n_sep_by_space: char;
	.p_sign_posn: char;
	.n_sign_posn: char;
	._W_decimal_point: ?*wchar_t;
	._W_thousands_sep: ?*wchar_t;
	._W_int_curr_symbol: ?*wchar_t;
	._W_currency_symbol: ?*wchar_t;
	._W_mon_decimal_point: ?*wchar_t;
	._W_mon_thousands_sep: ?*wchar_t;
	._W_positive_sign: ?*wchar_t;
	._W_negative_sign: ?*wchar_t;
}
@symbol_name("localeconv") export function "c" localeconv() -> ?*lconv;
@symbol_name("setlocale") export function "c" setlocale(category: int, locale: ?*const char) -> ?*char;
export function LC_ALL() -> int
{
	return 0;
}
export function LC_COLLATE() -> int
{
	return 1;
}
export function LC_CTYPE() -> int
{
	return 2;
}
export function LC_MONETARY() -> int
{
	return 3;
}
export function LC_NUMERIC() -> int
{
	return 4;
}
export function LC_TIME() -> int
{
	return 5;
}
