import types;

export struct FILE;

@symbol_name("fopen")   export function "c" fopen(filename: c_str, mode: c_str) -> *FILE;
@symbol_name("freopen") export function "c" freopen(filename: c_str, mode: c_str, stream: *FILE) -> *FILE;
@symbol_name("fclose")  export function "c" fclose(stream: *FILE) -> int;
@symbol_name("fflush")  export function "c" fflush(stream: *FILE) -> int;
@symbol_name("setbuf")  export function "c" setbuf(stream: *FILE, buffer: *uint8);
@symbol_name("setvbuf") export function "c" setvbuf(stream: *FILE, buffer: *uint8, mode: int, size: size_t) -> int;

@symbol_name("fread")  export function "c" fread(buffer: *void, size: size_t, count: size_t, stream: *FILE) -> size_t;
@symbol_name("fwrite") export function "c" fwrite(buffer: *const void, size: size_t, count: size_t, stream: *FILE) -> size_t;

@symbol_name("fgetc")   export function "c" fgetc(stream: *FILE) -> int;
@symbol_name("getc")    export function "c" getc(stream: *FILE) -> int;
@symbol_name("fgets")   export function "c" fgets(str: mut_c_str, count: int, stream: *FILE) -> mut_c_str;
@symbol_name("fputc")   export function "c" fputc(ch: int, stream: *FILE) -> int;
@symbol_name("putc")    export function "c" putc(ch: int, stream: *FILE) -> int;
@symbol_name("fputs")   export function "c" fputs(str: c_str, stream: *FILE) -> int;
@symbol_name("getchar") export function "c" getchar() -> int;
@symbol_name("putchar") export function "c" putchar(ch: int) -> int;
@symbol_name("puts")    export function "c" puts(str: c_str) -> int;
@symbol_name("ungetc")  export function "c" ungetc(ch: int, stream: *FILE) -> int;

@symbol_name("ftell")   export function "c" ftell(stream: *FILE) -> long;
// @symbol_name("fgetpos") export function "c" fgetpos(stream: *FILE, pos: *fpos_t) -> int;
@symbol_name("fseek")   export function "c" fseek(stream: *FILE, offset: long, origin: int) -> int;
// @symbol_name("fsetpos") export function "c" fsetpos(stream: *FILE, pos: *const fpos_t) -> int;
@symbol_name("rewind")  export function "c" rewind(stream: *FILE);

@symbol_name("clearerr") export function "c" clearerr(stream: *FILE);
@symbol_name("feof")     export function "c" feof(stream: *FILE) -> int;
@symbol_name("ferror")   export function "c" ferror(stream: *FILE) -> int;
@symbol_name("perror")   export function "c" perror(s: c_str);

@symbol_name("remove")  export function "c" remove(fname: c_str) -> int;
@symbol_name("rename")  export function "c" rename(old_filename: c_str, new_filename: c_str) -> int;
@symbol_name("tmpfile") export function "c" tmpfile() -> *FILE;
@symbol_name("tmpnam")  export function "c" tmpnam(filename: mut_c_str) -> mut_c_str;

@symbol_name("__bozon_get_stdout") export function "c" stdout() -> *FILE;
@symbol_name("__bozon_get_stderr") export function "c" stderr() -> *FILE;
