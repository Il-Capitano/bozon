import types;
import stddef;
@__libc_internal struct _G_fpos_t
{
	.__pos: __off_t;
	.__state: __mbstate_t;
}
@__libc_internal struct _IO_codecvt;
@__libc_internal struct _IO_marker;
@__libc_internal struct _IO_wide_data;
@__libc_internal struct __mbstate_t
{
	.__count: int;
	.__value: /* union type */[1: int32];
}
@__libc_struct("stdio.h", "FILE") struct _IO_FILE
{
	._flags: int;
	._IO_read_ptr: ?*mut char;
	._IO_read_end: ?*mut char;
	._IO_read_base: ?*mut char;
	._IO_write_base: ?*mut char;
	._IO_write_ptr: ?*mut char;
	._IO_write_end: ?*mut char;
	._IO_buf_base: ?*mut char;
	._IO_buf_end: ?*mut char;
	._IO_save_base: ?*mut char;
	._IO_backup_base: ?*mut char;
	._IO_save_end: ?*mut char;
	._markers: ?*mut _IO_marker;
	._chain: ?*mut _IO_FILE;
	._fileno: int;
	._flags2: int;
	._old_offset: __off_t;
	._cur_column: unsigned_short;
	._vtable_offset: signed_char;
	._shortbuf: [1: char];
	._lock: ?*mut _IO_lock_t;
	._offset: __off64_t;
	._codecvt: ?*mut _IO_codecvt;
	._wide_data: ?*mut _IO_wide_data;
	._freeres_list: ?*mut _IO_FILE;
	._freeres_buf: ?*mut void;
	.__pad5: size_t;
	._mode: int;
	._unused2: [20: char];
}
export type FILE = _IO_FILE;
export type fpos_t = __fpos_t;
type _IO_lock_t = void;
type __fpos_t = _G_fpos_t;
type __off64_t = long;
type __off_t = long;
@__libc_function("stdio.h", "clearerr") export function "c" clearerr(stream: ?*mut FILE) -> void;
@__libc_function("stdio.h", "fclose") export function "c" fclose(stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "feof") export function "c" feof(stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "ferror") export function "c" ferror(stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "fflush") export function "c" fflush(stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "fgetc") export function "c" fgetc(stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "fgetpos") export function "c" fgetpos(stream: ?*mut FILE, pos: ?*mut fpos_t) -> int;
@__libc_function("stdio.h", "fgets") export function "c" fgets(s: ?*mut char, n: int, stream: ?*mut FILE) -> ?*mut char;
@__libc_function("stdio.h", "fopen") export function "c" fopen(filename: ?*char, modes: ?*char) -> ?*mut FILE;
@__libc_function("stdio.h", "fputc") export function "c" fputc(c: int, stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "fputs") export function "c" fputs(s: ?*char, stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "fread") export function "c" fread(ptr: ?*mut void, size: size_t, n: size_t, stream: ?*mut FILE) -> unsigned_long;
@__libc_function("stdio.h", "freopen") export function "c" freopen(filename: ?*char, modes: ?*char, stream: ?*mut FILE) -> ?*mut FILE;
@__libc_function("stdio.h", "fseek") export function "c" fseek(stream: ?*mut FILE, off: long, whence: int) -> int;
@__libc_function("stdio.h", "fsetpos") export function "c" fsetpos(stream: ?*mut FILE, pos: ?*fpos_t) -> int;
@__libc_function("stdio.h", "ftell") export function "c" ftell(stream: ?*mut FILE) -> long;
@__libc_function("stdio.h", "fwrite") export function "c" fwrite(ptr: ?*void, size: size_t, n: size_t, s: ?*mut FILE) -> unsigned_long;
@__libc_function("stdio.h", "getc") export function "c" getc(stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "getchar") export function "c" getchar() -> int;
@__libc_function("stdio.h", "perror") export function "c" perror(s: ?*char) -> void;
@__libc_function("stdio.h", "putc") export function "c" putc(c: int, stream: ?*mut FILE) -> int;
@__libc_function("stdio.h", "putchar") export function "c" putchar(c: int) -> int;
@__libc_function("stdio.h", "puts") export function "c" puts(s: ?*char) -> int;
@__libc_function("stdio.h", "remove") export function "c" remove(filename: ?*char) -> int;
@__libc_function("stdio.h", "rename") export function "c" rename(old: ?*char, new: ?*char) -> int;
@__libc_function("stdio.h", "rewind") export function "c" rewind(stream: ?*mut FILE) -> void;
@__libc_function("stdio.h", "setbuf") export function "c" setbuf(stream: ?*mut FILE, buf: ?*mut char) -> void;
@__libc_function("stdio.h", "setvbuf") export function "c" setvbuf(stream: ?*mut FILE, buf: ?*mut char, modes: int, n: size_t) -> int;
@__libc_function("stdio.h", "tmpfile") export function "c" tmpfile() -> ?*mut FILE;
@__libc_function("stdio.h", "tmpnam") export function "c" tmpnam(: ?*mut char) -> ?*mut char;
@__libc_function("stdio.h", "ungetc") export function "c" ungetc(c: int, stream: ?*mut FILE) -> int;
@__libc_macro("stdio.h", "BUFSIZ") export function BUFSIZ() -> int
{
	return 8192;
}
@__libc_macro("stdio.h", "EOF") export function EOF() -> int
{
	return -1;
}
@__libc_macro("stdio.h", "FILENAME_MAX") export function FILENAME_MAX() -> int
{
	return 4096;
}
@__libc_macro("stdio.h", "FOPEN_MAX") export function FOPEN_MAX() -> int
{
	return 16;
}
@__libc_macro("stdio.h", "L_tmpnam") export function L_tmpnam() -> int
{
	return 20;
}
@__libc_macro("stdio.h", "SEEK_CUR") export function SEEK_CUR() -> int
{
	return 1;
}
@__libc_macro("stdio.h", "SEEK_END") export function SEEK_END() -> int
{
	return 2;
}
@__libc_macro("stdio.h", "SEEK_SET") export function SEEK_SET() -> int
{
	return 0;
}
@__libc_macro("stdio.h", "TMP_MAX") export function TMP_MAX() -> int
{
	return 238328;
}
@__libc_macro("stdio.h", "_IOFBF") export function _IOFBF() -> int
{
	return 0;
}
@__libc_macro("stdio.h", "_IOLBF") export function _IOLBF() -> int
{
	return 1;
}
@__libc_macro("stdio.h", "_IONBF") export function _IONBF() -> int
{
	return 2;
}
@__libc_macro("stdio.h", "stderr") export function stderr() -> &mut ?*mut FILE
{
	return __macro_clash_stderr;
}
@__libc_macro("stdio.h", "stdin") export function stdin() -> &mut ?*mut FILE
{
	return __macro_clash_stdin;
}
@__libc_macro("stdio.h", "stdout") export function stdout() -> &mut ?*mut FILE
{
	return __macro_clash_stdout;
}
@__libc_internal @symbol_name("stderr") extern __macro_clash_stderr: mut ?*mut FILE;
@__libc_internal @symbol_name("stdin") extern __macro_clash_stdin: mut ?*mut FILE;
@__libc_internal @symbol_name("stdout") extern __macro_clash_stdout: mut ?*mut FILE;
