import types;
import stddef;
@symbol_name("memchr") export function "c" memchr(s: ?*const void, c: int, n: size_t) -> ?*void;
@symbol_name("memcmp") export function "c" memcmp(s1: ?*const void, s2: ?*const void, n: size_t) -> int;
@symbol_name("memcpy") export function "c" memcpy(dest: ?*void, src: ?*const void, n: size_t) -> ?*void;
@symbol_name("memmove") export function "c" memmove(dest: ?*void, src: ?*const void, n: size_t) -> ?*void;
@symbol_name("memset") export function "c" memset(s: ?*void, c: int, n: size_t) -> ?*void;
@symbol_name("strcat") export function "c" strcat(dest: ?*char, src: ?*const char) -> ?*char;
@symbol_name("strchr") export function "c" strchr(s: ?*const char, c: int) -> ?*char;
@symbol_name("strcmp") export function "c" strcmp(s1: ?*const char, s2: ?*const char) -> int;
@symbol_name("strcoll") export function "c" strcoll(s1: ?*const char, s2: ?*const char) -> int;
@symbol_name("strcpy") export function "c" strcpy(dest: ?*char, src: ?*const char) -> ?*char;
@symbol_name("strcspn") export function "c" strcspn(s: ?*const char, reject: ?*const char) -> unsigned_long;
@symbol_name("strerror") export function "c" strerror(errnum: int) -> ?*char;
@symbol_name("strlen") export function "c" strlen(s: ?*const char) -> unsigned_long;
@symbol_name("strncat") export function "c" strncat(dest: ?*char, src: ?*const char, n: size_t) -> ?*char;
@symbol_name("strncmp") export function "c" strncmp(s1: ?*const char, s2: ?*const char, n: size_t) -> int;
@symbol_name("strncpy") export function "c" strncpy(dest: ?*char, src: ?*const char, n: size_t) -> ?*char;
@symbol_name("strpbrk") export function "c" strpbrk(s: ?*const char, accept: ?*const char) -> ?*char;
@symbol_name("strrchr") export function "c" strrchr(s: ?*const char, c: int) -> ?*char;
@symbol_name("strspn") export function "c" strspn(s: ?*const char, accept: ?*const char) -> unsigned_long;
@symbol_name("strstr") export function "c" strstr(haystack: ?*const char, needle: ?*const char) -> ?*char;
@symbol_name("strtok") export function "c" strtok(s: ?*char, delim: ?*const char) -> ?*char;
@symbol_name("strxfrm") export function "c" strxfrm(dest: ?*char, src: ?*const char, n: size_t) -> unsigned_long;
