import types;
import stddef;
export struct div_t
{
	.quot: int;
	.rem: int;
}
export struct ldiv_t
{
	.quot: long;
	.rem: long;
}
export struct lldiv_t
{
	.quot: long_long;
	.rem: long_long;
}
@symbol_name("__ctype_get_mb_cur_max") function "c" __ctype_get_mb_cur_max() -> size_t;
@symbol_name("abort") export function "c" abort() -> void;
@symbol_name("abs") export function "c" abs(x: int) -> int;
@symbol_name("atof") export function "c" atof(nptr: ?*const char) -> double;
@symbol_name("atoi") export function "c" atoi(nptr: ?*const char) -> int;
@symbol_name("atol") export function "c" atol(nptr: ?*const char) -> long;
@symbol_name("calloc") export function "c" calloc(nmemb: size_t, size: size_t) -> ?*void;
@symbol_name("div") export function "c" div(numer: int, denom: int) -> div_t;
@symbol_name("exit") export function "c" exit(status: int) -> void;
@symbol_name("free") export function "c" free(ptr: ?*void) -> void;
@symbol_name("getenv") export function "c" getenv(name: ?*const char) -> ?*char;
@symbol_name("labs") export function "c" labs(x: long) -> long;
@symbol_name("ldiv") export function "c" ldiv(numer: long, denom: long) -> ldiv_t;
@symbol_name("lldiv") export function "c" lldiv(numer: long_long, denom: long_long) -> lldiv_t;
@symbol_name("malloc") export function "c" malloc(size: size_t) -> ?*void;
@symbol_name("mblen") export function "c" mblen(s: ?*const char, n: size_t) -> int;
@symbol_name("mbstowcs") export function "c" mbstowcs(pwcs: ?*wchar_t, s: ?*const char, n: size_t) -> size_t;
@symbol_name("mbtowc") export function "c" mbtowc(pwc: ?*wchar_t, s: ?*const char, n: size_t) -> int;
@symbol_name("rand") export function "c" rand() -> int;
@symbol_name("realloc") export function "c" realloc(ptr: ?*void, size: size_t) -> ?*void;
@symbol_name("srand") export function "c" srand(seed: unsigned_int) -> void;
@symbol_name("strtod") export function "c" strtod(nptr: ?*const char, endptr: ?*?*char) -> double;
@symbol_name("strtof") export function "c" strtof(nptr: ?*const char, endptr: ?*?*char) -> float;
@symbol_name("strtol") export function "c" strtol(nptr: ?*const char, endptr: ?*?*char, base: int) -> long;
@symbol_name("strtoul") export function "c" strtoul(nptr: ?*const char, endptr: ?*?*char, base: int) -> unsigned_long;
@symbol_name("system") export function "c" system(command: ?*const char) -> int;
@symbol_name("wcstombs") export function "c" wcstombs(s: ?*char, pwcs: ?*const wchar_t, n: size_t) -> size_t;
@symbol_name("wctomb") export function "c" wctomb(s: ?*char, wchar: wchar_t) -> int;
export function EXIT_FAILURE() -> int
{
	return 1;
}
export function EXIT_SUCCESS() -> int
{
	return 0;
}
export function MB_CUR_MAX() -> size_t
{
	return (__ctype_get_mb_cur_max());
}
export function RAND_MAX() -> int
{
	return 2147483647;
}
