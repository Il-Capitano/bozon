@__builtin("str_eq")
function __builtin_str_eq(lhs: str, rhs: str) -> bool
{
	if (__builtin_str_size(lhs) != __builtin_str_size(rhs))
	{
		return false;
	}

	let lhs_it = __builtin_str_begin_ptr(lhs);
	let rhs_it = __builtin_str_begin_ptr(rhs);
	const lhs_end = __builtin_str_end_ptr(lhs);
	if (lhs_it == rhs_it)
	{
		return true;
	}

	for (; lhs_it != lhs_end; ++lhs_it, ++rhs_it)
	{
		if (*lhs_it != *rhs_it)
		{
			return false;
		}
	}
	return true;
}

@__builtin("str_neq")
function __builtin_str_neq(lhs: str, rhs: str) -> bool
{
	if (__builtin_str_size(lhs) != __builtin_str_size(rhs))
	{
		return true;
	}

	let lhs_it = __builtin_str_begin_ptr(lhs);
	let rhs_it = __builtin_str_begin_ptr(rhs);
	const lhs_end = __builtin_str_end_ptr(lhs);
	if (lhs_it == rhs_it)
	{
		return false;
	}

	for (; lhs_it != lhs_end; ++lhs_it, ++rhs_it)
	{
		if (*lhs_it != *rhs_it)
		{
			return true;
		}
	}
	return false;
}

@__builtin("str_length")
function __builtin_str_length(s: str) -> usize
{
	let continuation_byte_count = 0uz;
	const str_as_slice = __builtin_slice_from_const_ptrs(__builtin_str_begin_ptr(s), __builtin_str_end_ptr(s));
	for (const c in str_as_slice)
	{
		if ((c & 0b1100'0000u8) == 0b1000'0000u8)
		{
			continuation_byte_count += 1uz;
		}
	}
	const size = __builtin_str_size(s);
	return size - continuation_byte_count;
}

@__builtin("str_starts_with")
function __builtin_str_starts_with(s: str, prefix: str) -> bool
{
	if (__builtin_str_size(s) < __builtin_str_size(prefix))
	{
		return false;
	}

	let s_it = __builtin_str_begin_ptr(s);
	let prefix_it = __builtin_str_begin_ptr(prefix);
	const prefix_end = __builtin_str_end_ptr(prefix);
	for (; prefix_it != prefix_end; ++s_it, ++prefix_it)
	{
		if (*s_it != *prefix_it)
		{
			return false;
		}
	}
	return true;
}

@__builtin("str_ends_with")
function __builtin_str_ends_with(s: str, postfix: str) -> bool
{
	if (__builtin_str_size(s) < __builtin_str_size(postfix))
	{
		return false;
	}

	let s_it = __builtin_str_end_ptr(s) - __builtin_str_size(postfix);
	let postfix_it = __builtin_str_begin_ptr(postfix);
	const postfix_end = __builtin_str_end_ptr(postfix);
	for (; postfix_it != postfix_end; ++s_it, ++postfix_it)
	{
		if (*s_it != *postfix_it)
		{
			return false;
		}
	}
	return true;
}
