; ModuleID = 'ryu_format.linux.ll'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@std.ryu.DIGIT_TABLE = internal unnamed_addr constant [200 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"
@std.ryu.DOUBLE_POW5_INV_SPLIT = internal global [342 x [2 x i64]] [[2 x i64] [i64 1, i64 2305843009213693952], [2 x i64] [i64 -7378697629483820646, i64 1844674407370955161], [2 x i64] [i64 5165088340638674453, i64 1475739525896764129], [2 x i64] [i64 7821419487252849886, i64 1180591620717411303], [2 x i64] [i64 8824922364862649494, i64 1888946593147858085], [2 x i64] [i64 7059937891890119595, i64 1511157274518286468], [2 x i64] [i64 -5420096130713635294, i64 1208925819614629174], [2 x i64] [i64 -8672153809141816470, i64 1934281311383406679], [2 x i64] [i64 -6937723047313453176, i64 1547425049106725343], [2 x i64] [i64 -1860829623108852217, i64 1237940039285380274], [2 x i64] [i64 -2977327396974163548, i64 1980704062856608439], [2 x i64] [i64 -2381861917579330838, i64 1584563250285286751], [2 x i64] [i64 9162556910162266299, i64 1267650600228229401], [2 x i64] [i64 7281393426775805432, i64 2028240960365167042], [2 x i64] [i64 -1553582888063176301, i64 1622592768292133633], [2 x i64] [i64 2446482504291369283, i64 1298074214633706907], [2 x i64] [i64 7603720821608101175, i64 2076918743413931051], [2 x i64] [i64 2393627842544570617, i64 1661534994731144841], [2 x i64] [i64 -1774446540706253830, i64 1329227995784915872], [2 x i64] [i64 -6528463279871916451, i64 2126764793255865396], [2 x i64] [i64 5845275820328197809, i64 1701411834604692317], [2 x i64] [i64 -2702476973221262399, i64 1361129467683753853], [2 x i64] [i64 3054734472329800808, i64 2177807148294006166], [2 x i64] [i64 -1245561236878069677, i64 1742245718635204932], [2 x i64] [i64 6382248639981364905, i64 1393796574908163946], [2 x i64] [i64 2832900194486363201, i64 2230074519853062314], [2 x i64] [i64 5955668970331000884, i64 1784059615882449851], [2 x i64] [i64 1075186361522890384, i64 1427247692705959881], [2 x i64] [i64 -5658399451047196032, i64 2283596308329535809], [2 x i64] [i64 -4526719560837756825, i64 1826877046663628647], [2 x i64] [i64 3757321980813615186, i64 1461501637330902918], [2 x i64] [i64 -8062188859574838821, i64 1169201309864722334], [2 x i64] [i64 5547241898389809503, i64 1870722095783555735], [2 x i64] [i64 4437793518711847602, i64 1496577676626844588], [2 x i64] [i64 -7517811629256252888, i64 1197262141301475670], [2 x i64] [i64 -960452162584273651, i64 1915619426082361072], [2 x i64] [i64 6610335899416401726, i64 1532495540865888858], [2 x i64] [i64 -5779777724692609589, i64 1225996432692711086], [2 x i64] [i64 -5558295544766265019, i64 1961594292308337738], [2 x i64] [i64 -757287621071101692, i64 1569275433846670190], [2 x i64] [i64 -4295178911598791677, i64 1255420347077336152], [2 x i64] [i64 7885109000409574610, i64 2008672555323737844], [2 x i64] [i64 -8449308058639981605, i64 1606938044258990275], [2 x i64] [i64 7997948812055656009, i64 1285550435407192220], [2 x i64] [i64 -5650025974420502002, i64 2056880696651507552], [2 x i64] [i64 2858676849947419045, i64 1645504557321206042], [2 x i64] [i64 -5091756149525885410, i64 1316403645856964833], [2 x i64] [i64 -768112209757596011, i64 2106245833371143733], [2 x i64] [i64 3074859046935833515, i64 1684996666696914987], [2 x i64] [i64 -4918810391935153834, i64 1347997333357531989], [2 x i64] [i64 -7870096627096246135, i64 2156795733372051183], [2 x i64] [i64 -2606728486935086585, i64 1725436586697640946], [2 x i64] [i64 8982663654677661702, i64 1380349269358112757], [2 x i64] [i64 -385133411483382570, i64 2208558830972980411], [2 x i64] [i64 -7686804358670526703, i64 1766847064778384329], [2 x i64] [i64 -6149443486936421362, i64 1413477651822707463], [2 x i64] [i64 -2460411949614453533, i64 2261564242916331941], [2 x i64] [i64 9099716884534168143, i64 1809251394333065553], [2 x i64] [i64 -3788272936598396455, i64 1447401115466452442], [2 x i64] [i64 4348079280205103483, i64 1157920892373161954], [2 x i64] [i64 -4111119595897565398, i64 1852673427797059126], [2 x i64] [i64 7779150767507678651, i64 1482138742237647301], [2 x i64] [i64 2533971799264232598, i64 1185710993790117841], [2 x i64] [i64 -3324342750661048490, i64 1897137590064188545], [2 x i64] [i64 -6348823015270749115, i64 1517710072051350836], [2 x i64] [i64 5988988032009131678, i64 1214168057641080669], [2 x i64] [i64 -1485665593011120286, i64 1942668892225729070], [2 x i64] [i64 -4877881289150806552, i64 1554135113780583256], [2 x i64] [i64 7165741412905085728, i64 1243308091024466605], [2 x i64] [i64 -6981557813061414451, i64 1989292945639146568], [2 x i64] [i64 -1895897435707221237, i64 1591434356511317254], [2 x i64] [i64 -1516717948565776990, i64 1273147485209053803], [2 x i64] [i64 4951948911778577463, i64 2037035976334486086], [2 x i64] [i64 272210314680951647, i64 1629628781067588869], [2 x i64] [i64 3907117066486671641, i64 1303703024854071095], [2 x i64] [i64 6251387306378674625, i64 2085924839766513752], [2 x i64] [i64 -2377587784380880946, i64 1668739871813211001], [2 x i64] [i64 9165976216721026213, i64 1334991897450568801], [2 x i64] [i64 7286864317269821294, i64 2135987035920910082], [2 x i64] [i64 -1549206175667963611, i64 1708789628736728065], [2 x i64] [i64 -4928713755276281212, i64 1367031702989382452], [2 x i64] [i64 6871453250525591353, i64 2187250724783011924], [2 x i64] [i64 9186511415162383406, i64 1749800579826409539], [2 x i64] [i64 -7408186126837734568, i64 1399840463861127631], [2 x i64] [i64 -8163748988198464986, i64 2239744742177804210], [2 x i64] [i64 8226396068408869304, i64 1791795793742243368], [2 x i64] [i64 -4486929589498635526, i64 1433436634993794694], [2 x i64] [i64 -7179087343197816842, i64 2293498615990071511], [2 x i64] [i64 5324776569667477496, i64 1834798892792057209], [2 x i64] [i64 7949170070475892320, i64 1467839114233645767], [2 x i64] [i64 -1019361573103106790, i64 1174271291386916613], [2 x i64] [i64 5747719112518849781, i64 1878834066219066582], [2 x i64] [i64 -2780522339468740821, i64 1503067252975253265], [2 x i64] [i64 -5913766686316902980, i64 1202453802380202612], [2 x i64] [i64 5295368560860596524, i64 1923926083808324180], [2 x i64] [i64 4236294848688477220, i64 1539140867046659344], [2 x i64] [i64 7078384693692692099, i64 1231312693637327475], [2 x i64] [i64 -7121328563801244258, i64 1970100309819723960], [2 x i64] [i64 9060332407926645887, i64 1576080247855779168], [2 x i64] [i64 -3819780517884414260, i64 1260864198284623334], [2 x i64] [i64 -6111648828615062817, i64 2017382717255397335], [2 x i64] [i64 -8578667877633960576, i64 1613906173804317868], [2 x i64] [i64 -3173585487365258138, i64 1291124939043454294], [2 x i64] [i64 -5077736779784413021, i64 2065799902469526871], [2 x i64] [i64 7005857020398200553, i64 1652639921975621497], [2 x i64] [i64 -1774012013165260204, i64 1322111937580497197], [2 x i64] [i64 -6527768035806326650, i64 2115379100128795516], [2 x i64] [i64 5845832015580669650, i64 1692303280103036413], [2 x i64] [i64 -6391380831761195250, i64 1353842624082429130], [2 x i64] [i64 841837113407818570, i64 2166148198531886609], [2 x i64] [i64 4362818505468165179, i64 1732918558825509287], [2 x i64] [i64 -3888442825109288503, i64 1386334847060407429], [2 x i64] [i64 -6221508520174861605, i64 2218135755296651887], [2 x i64] [i64 2401490813343931363, i64 1774508604237321510], [2 x i64] [i64 1921192650675145090, i64 1419606883389857208], [2 x i64] [i64 -615440573661678179, i64 2271371013423771532], [2 x i64] [i64 6886345170554478103, i64 1817096810739017226], [2 x i64] [i64 1819727321701672159, i64 1453677448591213781], [2 x i64] [i64 -2233566957380572596, i64 1162941958872971024], [2 x i64] [i64 -3573707131808916153, i64 1860707134196753639], [2 x i64] [i64 -2858965705447132922, i64 1488565707357402911], [2 x i64] [i64 8780873879868024632, i64 1190852565885922329], [2 x i64] [i64 2981351763563108441, i64 1905364105417475727], [2 x i64] [i64 -4993616218633333894, i64 1524291284333980581], [2 x i64] [i64 7073153469319063855, i64 1219433027467184465], [2 x i64] [i64 -7129698522799049449, i64 1951092843947495144], [2 x i64] [i64 -5703758818239239559, i64 1560874275157996115], [2 x i64] [i64 -8252355869333301970, i64 1248699420126396892], [2 x i64] [i64 1553625868034358140, i64 1997919072202235028], [2 x i64] [i64 8621598323911307159, i64 1598335257761788022], [2 x i64] [i64 -481418970354774919, i64 1278668206209430417], [2 x i64] [i64 -4459619167309550194, i64 2045869129935088668], [2 x i64] [i64 121653480894270168, i64 1636695303948070935], [2 x i64] [i64 97322784715416134, i64 1309356243158456748], [2 x i64] [i64 -3533632359197244509, i64 2094969989053530796], [2 x i64] [i64 8241140556867935363, i64 1675975991242824637], [2 x i64] [i64 -785785183989472356, i64 1340780792994259709], [2 x i64] [i64 -1257256294383155770, i64 2145249268790815535], [2 x i64] [i64 -4695153850248434939, i64 1716199415032652428], [2 x i64] [i64 -66774265456837628, i64 1372959532026121942], [2 x i64] [i64 -3796187639472850528, i64 2196735251241795108], [2 x i64] [i64 652398703163629901, i64 1757388200993436087], [2 x i64] [i64 -6856778666952916726, i64 1405910560794748869], [2 x i64] [i64 7475898206584884855, i64 2249456897271598191], [2 x i64] [i64 2291369750525997561, i64 1799565517817278553], [2 x i64] [i64 9211793429904618695, i64 1439652414253822842], [2 x i64] [i64 -18525771120251381, i64 2303443862806116547], [2 x i64] [i64 7363877012587619542, i64 1842755090244893238], [2 x i64] [i64 -5176944834155635336, i64 1474204072195914590], [2 x i64] [i64 -7830904682066418592, i64 1179363257756731672], [2 x i64] [i64 2227947767661371545, i64 1886981212410770676], [2 x i64] [i64 -1906990600612813087, i64 1509584969928616540], [2 x i64] [i64 -5214941295232160793, i64 1207667975942893232], [2 x i64] [i64 6413489186596184024, i64 1932268761508629172], [2 x i64] [i64 -2247906280206873427, i64 1545815009206903337], [2 x i64] [i64 5580372605318321905, i64 1236652007365522670], [2 x i64] [i64 8928596168509315048, i64 1978643211784836272], [2 x i64] [i64 -235820694676368608, i64 1582914569427869017], [2 x i64] [i64 7190041073742725760, i64 1266331655542295214], [2 x i64] [i64 436019273762630246, i64 2026130648867672343], [2 x i64] [i64 7727513048493924843, i64 1620904519094137874], [2 x i64] [i64 -8575384820172501418, i64 1296723615275310299], [2 x i64] [i64 4726128361433549347, i64 2074757784440496479], [2 x i64] [i64 7470251503888749801, i64 1659806227552397183], [2 x i64] [i64 -5091845241114731129, i64 1327844982041917746], [2 x i64] [i64 -4457603571041659483, i64 2124551971267068394], [2 x i64] [i64 -3566082856833327587, i64 1699641577013654715], [2 x i64] [i64 -6542215100208572392, i64 1359713261610923772], [2 x i64] [i64 4289851098633925465, i64 2175541218577478036], [2 x i64] [i64 -257467935834769951, i64 1740432974861982428], [2 x i64] [i64 3483374466074094362, i64 1392346379889585943], [2 x i64] [i64 1884050330976640656, i64 2227754207823337509], [2 x i64] [i64 5196589079523222848, i64 1782203366258670007], [2 x i64] [i64 -3221426365865242368, i64 1425762693006936005], [2 x i64] [i64 5913764258841343181, i64 2281220308811097609], [2 x i64] [i64 8420360221814984868, i64 1824976247048878087], [2 x i64] [i64 -642409452031832752, i64 1459980997639102469], [2 x i64] [i64 -513927561625466201, i64 1167984798111281975], [2 x i64] [i64 -8200981728084566569, i64 1868775676978051161], [2 x i64] [i64 4507261061758077715, i64 1495020541582440929], [2 x i64] [i64 7295157664148372495, i64 1196016433265952743], [2 x i64] [i64 7982903447895485668, i64 1913626293225524389], [2 x i64] [i64 -8371072500651252758, i64 1530901034580419511], [2 x i64] [i64 4371188443704728763, i64 1224720827664335609], [2 x i64] [i64 -4074144934298164949, i64 1959553324262936974], [2 x i64] [i64 -3259315947438531959, i64 1567642659410349579], [2 x i64] [i64 -2607452757950825567, i64 1254114127528279663], [2 x i64] [i64 3206773216762499739, i64 2006582604045247462], [2 x i64] [i64 -4813279056073820855, i64 1605266083236197969], [2 x i64] [i64 -3850623244859056684, i64 1284212866588958375], [2 x i64] [i64 4907049252451240275, i64 2054740586542333401], [2 x i64] [i64 236290587219081897, i64 1643792469233866721], [2 x i64] [i64 -3500316344966644806, i64 1315033975387093376], [2 x i64] [i64 -1911157337204721366, i64 2104054360619349402], [2 x i64] [i64 5849771759720043554, i64 1683243488495479522], [2 x i64] [i64 -2698880221707785803, i64 1346594790796383617], [2 x i64] [i64 -8007557169474367609, i64 2154551665274213788], [2 x i64] [i64 -2716696920837583764, i64 1723641332219371030], [2 x i64] [i64 -5862706351411977334, i64 1378913065775496824], [2 x i64] [i64 9066413911450387881, i64 2206260905240794919], [2 x i64] [i64 -7504264129807330988, i64 1765008724192635935], [2 x i64] [i64 8753983955121776503, i64 1412006979354108748], [2 x i64] [i64 -8129718560256619535, i64 2259211166966573997], [2 x i64] [i64 874922781278525018, i64 1807368933573259198], [2 x i64] [i64 8078635854506640661, i64 1445895146858607358], [2 x i64] [i64 -4605137760620418441, i64 1156716117486885886], [2 x i64] [i64 -3678871602250759182, i64 1850745787979017418], [2 x i64] [i64 746251532941302978, i64 1480596630383213935], [2 x i64] [i64 597001226353042382, i64 1184477304306571148], [2 x i64] [i64 -2734146852577042512, i64 1895163686890513836], [2 x i64] [i64 8880728962164096960, i64 1516130949512411069], [2 x i64] [i64 -7652812089236363725, i64 1212904759609928855], [2 x i64] [i64 -1176452898552450990, i64 1940647615375886168], [2 x i64] [i64 2748186495899949531, i64 1552518092300708935], [2 x i64] [i64 2198549196719959625, i64 1242014473840567148], [2 x i64] [i64 -171670099989974923, i64 1987223158144907436], [2 x i64] [i64 -7516033709475800585, i64 1589778526515925949], [2 x i64] [i64 -6012826967580640468, i64 1271822821212740759], [2 x i64] [i64 8826220925580526867, i64 2034916513940385215], [2 x i64] [i64 7060976740464421494, i64 1627933211152308172], [2 x i64] [i64 -1729916237112283451, i64 1302346568921846537], [2 x i64] [i64 -6457214794121563846, i64 2083754510274954460], [2 x i64] [i64 -8855120650039161400, i64 1667003608219963568], [2 x i64] [i64 -3394747705289418796, i64 1333602886575970854], [2 x i64] [i64 -5431596328463070074, i64 2133764618521553367], [2 x i64] [i64 3033420566713364587, i64 1707011694817242694], [2 x i64] [i64 6116085268112601993, i64 1365609355853794155], [2 x i64] [i64 -8661007644729388428, i64 2184974969366070648], [2 x i64] [i64 -3239457301041600419, i64 1747979975492856518], [2 x i64] [i64 1097782973908629988, i64 1398383980394285215], [2 x i64] [i64 1756452758253807981, i64 2237414368630856344], [2 x i64] [i64 5094511021344956708, i64 1789931494904685075], [2 x i64] [i64 4075608817075965366, i64 1431945195923748060], [2 x i64] [i64 6520974107321544586, i64 2291112313477996896], [2 x i64] [i64 1527430471115325346, i64 1832889850782397517], [2 x i64] [i64 -6156753252591560370, i64 1466311880625918013], [2 x i64] [i64 -1236053787331337972, i64 1173049504500734410], [2 x i64] [i64 9090360384495590213, i64 1876879207201175057], [2 x i64] [i64 -106409321887348476, i64 1501503365760940045], [2 x i64] [i64 -3774476272251789104, i64 1201202692608752036], [2 x i64] [i64 -2349813220860952243, i64 1921924308174003258], [2 x i64] [i64 1809498238053148529, i64 1537539446539202607], [2 x i64] [i64 -5931099039041301823, i64 1230031557231362085], [2 x i64] [i64 1578287981759648052, i64 1968050491570179337], [2 x i64] [i64 -6116067244076102204, i64 1574440393256143469], [2 x i64] [i64 -4892853795260881763, i64 1259552314604914775], [2 x i64] [i64 3239480371808320148, i64 2015283703367863641], [2 x i64] [i64 -1097764517295254205, i64 1612226962694290912], [2 x i64] [i64 6500486015647617283, i64 1289781570155432730], [2 x i64] [i64 -8045966448673363964, i64 2063650512248692368], [2 x i64] [i64 -2747424344196780848, i64 1650920409798953894], [2 x i64] [i64 -2197939475357424678, i64 1320736327839163115], [2 x i64] [i64 7551343283653851484, i64 2113178124542660985], [2 x i64] [i64 6041074626923081187, i64 1690542499634128788], [2 x i64] [i64 -6235186742687266020, i64 1352433999707303030], [2 x i64] [i64 1091747655926105338, i64 2163894399531684849], [2 x i64] [i64 4562746939482794594, i64 1731115519625347879], [2 x i64] [i64 7339546366328145998, i64 1384892415700278303], [2 x i64] [i64 8053925371383123274, i64 2215827865120445285], [2 x i64] [i64 6443140297106498619, i64 1772662292096356228], [2 x i64] [i64 -5913534206540532074, i64 1418129833677084982], [2 x i64] [i64 5295740528502789974, i64 2269007733883335972], [2 x i64] [i64 -3142105206681588667, i64 1815206187106668777], [2 x i64] [i64 4865013464138549713, i64 1452164949685335022], [2 x i64] [i64 -3486686858172980876, i64 1161731959748268017], [2 x i64] [i64 9178696285890871890, i64 1858771135597228828], [2 x i64] [i64 -3725089415513033457, i64 1487016908477783062], [2 x i64] [i64 4398626097073393881, i64 1189613526782226450], [2 x i64] [i64 7037801755317430209, i64 1903381642851562320], [2 x i64] [i64 5630241404253944167, i64 1522705314281249856], [2 x i64] [i64 814844308661245011, i64 1218164251424999885], [2 x i64] [i64 1303750893857992017, i64 1949062802279999816], [2 x i64] [i64 -2646348099655516710, i64 1559250241823999852], [2 x i64] [i64 5261619149759407279, i64 1247400193459199882], [2 x i64] [i64 -6338804619352589647, i64 1995840309534719811], [2 x i64] [i64 5997002748743659252, i64 1596672247627775849], [2 x i64] [i64 8486951013736837725, i64 1277337798102220679], [2 x i64] [i64 2511075177753209390, i64 2043740476963553087], [2 x i64] [i64 -5369837487281253134, i64 1634992381570842469], [2 x i64] [i64 -4295869989825002507, i64 1307993905256673975], [2 x i64] [i64 4194654460505726958, i64 2092790248410678361], [2 x i64] [i64 -333625246337328757, i64 1674232198728542688], [2 x i64] [i64 3422448617672047318, i64 1339385758982834151], [2 x i64] [i64 -1902779841208544938, i64 2143017214372534641], [2 x i64] [i64 -8900921502450656597, i64 1714413771498027713], [2 x i64] [i64 -3431388387218614954, i64 1371531017198422170], [2 x i64] [i64 5577825024675947042, i64 2194449627517475473], [2 x i64] [i64 -6605786424484973336, i64 1755559702013980378], [2 x i64] [i64 -1595280324846068345, i64 1404447761611184302], [2 x i64] [i64 -6241797334495619676, i64 2247116418577894884], [2 x i64] [i64 -4993437867596495741, i64 1797693134862315907], [2 x i64] [i64 3383947335406624054, i64 1438154507889852726], [2 x i64] [i64 -1964381892833222160, i64 2301047212623764361], [2 x i64] [i64 -8950203143750398374, i64 1840837770099011489], [2 x i64] [i64 -7160162515000318699, i64 1472670216079209191], [2 x i64] [i64 5339916432225476010, i64 1178136172863367353], [2 x i64] [i64 4854517476818851293, i64 1885017876581387765], [2 x i64] [i64 3883613981455081034, i64 1508014301265110212], [2 x i64] [i64 -4271806444319755819, i64 1206411441012088169], [2 x i64] [i64 -6834890310911609310, i64 1930258305619341071], [2 x i64] [i64 5600134195496443521, i64 1544206644495472857], [2 x i64] [i64 -2898590273086665829, i64 1235365315596378285], [2 x i64] [i64 6430302007287065643, i64 1976584504954205257], [2 x i64] [i64 -2234456023654168132, i64 1581267603963364205], [2 x i64] [i64 -5476913633665244829, i64 1265014083170691364], [2 x i64] [i64 -8763061813864391727, i64 2024022533073106183], [2 x i64] [i64 -3321100636349603058, i64 1619218026458484946], [2 x i64] [i64 8411165935146048523, i64 1295374421166787957], [2 x i64] [i64 -1299529762733963656, i64 2072599073866860731], [2 x i64] [i64 -8418321439670991571, i64 1658079259093488585], [2 x i64] [i64 8022738107230848036, i64 1326463407274790868], [2 x i64] [i64 9147032156827446534, i64 2122341451639665389], [2 x i64] [i64 -7439769533505684065, i64 1697873161311732311], [2 x i64] [i64 5116230817421183718, i64 1358298529049385849], [2 x i64] [i64 -2882077136351837022, i64 2173277646479017358], [2 x i64] [i64 1383687105660440706, i64 1738622117183213887], [2 x i64] [i64 -6271747944955468082, i64 1390897693746571109], [2 x i64] [i64 8411947361780802685, i64 2225436309994513775], [2 x i64] [i64 6729557889424642148, i64 1780349047995611020], [2 x i64] [i64 5383646311539713719, i64 1424279238396488816], [2 x i64] [i64 1235136468979721303, i64 2278846781434382106], [2 x i64] [i64 -2701239639558133281, i64 1823077425147505684], [2 x i64] [i64 -2160991711646506624, i64 1458461940118004547], [2 x i64] [i64 5649904260166615347, i64 1166769552094403638], [2 x i64] [i64 5350498001524674232, i64 1866831283351045821], [2 x i64] [i64 591049586477829062, i64 1493465026680836657], [2 x i64] [i64 -6905857960301557397, i64 1194772021344669325], [2 x i64] [i64 18673707743239135, i64 1911635234151470921], [2 x i64] [i64 -3674409848547319015, i64 1529308187321176736], [2 x i64] [i64 8128518565387875758, i64 1223446549856941389], [2 x i64] [i64 1937583260394870242, i64 1957514479771106223], [2 x i64] [i64 8928764237799716840, i64 1566011583816884978], [2 x i64] [i64 -3925035053985957497, i64 1252809267053507982], [2 x i64] [i64 8477339172590109297, i64 2004494827285612772], [2 x i64] [i64 -596826291411733209, i64 1603595861828490217], [2 x i64] [i64 6901236596354434079, i64 1282876689462792174], [2 x i64] [i64 -26067890058636443, i64 2052602703140467478], [2 x i64] [i64 3668494502695001169, i64 1642082162512373983], [2 x i64] [i64 -8133250842069730034, i64 1313665730009899186], [2 x i64] [i64 9122891541139893884, i64 2101865168015838698], [2 x i64] [i64 -3769733211313815862, i64 1681492134412670958], [2 x i64] [i64 673562245690857633, i64 1345193707530136767]]
@std.ryu.DOUBLE_POW5_SPLIT = internal global [326 x [2 x i64]] [[2 x i64] [i64 0, i64 1152921504606846976], [2 x i64] [i64 0, i64 1441151880758558720], [2 x i64] [i64 0, i64 1801439850948198400], [2 x i64] [i64 0, i64 2251799813685248000], [2 x i64] [i64 0, i64 1407374883553280000], [2 x i64] [i64 0, i64 1759218604441600000], [2 x i64] [i64 0, i64 2199023255552000000], [2 x i64] [i64 0, i64 1374389534720000000], [2 x i64] [i64 0, i64 1717986918400000000], [2 x i64] [i64 0, i64 2147483648000000000], [2 x i64] [i64 0, i64 1342177280000000000], [2 x i64] [i64 0, i64 1677721600000000000], [2 x i64] [i64 0, i64 2097152000000000000], [2 x i64] [i64 0, i64 1310720000000000000], [2 x i64] [i64 0, i64 1638400000000000000], [2 x i64] [i64 0, i64 2048000000000000000], [2 x i64] [i64 0, i64 1280000000000000000], [2 x i64] [i64 0, i64 1600000000000000000], [2 x i64] [i64 0, i64 2000000000000000000], [2 x i64] [i64 0, i64 1250000000000000000], [2 x i64] [i64 0, i64 1562500000000000000], [2 x i64] [i64 0, i64 1953125000000000000], [2 x i64] [i64 0, i64 1220703125000000000], [2 x i64] [i64 0, i64 1525878906250000000], [2 x i64] [i64 0, i64 1907348632812500000], [2 x i64] [i64 0, i64 1192092895507812500], [2 x i64] [i64 0, i64 1490116119384765625], [2 x i64] [i64 4611686018427387904, i64 1862645149230957031], [2 x i64] [i64 -8646911284551352320, i64 1164153218269348144], [2 x i64] [i64 -6196953087261802496, i64 1455191522836685180], [2 x i64] [i64 -3134505340649865216, i64 1818989403545856475], [2 x i64] [i64 -3918131675812331520, i64 2273736754432320594], [2 x i64] [i64 -4754675306596401152, i64 1421085471520200371], [2 x i64] [i64 -5943344133245501440, i64 1776356839400250464], [2 x i64] [i64 -2817494148129488896, i64 2220446049250313080], [2 x i64] [i64 -8678462870222012416, i64 1387778780781445675], [2 x i64] [i64 7598665485932036096, i64 1734723475976807094], [2 x i64] [i64 274959820560269312, i64 2168404344971008868], [2 x i64] [i64 -9051522149004607488, i64 1355252715606880542], [2 x i64] [i64 2520655369026404352, i64 1694065894508600678], [2 x i64] [i64 -6072552825571770368, i64 2117582368135750847], [2 x i64] [i64 -3795345515982356480, i64 1323488980084844279], [2 x i64] [i64 -4744181894977945600, i64 1654361225106055349], [2 x i64] [i64 3293144668132343808, i64 2067951531382569187], [2 x i64] [i64 -247627591630979072, i64 1292469707114105741], [2 x i64] [i64 8913837547316051968, i64 1615587133892632177], [2 x i64] [i64 -2692761121137098752, i64 2019483917365790221], [2 x i64] [i64 -6294661719138074624, i64 1262177448353618888], [2 x i64] [i64 -3256641130495205376, i64 1577721810442023610], [2 x i64] [i64 -8682487431546394624, i64 1972152263052529513], [2 x i64] [i64 -814868626289108736, i64 1232595164407830945], [2 x i64] [i64 8204786253993389888, i64 1540743955509788682], [2 x i64] [i64 1032610780636961552, i64 1925929944387235853], [2 x i64] [i64 2951224747111794922, i64 1203706215242022408], [2 x i64] [i64 3689030933889743652, i64 1504632769052528010], [2 x i64] [i64 -4612083369492596243, i64 1880790961315660012], [2 x i64] [i64 -576709096719178700, i64 1175494350822287507], [2 x i64] [i64 -720886370898973375, i64 1469367938527859384], [2 x i64] [i64 3710578054803671186, i64 1836709923159824231], [2 x i64] [i64 26536550077201078, i64 2295887403949780289], [2 x i64] [i64 -6900943683842831182, i64 1434929627468612680], [2 x i64] [i64 -4014493586376151074, i64 1793662034335765850], [2 x i64] [i64 8816941072311974870, i64 2242077542919707313], [2 x i64] [i64 -1406940857446097563, i64 1401298464324817070], [2 x i64] [i64 -6370362090235009857, i64 1751623080406021338], [2 x i64] [i64 5872105442488401391, i64 2189528850507526673], [2 x i64] [i64 -3247463126085830987, i64 1368455531567204170], [2 x i64] [i64 -8671014926034676638, i64 1710569414459005213], [2 x i64] [i64 -1615396620688569989, i64 2138211768073756516], [2 x i64] [i64 1296220121283337709, i64 1336382355046097823], [2 x i64] [i64 -2991410866823215768, i64 1670477943807622278], [2 x i64] [i64 -8350949601956407614, i64 2088097429759527848], [2 x i64] [i64 6309871544845715001, i64 1305060893599704905], [2 x i64] [i64 -5947718624225019960, i64 1631326116999631131], [2 x i64] [i64 -7434648280281274950, i64 2039157646249538914], [2 x i64] [i64 -6952498184389490796, i64 1274473528905961821], [2 x i64] [i64 532749306367912313, i64 1593091911132452277], [2 x i64] [i64 5277622651387278295, i64 1991364888915565346], [2 x i64] [i64 7910200175544436838, i64 1244603055572228341], [2 x i64] [i64 -3947307835851617664, i64 1555753819465285426], [2 x i64] [i64 8900923260467641632, i64 1944692274331606783], [2 x i64] [i64 -5966138008276193740, i64 1215432671457254239], [2 x i64] [i64 -7457672510345242175, i64 1519290839321567799], [2 x i64] [i64 9124653435777998898, i64 1899113549151959749], [2 x i64] [i64 8008751406574943263, i64 1186945968219974843], [2 x i64] [i64 5399253239791291175, i64 1483682460274968554], [2 x i64] [i64 -2474305487115661840, i64 1854603075343710692], [2 x i64] [i64 759402079766405302, i64 1159126922089819183], [2 x i64] [i64 -3662433418719381276, i64 1448908652612273978], [2 x i64] [i64 -9189727791826614499, i64 1811135815765342473], [2 x i64] [i64 -2263787702928492316, i64 2263919769706678091], [2 x i64] [i64 7808504722524468110, i64 1414949856066673807], [2 x i64] [i64 5148944884728197234, i64 1768687320083342259], [2 x i64] [i64 1824495087482858639, i64 2210859150104177824], [2 x i64] [i64 1140309429676786649, i64 1381786968815111140], [2 x i64] [i64 1425386787095983311, i64 1727233711018888925], [2 x i64] [i64 6393419502297367043, i64 2159042138773611156], [2 x i64] [i64 -5227484847918921406, i64 1349401336733506972], [2 x i64] [i64 -1922670041471263854, i64 1686751670916883715], [2 x i64] [i64 -2403337551839079817, i64 2108439588646104644], [2 x i64] [i64 803757039314269066, i64 1317774742903815403], [2 x i64] [i64 -3606989719284551571, i64 1647218428629769253], [2 x i64] [i64 4714634887749086344, i64 2059023035787211567], [2 x i64] [i64 -8582568241225290795, i64 1286889397367007229], [2 x i64] [i64 -1504838264676837686, i64 1608611746708759036], [2 x i64] [i64 2730638187581340797, i64 2010764683385948796], [2 x i64] [i64 -7516723169616437810, i64 1256727927116217997], [2 x i64] [i64 -172531925165771454, i64 1570909908895272496], [2 x i64] [i64 4396021111970173586, i64 1963637386119090621], [2 x i64] [i64 5053356204195052443, i64 1227273366324431638], [2 x i64] [i64 -2906676781610960254, i64 1534091707905539547], [2 x i64] [i64 -3633345977013700317, i64 1917614634881924434], [2 x i64] [i64 -4576684244847256650, i64 1198509146801202771], [2 x i64] [i64 -5720855306059070813, i64 1498136433501503464], [2 x i64] [i64 -2539383114146450612, i64 1872670541876879330], [2 x i64] [i64 -3892957455555225585, i64 1170419088673049581], [2 x i64] [i64 4357175217410743827, i64 1463023860841311977], [2 x i64] [i64 -8388589033518733928, i64 1828779826051639971], [2 x i64] [i64 7961007781811134206, i64 2285974782564549964], [2 x i64] [i64 -4247742173222816929, i64 1428734239102843727], [2 x i64] [i64 -5309677716528521161, i64 1785917798878554659], [2 x i64] [i64 -6637097145660651452, i64 2232397248598193324], [2 x i64] [i64 -1842342706824213205, i64 1395248280373870827], [2 x i64] [i64 -2302928383530266507, i64 1744060350467338534], [2 x i64] [i64 -7490346497840221037, i64 2180075438084173168], [2 x i64] [i64 6847748484918331612, i64 1362547148802608230], [2 x i64] [i64 -663686430706861293, i64 1703183936003260287], [2 x i64] [i64 -829608038383576617, i64 2128979920004075359], [2 x i64] [i64 -518505023989735386, i64 1330612450002547099], [2 x i64] [i64 -648131279987169232, i64 1663265562503183874], [2 x i64] [i64 -5421850118411349444, i64 2079081953128979843], [2 x i64] [i64 5834715712847682405, i64 1299426220705612402], [2 x i64] [i64 -1929977395795172801, i64 1624282775882015502], [2 x i64] [i64 -7024157763171353905, i64 2030353469852519378], [2 x i64] [i64 -6695941611195790143, i64 1268970918657824611], [2 x i64] [i64 -8369927013994737679, i64 1586213648322280764], [2 x i64] [i64 -5850722749066034194, i64 1982767060402850955], [2 x i64] [i64 5566670318688504437, i64 1239229412751781847], [2 x i64] [i64 2346651879933242642, i64 1549036765939727309], [2 x i64] [i64 7545000868343941206, i64 1936295957424659136], [2 x i64] [i64 4715625542714963254, i64 1210184973390411960], [2 x i64] [i64 5894531928393704067, i64 1512731216738014950], [2 x i64] [i64 -1855207126362645724, i64 1890914020922518687], [2 x i64] [i64 -1159504453976653577, i64 1181821263076574179], [2 x i64] [i64 -1449380567470816972, i64 1477276578845717724], [2 x i64] [i64 2799960309088866689, i64 1846595723557147156], [2 x i64] [i64 -7473396843674234127, i64 1154122327223216972], [2 x i64] [i64 -4730060036165404755, i64 1442652909029021215], [2 x i64] [i64 -5912575045206755944, i64 1803316136286276519], [2 x i64] [i64 -7390718806508444929, i64 2254145170357845649], [2 x i64] [i64 -7513235640390177, i64 1408840731473653530], [2 x i64] [i64 -4621077562977875625, i64 1761050914342066913], [2 x i64] [i64 3447025083132431277, i64 2201313642927583642], [2 x i64] [i64 6766076695385157452, i64 1375821026829739776], [2 x i64] [i64 8457595869231446815, i64 1719776283537174720], [2 x i64] [i64 -7874749237170243097, i64 2149720354421468400], [2 x i64] [i64 6607496772837067824, i64 1343575221513417750], [2 x i64] [i64 -964001070808441028, i64 1679469026891772187], [2 x i64] [i64 -1205001338510551285, i64 2099336283614715234], [2 x i64] [i64 -3058968845782788505, i64 1312085177259197021], [2 x i64] [i64 5399660979626290177, i64 1640106471573996277], [2 x i64] [i64 -7085481830749300991, i64 2050133089467495346], [2 x i64] [i64 -6734269153432007072, i64 1281333180917184591], [2 x i64] [i64 -8417836441790008839, i64 1601666476146480739], [2 x i64] [i64 7924448521472040567, i64 2002083095183100924], [2 x i64] [i64 -4270591710934750454, i64 1251301934489438077], [2 x i64] [i64 3885132398186337741, i64 1564127418111797597], [2 x i64] [i64 -8978642557549241536, i64 1955159272639746996], [2 x i64] [i64 -3305808589254582008, i64 1221974545399841872], [2 x i64] [i64 479425281859160394, i64 1527468181749802341], [2 x i64] [i64 5210967620751338397, i64 1909335227187252926], [2 x i64] [i64 -1354831255457801406, i64 1193334516992033078], [2 x i64] [i64 -6305225087749639662, i64 1491668146240041348], [2 x i64] [i64 -3269845341259661673, i64 1864585182800051685], [2 x i64] [i64 -6655339356714676450, i64 1165365739250032303], [2 x i64] [i64 -8319174195893345562, i64 1456707174062540379], [2 x i64] [i64 8047776328842869663, i64 1820883967578175474], [2 x i64] [i64 836348374198811271, i64 2276104959472719343], [2 x i64] [i64 7440246761515338900, i64 1422565599670449589], [2 x i64] [i64 -4534749603387990086, i64 1778206999588061986], [2 x i64] [i64 8166621051047176104, i64 2222758749485077483], [2 x i64] [i64 2798295147690791113, i64 1389224218428173427], [2 x i64] [i64 -1113817083813899013, i64 1736530273035216783], [2 x i64] [i64 -1392271354767373766, i64 2170662841294020979], [2 x i64] [i64 8353202440125167204, i64 1356664275808763112], [2 x i64] [i64 -8005241023553092611, i64 1695830344760953890], [2 x i64] [i64 3828506775840797949, i64 2119787930951192363], [2 x i64] [i64 86973725686804766, i64 1324867456844495227], [2 x i64] [i64 -4502968861318881947, i64 1656084321055619033], [2 x i64] [i64 3594660960206173375, i64 2070105401319523792], [2 x i64] [i64 2246663100128858359, i64 1293815875824702370], [2 x i64] [i64 -6415043161693702859, i64 1617269844780877962], [2 x i64] [i64 5816254103165035138, i64 2021587305976097453], [2 x i64] [i64 5941001823691840913, i64 1263492066235060908], [2 x i64] [i64 7426252279614801142, i64 1579365082793826135], [2 x i64] [i64 4671129331091113523, i64 1974206353492282669], [2 x i64] [i64 5225298841145639904, i64 1233878970932676668], [2 x i64] [i64 6531623551432049880, i64 1542348713665845835], [2 x i64] [i64 3552843420862674446, i64 1927935892082307294], [2 x i64] [i64 -2391158880388216375, i64 1204959932551442058], [2 x i64] [i64 -7600634618912658373, i64 1506199915689302573], [2 x i64] [i64 -277421236786047158, i64 1882749894611628216], [2 x i64] [i64 -7090917300632361330, i64 1176718684132267635], [2 x i64] [i64 -8863646625790451662, i64 1470898355165334544], [2 x i64] [i64 -6467872263810676674, i64 1838622943956668180], [2 x i64] [i64 -3473154311335957938, i64 2298278679945835225], [2 x i64] [i64 2440964573842414192, i64 1436424174966147016], [2 x i64] [i64 3051205717303017741, i64 1795530218707683770], [2 x i64] [i64 -5409364890226003632, i64 2244412773384604712], [2 x i64] [i64 8148361989677217490, i64 1402757983365377945], [2 x i64] [i64 -3649605568185641850, i64 1753447479206722431], [2 x i64] [i64 -4562006960232052312, i64 2191809349008403039], [2 x i64] [i64 -2851254350145032695, i64 1369880843130251899], [2 x i64] [i64 -3564067937681290869, i64 1712351053912814874], [2 x i64] [i64 -9066770940529001490, i64 2140438817391018593], [2 x i64] [i64 -1055045819403238027, i64 1337774260869386620], [2 x i64] [i64 3292878744173340370, i64 1672217826086733276], [2 x i64] [i64 4116098430216675462, i64 2090272282608416595], [2 x i64] [i64 266718509671728212, i64 1306420176630260372], [2 x i64] [i64 333398137089660265, i64 1633025220787825465], [2 x i64] [i64 5028433689789463235, i64 2041281525984781831], [2 x i64] [i64 -8386443989950055238, i64 1275800953740488644], [2 x i64] [i64 -5871368969010181144, i64 1594751192175610805], [2 x i64] [i64 1884160825592049379, i64 1993438990219513507], [2 x i64] [i64 -1128242493218663091, i64 1245899368887195941], [2 x i64] [i64 7813068920331446945, i64 1557374211108994927], [2 x i64] [i64 5154650131986920777, i64 1946717763886243659], [2 x i64] [i64 915813323278131534, i64 1216698602428902287], [2 x i64] [i64 -3466919364329723487, i64 1520873253036127858], [2 x i64] [i64 -8945335223839542262, i64 1901091566295159823], [2 x i64] [i64 -5590834514899713914, i64 1188182228934474889], [2 x i64] [i64 2234828893230133415, i64 1485227786168093612], [2 x i64] [i64 2793536116537666769, i64 1856534732710117015], [2 x i64] [i64 8663489100477123587, i64 1160334207943823134], [2 x i64] [i64 1605989338741628675, i64 1450417759929778918], [2 x i64] [i64 -7215885363427739964, i64 1813022199912223647], [2 x i64] [i64 -9019856704284674954, i64 2266277749890279559], [2 x i64] [i64 -5637410440177921847, i64 1416423593681424724], [2 x i64] [i64 -2435077031795014404, i64 1770529492101780905], [2 x i64] [i64 6179525747111007803, i64 2213161865127226132], [2 x i64] [i64 -5361168444910395931, i64 1383226165704516332], [2 x i64] [i64 -2089774537710607010, i64 1729032707130645415], [2 x i64] [i64 -2612218172138258762, i64 2161290883913306769], [2 x i64] [i64 2979049660840976177, i64 1350806802445816731], [2 x i64] [i64 -887873942376167682, i64 1688508503057270913], [2 x i64] [i64 8113529608884566205, i64 2110635628821588642], [2 x i64] [i64 -8764102049729309834, i64 1319147268013492901], [2 x i64] [i64 -1731755525306861484, i64 1648934085016866126], [2 x i64] [i64 -6776380425060964759, i64 2061167606271082658], [2 x i64] [i64 -6541080774876796927, i64 1288229753919426661], [2 x i64] [i64 1047021068258779650, i64 1610287192399283327], [2 x i64] [i64 -3302909683103913342, i64 2012858990499104158], [2 x i64] [i64 4853210475701136017, i64 1258036869061940099], [2 x i64] [i64 1454827076199032118, i64 1572546086327425124], [2 x i64] [i64 1818533845248790147, i64 1965682607909281405], [2 x i64] [i64 3442426662494187794, i64 1228551629943300878], [2 x i64] [i64 -4920338708737041066, i64 1535689537429126097], [2 x i64] [i64 3072948650933474476, i64 1919611921786407622], [2 x i64] [i64 -2691093111593966357, i64 1199757451116504763], [2 x i64] [i64 -3363866389492457946, i64 1499696813895630954], [2 x i64] [i64 -8816519005292960336, i64 1874621017369538693], [2 x i64] [i64 8324733676974063502, i64 1171638135855961683], [2 x i64] [i64 5794231077790191473, i64 1464547669819952104], [2 x i64] [i64 7242788847237739342, i64 1830684587274940130], [2 x i64] [i64 -169885977807601630, i64 2288355734093675162], [2 x i64] [i64 -2412021745343444971, i64 1430222333808546976], [2 x i64] [i64 1596658836748081690, i64 1787777917260683721], [2 x i64] [i64 6607509564362490017, i64 2234722396575854651], [2 x i64] [i64 1823850468512862308, i64 1396701497859909157], [2 x i64] [i64 6891499104068465790, i64 1745876872324886446], [2 x i64] [i64 -608998156769193571, i64 2182346090406108057], [2 x i64] [i64 4231062170446641922, i64 1363966306503817536], [2 x i64] [i64 5288827713058302403, i64 1704957883129771920], [2 x i64] [i64 6611034641322878003, i64 2131197353912214900], [2 x i64] [i64 -5091475386027977056, i64 1331998346195134312], [2 x i64] [i64 -1752658214107583416, i64 1664997932743917890], [2 x i64] [i64 -6802508786061867174, i64 2081247415929897363], [2 x i64] [i64 4971804045566108824, i64 1300779634956185852], [2 x i64] [i64 6214755056957636030, i64 1625974543695232315], [2 x i64] [i64 3156757802769657134, i64 2032468179619040394], [2 x i64] [i64 6584659645158423613, i64 1270292612261900246], [2 x i64] [i64 -992547480406746292, i64 1587865765327375307], [2 x i64] [i64 -1240684350508432865, i64 1984832206659219134], [2 x i64] [i64 6142101308573311315, i64 1240520129162011959], [2 x i64] [i64 3065940617289251240, i64 1550650161452514949], [2 x i64] [i64 8444111790038951954, i64 1938312701815643686], [2 x i64] [i64 665883850346957067, i64 1211445438634777304], [2 x i64] [i64 832354812933696334, i64 1514306798293471630], [2 x i64] [i64 -8182928520687655390, i64 1892883497866839537], [2 x i64] [i64 -502644307002396715, i64 1183052186166774710], [2 x i64] [i64 -5239991402180383798, i64 1478815232708468388], [2 x i64] [i64 -1938303234298091843, i64 1848519040885585485], [2 x i64] [i64 -5823125539863695306, i64 1155324400553490928], [2 x i64] [i64 -2667220906402231229, i64 1444155500691863660], [2 x i64] [i64 1277659885424598868, i64 1805194375864829576], [2 x i64] [i64 1597074856780748586, i64 2256492969831036970], [2 x i64] [i64 5609857803915355770, i64 1410308106144398106], [2 x i64] [i64 -2211049781960581095, i64 1762885132680497632], [2 x i64] [i64 1847873790976661535, i64 2203606415850622041], [2 x i64] [i64 -5762607908280668397, i64 1377254009906638775], [2 x i64] [i64 -7203259885350835496, i64 1721567512383298469], [2 x i64] [i64 219297180166231438, i64 2151959390479123087], [2 x i64] [i64 7054589765244976505, i64 1344974619049451929], [2 x i64] [i64 -5016820848725943081, i64 1681218273811814911], [2 x i64] [i64 -6271026060907428851, i64 2101522842264768639], [2 x i64] [i64 -3919391288067143032, i64 1313451776415480399], [2 x i64] [i64 -4899239110083928790, i64 1641814720519350499], [2 x i64] [i64 -6124048887604910988, i64 2052268400649188124], [2 x i64] [i64 -1521687545539375415, i64 1282667750405742577], [2 x i64] [i64 7321262604930556539, i64 1603334688007178222], [2 x i64] [i64 -71793780691580134, i64 2004168360008972777], [2 x i64] [i64 4566814905495150320, i64 1252605225005607986], [2 x i64] [i64 -3514853404985837908, i64 1565756531257009982], [2 x i64] [i64 -9005252774659685289, i64 1957195664071262478], [2 x i64] [i64 1289246043478778550, i64 1223247290044539049], [2 x i64] [i64 6223243572775861092, i64 1529059112555673811], [2 x i64] [i64 3167368447542438461, i64 1911323890694592264], [2 x i64] [i64 1979605279714024038, i64 1194577431684120165], [2 x i64] [i64 7086192618069917952, i64 1493221789605150206], [2 x i64] [i64 -365631264267378368, i64 1866527237006437757], [2 x i64] [i64 -4840205558594499384, i64 1166579523129023598], [2 x i64] [i64 7784801107039039482, i64 1458224403911279498], [2 x i64] [i64 507629346944023544, i64 1822780504889099373], [2 x i64] [i64 5246222702107417334, i64 2278475631111374216], [2 x i64] [i64 3278889188817135834, i64 1424047269444608885], [2 x i64] [i64 8710297504448807696, i64 1780059086805761106]]
@std.ryu.FLOAT_POW5_INV_SPLIT = internal unnamed_addr constant [55 x i64] [i64 576460752303423489, i64 461168601842738791, i64 368934881474191033, i64 295147905179352826, i64 472236648286964522, i64 377789318629571618, i64 302231454903657294, i64 483570327845851670, i64 386856262276681336, i64 309485009821345069, i64 495176015714152110, i64 396140812571321688, i64 316912650057057351, i64 507060240091291761, i64 405648192073033409, i64 324518553658426727, i64 519229685853482763, i64 415383748682786211, i64 332306998946228969, i64 531691198313966350, i64 425352958651173080, i64 340282366920938464, i64 544451787073501542, i64 435561429658801234, i64 348449143727040987, i64 557518629963265579, i64 446014903970612463, i64 356811923176489971, i64 570899077082383953, i64 456719261665907162, i64 365375409332725730, i64 292300327466180584, i64 467680523945888934, i64 374144419156711148, i64 299315535325368918, i64 478904856520590269, i64 383123885216472215, i64 306499108173177772, i64 490398573077084435, i64 392318858461667548, i64 313855086769334039, i64 502168138830934462, i64 401734511064747569, i64 321387608851798056, i64 514220174162876889, i64 411376139330301511, i64 329100911464241209, i64 526561458342785934, i64 421249166674228747, i64 336999333339382998, i64 539198933343012796, i64 431359146674410237, i64 345087317339528190, i64 552139707743245103, i64 441711766194596083]
@std.ryu.FLOAT_POW5_SPLIT = internal unnamed_addr constant [47 x i64] [i64 1152921504606846976, i64 1441151880758558720, i64 1801439850948198400, i64 2251799813685248000, i64 1407374883553280000, i64 1759218604441600000, i64 2199023255552000000, i64 1374389534720000000, i64 1717986918400000000, i64 2147483648000000000, i64 1342177280000000000, i64 1677721600000000000, i64 2097152000000000000, i64 1310720000000000000, i64 1638400000000000000, i64 2048000000000000000, i64 1280000000000000000, i64 1600000000000000000, i64 2000000000000000000, i64 1250000000000000000, i64 1562500000000000000, i64 1953125000000000000, i64 1220703125000000000, i64 1525878906250000000, i64 1907348632812500000, i64 1192092895507812500, i64 1490116119384765625, i64 1862645149230957031, i64 1164153218269348144, i64 1455191522836685180, i64 1818989403545856475, i64 2273736754432320594, i64 1421085471520200371, i64 1776356839400250464, i64 2220446049250313080, i64 1387778780781445675, i64 1734723475976807094, i64 2168404344971008868, i64 1355252715606880542, i64 1694065894508600678, i64 2117582368135750847, i64 1323488980084844279, i64 1654361225106055349, i64 2067951531382569187, i64 1292469707114105741, i64 1615587133892632177, i64 2019483917365790221]
@std.ryu.POW10_OFFSET = internal unnamed_addr constant [64 x i16] [i16 0, i16 2, i16 5, i16 8, i16 12, i16 16, i16 21, i16 26, i16 32, i16 39, i16 46, i16 54, i16 62, i16 71, i16 80, i16 90, i16 100, i16 111, i16 122, i16 134, i16 146, i16 159, i16 173, i16 187, i16 202, i16 217, i16 233, i16 249, i16 266, i16 283, i16 301, i16 319, i16 338, i16 357, i16 377, i16 397, i16 418, i16 440, i16 462, i16 485, i16 508, i16 532, i16 556, i16 581, i16 606, i16 632, i16 658, i16 685, i16 712, i16 740, i16 769, i16 798, i16 828, i16 858, i16 889, i16 920, i16 952, i16 984, i16 1017, i16 1050, i16 1084, i16 1118, i16 1153, i16 1188]
@std.ryu.POW10_SPLIT = internal unnamed_addr constant [1224 x [3 x i64]] [[3 x i64] [i64 1, i64 72057594037927936, i64 0], [3 x i64] [i64 699646928636035157, i64 72057594, i64 0], [3 x i64] [i64 1, i64 0, i64 256], [3 x i64] [i64 -6544652150745315387, i64 4722366482869, i64 0], [3 x i64] [i64 6760415703743915872, i64 4722, i64 0], [3 x i64] [i64 1, i64 0, i64 16777216], [3 x i64] [i64 -5076893424204600958, i64 309485009821345068, i64 0], [3 x i64] [i64 -3295601794740132282, i64 309485009, i64 0], [3 x i64] [i64 1, i64 0, i64 75511627776], [3 x i64] [i64 4635408826454083567, i64 -9008877428836353653, i64 1099], [3 x i64] [i64 -6079605097878926263, i64 20282409603651, i64 0], [3 x i64] [i64 7555853734021184432, i64 20282, i64 0], [3 x i64] [i64 1, i64 0, i64 250037927936], [3 x i64] [i64 5171444645924616995, i64 699646928636035156, i64 72057594], [3 x i64] [i64 -1774446540706253830, i64 1329227995784915872, i64 0], [3 x i64] [i64 -3967601846860689101, i64 1329227995, i64 0], [3 x i64] [i64 1, i64 0, i64 181645213696], [3 x i64] [i64 -6232550949892460535, i64 -6544652150745315388, i64 114366482869], [3 x i64] [i64 -1853851060037622181, i64 6760415703743915871, i64 4722], [3 x i64] [i64 4549827147718617003, i64 87112285931760, i64 0], [3 x i64] [i64 5274510003815168971, i64 87112, i64 0], [3 x i64] [i64 1, i64 0, i64 44724781056], [3 x i64] [i64 -8651772075401751081, i64 -5076893424204600959, i64 209821345068], [3 x i64] [i64 -3726601174500311447, i64 -3295601794740132283, i64 309485009], [3 x i64] [i64 4300745446091561535, i64 5708990770823839524, i64 0], [3 x i64] [i64 -3249587212374108252, i64 5708990770, i64 0], [3 x i64] [i64 1, i64 0, i64 139251286016], [3 x i64] [i64 -4962139918670868579, i64 4635408826454083566, i64 67670423947], [3 x i64] [i64 8356963862052375699, i64 -6079605097878926264, i64 58409603651], [3 x i64] [i64 5850852848337610021, i64 7555853734021184431, i64 20282], [3 x i64] [i64 2712780827214982050, i64 374144419156711, i64 0], [3 x i64] [i64 7732076577307618052, i64 374144, i64 0], [3 x i64] [i64 1, i64 0, i64 84280344576], [3 x i64] [i64 -1150434588357805749, i64 5171444645924616994, i64 160903807060], [3 x i64] [i64 -1847884972093698528, i64 -1774446540706253831, i64 219784915872], [3 x i64] [i64 7469952526870444257, i64 -3967601846860689102, i64 1329227995], [3 x i64] [i64 -4915090051594882092, i64 6073184580144670117, i64 1], [3 x i64] [i64 -2689134369326244673, i64 24519928653, i64 0], [3 x i64] [i64 -8855753259472402026, i64 24, i64 0], [3 x i64] [i64 1, i64 0, i64 196662132736], [3 x i64] [i64 -3038153366220117726, i64 -6232550949892460536, i64 95899502532], [3 x i64] [i64 -114687229420428906, i64 -1853851060037622182, i64 240246646623], [3 x i64] [i64 -7332171196355565423, i64 4549827147718617002, i64 72285931760], [3 x i64] [i64 1703393793997526525, i64 5274510003815168970, i64 87112], [3 x i64] [i64 5082852056285196265, i64 1606938044258990, i64 0], [3 x i64] [i64 816434266573722365, i64 1606938, i64 0], [3 x i64] [i64 1, i64 0, i64 129530986496], [3 x i64] [i64 5736523019264798742, i64 -8651772075401751082, i64 69797980545], [3 x i64] [i64 -8317429297441308277, i64 -3726601174500311448, i64 36233143877], [3 x i64] [i64 -1935148298225556252, i64 4300745446091561534, i64 50823839524], [3 x i64] [i64 -6079450668308098291, i64 -3249587212374108253, i64 5708990770], [3 x i64] [i64 -1512122340460697325, i64 -5368172773700122999, i64 5], [3 x i64] [i64 -8168463655940380280, i64 105312291668, i64 0], [3 x i64] [i64 5760764486226151240, i64 105, i64 0], [3 x i64] [i64 1, i64 0, i64 238731001856], [3 x i64] [i64 4128368337188369761, i64 -4962139918670868580, i64 72453031918], [3 x i64] [i64 -8205803070038546560, i64 8356963862052375698, i64 175317175368], [3 x i64] [i64 -513365756887183365, i64 5850852848337610020, i64 231147060143], [3 x i64] [i64 8346249813075698616, i64 2712780827214982049, i64 128419156711], [3 x i64] [i64 -2540540464548648921, i64 7732076577307618051, i64 374144], [3 x i64] [i64 -3921136657574165288, i64 6901746346790563, i64 0], [3 x i64] [i64 6397156777364256320, i64 6901746, i64 0], [3 x i64] [i64 1, i64 0, i64 34937634816], [3 x i64] [i64 -1647983120992951568, i64 -1150434588357805750, i64 249899825954], [3 x i64] [i64 2419982808370854967, i64 -1847884972093698529, i64 50404946937], [3 x i64] [i64 2922947087773078956, i64 7469952526870444256, i64 165733552434], [3 x i64] [i64 -3027523906640041426, i64 -4915090051594882093, i64 77854221733], [3 x i64] [i64 3452124642157173416, i64 -2689134369326244674, i64 24519928653], [3 x i64] [i64 5979700067267186899, i64 -8855753259472402027, i64 24], [3 x i64] [i64 4913998146922579597, i64 452312848583, i64 0], [3 x i64] [i64 5771037749337678924, i64 452, i64 0], [3 x i64] [i64 1, i64 0, i64 8835301376], [3 x i64] [i64 3464734175350698519, i64 -3038153366220117727, i64 90993782792], [3 x i64] [i64 -9112216362373701491, i64 -114687229420428907, i64 170602522202], [3 x i64] [i64 7269882896518450106, i64 -7332171196355565424, i64 202092341162], [3 x i64] [i64 1372511258182263196, i64 1703393793997526524, i64 174275541962], [3 x i64] [i64 7571228438575951046, i64 5082852056285196264, i64 26044258990], [3 x i64] [i64 2992506536646070406, i64 816434266573722364, i64 1606938], [3 x i64] [i64 524517896824344606, i64 29642774844752946, i64 0], [3 x i64] [i64 -2863802672810848843, i64 29642774, i64 0], [3 x i64] [i64 1, i64 0, i64 214310977536], [3 x i64] [i64 3846112492507251066, i64 5736523019264798741, i64 104549111254], [3 x i64] [i64 -1765626323586462129, i64 -8317429297441308278, i64 62895095400], [3 x i64] [i64 -3460429537153004349, i64 -1935148298225556253, i64 163670432318], [3 x i64] [i64 2573712825027107389, i64 -6079450668308098292, i64 137918027683], [3 x i64] [i64 7504855874008324928, i64 -1512122340460697326, i64 84557186697], [3 x i64] [i64 -8874606043082671829, i64 -8168463655940380281, i64 105312291668], [3 x i64] [i64 8520676959353394843, i64 5760764486226151239, i64 105], [3 x i64] [i64 -4997759410811648120, i64 1942668892225, i64 0], [3 x i64] [i64 -6107860372791420968, i64 1942, i64 0], [3 x i64] [i64 1, i64 0, i64 156223799296], [3 x i64] [i64 2517285787892561600, i64 4128368337188369760, i64 146555162524], [3 x i64] [i64 4338831817635138103, i64 -8205803070038546561, i64 36972170386], [3 x i64] [i64 1561495325934523196, i64 -513365756887183366, i64 161452451108], [3 x i64] [i64 -6184109023630152830, i64 8346249813075698615, i64 3862277025], [3 x i64] [i64 -7302678308192267428, i64 -2540540464548648922, i64 163787434755], [3 x i64] [i64 1212260522471875711, i64 -3921136657574165289, i64 242346790563], [3 x i64] [i64 -8751391151462132747, i64 6397156777364256319, i64 6901746], [3 x i64] [i64 7227025834627242948, i64 127314748520905380, i64 0], [3 x i64] [i64 -8837735835004103787, i64 127314748, i64 0], [3 x i64] [i64 1, i64 0, i64 74910662656], [3 x i64] [i64 3609144142396852269, i64 -1647983120992951569, i64 31131187530], [3 x i64] [i64 -6877895696327482751, i64 2419982808370854966, i64 224158453279], [3 x i64] [i64 -8378440495680227659, i64 2922947087773078955, i64 211835877600], [3 x i64] [i64 -6801673226846921385, i64 -3027523906640041427, i64 190187140051], [3 x i64] [i64 -5997357367831066561, i64 3452124642157173415, i64 149324160190], [3 x i64] [i64 -3421124750192233198, i64 5979700067267186898, i64 199266388373], [3 x i64] [i64 -3450506518662420344, i64 4913998146922579596, i64 196312848583], [3 x i64] [i64 -8235738435453493203, i64 5771037749337678923, i64 452], [3 x i64] [i64 1014743503555840530, i64 8343699359066, i64 0], [3 x i64] [i64 -5545846366564260938, i64 8343, i64 0], [3 x i64] [i64 1, i64 0, i64 33187823616], [3 x i64] [i64 4718003016239473662, i64 3464734175350698518, i64 149506025761], [3 x i64] [i64 -3580913425015884891, i64 -9112216362373701492, i64 144394101141], [3 x i64] [i64 -3692226860886459838, i64 7269882896518450105, i64 252074403984], [3 x i64] [i64 -7332797522234639715, i64 1372511258182263195, i64 232410437116], [3 x i64] [i64 1963520352638130630, i64 7571228438575951045, i64 252162224104], [3 x i64] [i64 -5104156732304587416, i64 2992506536646070405, i64 50028434172], [3 x i64] [i64 6240392545013573291, i64 524517896824344605, i64 22844752946], [3 x i64] [i64 -4069253212359836858, i64 -2863802672810848844, i64 29642774], [3 x i64] [i64 1717863312631397839, i64 546812681195752981, i64 0], [3 x i64] [i64 3611005143890591770, i64 546812681, i64 0], [3 x i64] [i64 1, i64 0, i64 21208498176], [3 x i64] [i64 -5278491249358306112, i64 3846112492507251065, i64 138904285205], [3 x i64] [i64 735883891883379688, i64 -1765626323586462130, i64 227812409738], [3 x i64] [i64 -7837540206843445212, i64 -3460429537153004350, i64 12139521251], [3 x i64] [i64 -6088552961819245146, i64 2573712825027107388, i64 18406839052], [3 x i64] [i64 -3216827705303138088, i64 7504855874008324927, i64 135518906642], [3 x i64] [i64 7241424335568075942, i64 -8874606043082671830, i64 71461906823], [3 x i64] [i64 6049715868779871913, i64 8520676959353394842, i64 65729070919], [3 x i64] [i64 2000548404719336762, i64 -4997759410811648121, i64 150668892225], [3 x i64] [i64 1410974761895205301, i64 -6107860372791420969, i64 1942], [3 x i64] [i64 -2446611606015466748, i64 35835915874844, i64 0], [3 x i64] [i64 -1551835206892759060, i64 35835, i64 0], [3 x i64] [i64 1, i64 0, i64 96136462336], [3 x i64] [i64 589096329272056762, i64 2517285787892561599, i64 127235208544], [3 x i64] [i64 7097729792403256904, i64 4338831817635138102, i64 250084648831], [3 x i64] [i64 8553736750439287020, i64 1561495325934523195, i64 183664758778], [3 x i64] [i64 2114152625261065696, i64 -6184109023630152831, i64 38604121015], [3 x i64] [i64 -8629220393701910392, i64 -7302678308192267429, i64 215065716774], [3 x i64] [i64 -5399528536209503601, i64 1212260522471875710, i64 63525586135], [3 x i64] [i64 -1691199881707205736, i64 -8751391151462132748, i64 164391777855], [3 x i64] [i64 6930119832670648356, i64 7227025834627242947, i64 60520905380], [3 x i64] [i64 -3886045941807665449, i64 -8837735835004103788, i64 127314748], [3 x i64] [i64 -2038723146206213581, i64 2348542582773833227, i64 0], [3 x i64] [i64 -4172040563099742500, i64 2348542582, i64 0], [3 x i64] [i64 1, i64 0, i64 239195652096], [3 x i64] [i64 -2018311100579589146, i64 3609144142396852268, i64 54627148527], [3 x i64] [i64 3721112279790863774, i64 -6877895696327482752, i64 171545803830], [3 x i64] [i64 -413979170449930863, i64 -8378440495680227660, i64 45631280555], [3 x i64] [i64 -388288523240775537, i64 -6801673226846921386, i64 167674882605], [3 x i64] [i64 -2754653934675558426, i64 -5997357367831066562, i64 210814540455], [3 x i64] [i64 389416944300619393, i64 -3421124750192233199, i64 140812947666], [3 x i64] [i64 -6437052716449064323, i64 -3450506518662420345, i64 75553539724], [3 x i64] [i64 -4952484899259741716, i64 -8235738435453493204, i64 90055009355], [3 x i64] [i64 -158160673093271739, i64 1014743503555840529, i64 151699359066], [3 x i64] [i64 7216107869057472, i64 -5545846366564260939, i64 8343], [3 x i64] [i64 -1209682781750477738, i64 153914086704665, i64 0], [3 x i64] [i64 1599418782488783273, i64 153914, i64 0], [3 x i64] [i64 1, i64 0, i64 22255763456], [3 x i64] [i64 -8881279086469215839, i64 4718003016239473661, i64 140805878294], [3 x i64] [i64 857713933775880687, i64 -3580913425015884892, i64 185799843980], [3 x i64] [i64 4621617820081363356, i64 -3692226860886459839, i64 155602488249], [3 x i64] [i64 -8816581461993919088, i64 -7332797522234639716, i64 197106442651], [3 x i64] [i64 -9162757575724905801, i64 1963520352638130629, i64 133723303109], [3 x i64] [i64 8981807745082630996, i64 -5104156732304587417, i64 29338292357], [3 x i64] [i64 -96603542143616994, i64 6240392545013573290, i64 180779405341], [3 x i64] [i64 4411619033127524143, i64 -4069253212359836859, i64 21093125556], [3 x i64] [i64 1852297584111266889, i64 1717863312631397838, i64 9195752981], [3 x i64] [i64 -6700500609897885520, i64 3611005143890591769, i64 546812681], [3 x i64] [i64 6335244004343789147, i64 -8359830487432564938, i64 0], [3 x i64] [i64 5109502367228239844, i64 10086913586, i64 0], [3 x i64] [i64 1603272682579847821, i64 10, i64 0], [3 x i64] [i64 1, i64 0, i64 121713852416], [3 x i64] [i64 6609546910952910052, i64 -5278491249358306113, i64 78039892345], [3 x i64] [i64 3911171343112928288, i64 735883891883379687, i64 194575126094], [3 x i64] [i64 5254510615100863555, i64 -7837540206843445213, i64 60669938882], [3 x i64] [i64 3881927570803887650, i64 -6088552961819245147, i64 63825615420], [3 x i64] [i64 6379348759607163190, i64 -3216827705303138089, i64 42392558399], [3 x i64] [i64 -3851010336487145150, i64 7241424335568075941, i64 154327955754], [3 x i64] [i64 -3776520641707178074, i64 6049715868779871912, i64 135108449946], [3 x i64] [i64 4045087795619708513, i64 2000548404719336761, i64 215076489095], [3 x i64] [i64 -5848276766572408898, i64 1410974761895205300, i64 28867368919], [3 x i64] [i64 734704388050777108, i64 -2446611606015466749, i64 251915874844], [3 x i64] [i64 5682201693687285822, i64 -1551835206892759061, i64 35835], [3 x i64] [i64 -7398031379564112828, i64 661055968790248, i64 0], [3 x i64] [i64 -575718296699232131, i64 661055, i64 0], [3 x i64] [i64 1, i64 0, i64 191031934976], [3 x i64] [i64 -3177982637777887921, i64 589096329272056761, i64 54384768703], [3 x i64] [i64 5016238054648555438, i64 7097729792403256903, i64 59463698998], [3 x i64] [i64 -4210696759715651866, i64 8553736750439287019, i64 129114608443], [3 x i64] [i64 6957759675154690848, i64 2114152625261065695, i64 91532209025], [3 x i64] [i64 -7376938231037143, i64 -8629220393701910393, i64 126707290971], [3 x i64] [i64 8539004472540641041, i64 -5399528536209503602, i64 244908319870], [3 x i64] [i64 1908462039431738399, i64 -1691199881707205737, i64 195375682548], [3 x i64] [i64 714690453250792146, i64 6930119832670648355, i64 148789337027], [3 x i64] [i64 -4664554626035621983, i64 -3886045941807665450, i64 11889480596], [3 x i64] [i64 3584742913798803164, i64 -2038723146206213582, i64 118773833227], [3 x i64] [i64 4347581515245125291, i64 -4172040563099742501, i64 2348542582], [3 x i64] [i64 -1610001805553180224, i64 6429475823218628948, i64 2], [3 x i64] [i64 -6682661744843936308, i64 43322963970, i64 0], [3 x i64] [i64 5957633711383291746, i64 43, i64 0], [3 x i64] [i64 1, i64 0, i64 44890587136], [3 x i64] [i64 -8529557230825084663, i64 -2018311100579589147, i64 128201721900], [3 x i64] [i64 4751011869809829335, i64 3721112279790863773, i64 180977558144], [3 x i64] [i64 -7378246103778116587, i64 -413979170449930864, i64 86978950836], [3 x i64] [i64 -1328687088587041662, i64 -388288523240775538, i64 62850669910], [3 x i64] [i64 -3839677992801867157, i64 -2754653934675558427, i64 17021110334], [3 x i64] [i64 -6677851703216160509, i64 389416944300619392, i64 135651046673], [3 x i64] [i64 4043396447647747170, i64 -6437052716449064324, i64 44731525255], [3 x i64] [i64 1670341095362518057, i64 -4952484899259741717, i64 17991426092], [3 x i64] [i64 3190817644167043165, i64 -158160673093271740, i64 181000391185], [3 x i64] [i64 -8020924046485229130, i64 7216107869057471, i64 25934422965], [3 x i64] [i64 -5306779413203240051, i64 -1209682781750477739, i64 58086704665], [3 x i64] [i64 2297772885416059937, i64 1599418782488783272, i64 153914], [3 x i64] [i64 7677687919964523763, i64 2839213766779714, i64 0], [3 x i64] [i64 -4302154920961658788, i64 2839213, i64 0], [3 x i64] [i64 1, i64 0, i64 253518544896], [3 x i64] [i64 -1377013732205891326, i64 -8881279086469215840, i64 164046496765], [3 x i64] [i64 -279320286546474509, i64 857713933775880686, i64 65250538404], [3 x i64] [i64 3765746945827805904, i64 4621617820081363355, i64 156522052161], [3 x i64] [i64 -8205009731278789925, i64 -8816581461993919089, i64 197503285916], [3 x i64] [i64 -5101026791172410832, i64 -9162757575724905802, i64 103486904773], [3 x i64] [i64 -9132817288892611663, i64 8981807745082630995, i64 170994763111], [3 x i64] [i64 550974205049535019, i64 -96603542143616995, i64 69239154346], [3 x i64] [i64 4494692285504086222, i64 4411619033127524142, i64 206100413253], [3 x i64] [i64 1134308559863725587, i64 1852297584111266888, i64 25636765134], [3 x i64] [i64 -859186028593421383, i64 -6700500609897885521, i64 54343434265], [3 x i64] [i64 -8629602041363390022, i64 6335244004343789146, i64 50276986678], [3 x i64] [i64 6071944935834172568, i64 5109502367228239843, i64 10086913586], [3 x i64] [i64 -6882575780410134661, i64 1603272682579847820, i64 10], [3 x i64] [i64 -5988477566483487179, i64 186070713419, i64 0], [3 x i64] [i64 1304432355328256915, i64 186, i64 0], [3 x i64] [i64 1, i64 0, i64 191358304256], [3 x i64] [i64 -2499945258167464261, i64 6609546910952910051, i64 231212025023], [3 x i64] [i64 -6364177989878265478, i64 3911171343112928287, i64 35284847591], [3 x i64] [i64 -6997120389003355205, i64 5254510615100863554, i64 165210439715], [3 x i64] [i64 -928000453346947170, i64 3881927570803887649, i64 215345825189], [3 x i64] [i64 -8995682510621917811, i64 6379348759607163189, i64 165791236311], [3 x i64] [i64 -5255629286086236690, i64 -3851010336487145151, i64 168795274405], [3 x i64] [i64 8367349876734474799, i64 -3776520641707178075, i64 57219284648], [3 x i64] [i64 6544253801674393507, i64 4045087795619708512, i64 180682964281], [3 x i64] [i64 -2332837820372954118, i64 -5848276766572408899, i64 3039828404], [3 x i64] [i64 -8152656936912239224, i64 734704388050777107, i64 235308032771], [3 x i64] [i64 9127173070014462803, i64 5682201693687285821, i64 232598951915], [3 x i64] [i64 -2179843234114066664, i64 -7398031379564112829, i64 63968790248], [3 x i64] [i64 3299745387370952632, i64 -575718296699232132, i64 661055], [3 x i64] [i64 -6385628891105152427, i64 12194330274671844, i64 0], [3 x i64] [i64 5066801222582989646, i64 12194330, i64 0], [3 x i64] [i64 1, i64 0, i64 185827721216], [3 x i64] [i64 7568423425299591513, i64 -3177982637777887922, i64 71271930809], [3 x i64] [i64 -1885238089044344239, i64 5016238054648555437, i64 235771737671], [3 x i64] [i64 4329114621856906245, i64 -4210696759715651867, i64 223377180907], [3 x i64] [i64 1477500474861899139, i64 6957759675154690847, i64 135999600095], [3 x i64] [i64 -1555164434445581932, i64 -7376938231037144, i64 142462900359], [3 x i64] [i64 4684451357140027420, i64 8539004472540641040, i64 151103457934], [3 x i64] [i64 -3719557493300470907, i64 1908462039431738398, i64 35038743447], [3 x i64] [i64 -2582567214022242782, i64 714690453250792145, i64 214747133987], [3 x i64] [i64 1755486942842684438, i64 -4664554626035621984, i64 50194329302], [3 x i64] [i64 -1029666557056841575, i64 3584742913798803163, i64 219235682866], [3 x i64] [i64 4290982361913532783, i64 4347581515245125290, i64 84912721627], [3 x i64] [i64 -6620084092705200207, i64 -1610001805553180225, i64 2637732180], [3 x i64] [i64 932930645678090820, i64 -6682661744843936309, i64 43322963970], [3 x i64] [i64 -5738951292381498999, i64 5957633711383291745, i64 43], [3 x i64] [i64 -1955147646829239710, i64 799167628880, i64 0], [3 x i64] [i64 3092207065214166010, i64 799, i64 0], [3 x i64] [i64 1, i64 0, i64 229537611776], [3 x i64] [i64 8142946531605512550, i64 -8529557230825084664, i64 157257552869], [3 x i64] [i64 5328402096432654515, i64 4751011869809829334, i64 144600024477], [3 x i64] [i64 1932004361303814512, i64 -7378246103778116588, i64 142927971728], [3 x i64] [i64 2511477647985517771, i64 -1328687088587041663, i64 229791850638], [3 x i64] [i64 -995368580384834922, i64 -3839677992801867158, i64 128637992933], [3 x i64] [i64 -8957477219230553127, i64 -6677851703216160510, i64 124219192960], [3 x i64] [i64 8803053132063235169, i64 4043396447647747169, i64 235090549372], [3 x i64] [i64 -2248061876566934843, i64 1670341095362518056, i64 68172974571], [3 x i64] [i64 -4750501588306137414, i64 3190817644167043164, i64 191565184836], [3 x i64] [i64 -2037661647629691685, i64 -8020924046485229131, i64 85712318911], [3 x i64] [i64 -6793333336829954006, i64 -5306779413203240052, i64 168124562517], [3 x i64] [i64 -4857229953056338355, i64 2297772885416059936, i64 66416208296], [3 x i64] [i64 8032934885905905774, i64 7677687919964523762, i64 173766779714], [3 x i64] [i64 2753021350129449273, i64 -4302154920961658789, i64 2839213], [3 x i64] [i64 -1471846614508147483, i64 52374249726338269, i64 0], [3 x i64] [i64 -5048167897550450027, i64 52374249, i64 0], [3 x i64] [i64 1, i64 0, i64 160925351936], [3 x i64] [i64 -8162157118457826265, i64 -1377013732205891327, i64 238984858016], [3 x i64] [i64 5294476488634150891, i64 -279320286546474510, i64 155204141550], [3 x i64] [i64 -2613499535574488293, i64 3765746945827805903, i64 143555205531], [3 x i64] [i64 -8098231331436434952, i64 -8205009731278789926, i64 182723472783], [3 x i64] [i64 -4788239463566955953, i64 -5101026791172410833, i64 83504908982], [3 x i64] [i64 -6490381834468701350, i64 -9132817288892611664, i64 29029868371], [3 x i64] [i64 -5030842370046819835, i64 550974205049535018, i64 46243657757], [3 x i64] [i64 5161774027546852762, i64 4494692285504086221, i64 72061490990], [3 x i64] [i64 -3172359234918963905, i64 1134308559863725586, i64 175953423432], [3 x i64] [i64 -4213389476030176687, i64 -859186028593421384, i64 90532188335], [3 x i64] [i64 4274656492162486921, i64 -8629602041363390023, i64 227329160794], [3 x i64] [i64 -6406467568167756570, i64 6071944935834172567, i64 140626894819], [3 x i64] [i64 -5208436867452786159, i64 -6882575780410134662, i64 75675363980], [3 x i64] [i64 -5596582869536838345, i64 -5988477566483487180, i64 186070713419], [3 x i64] [i64 -914966978708106462, i64 1304432355328256914, i64 186], [3 x i64] [i64 5623628114515245990, i64 3432398830065, i64 0], [3 x i64] [i64 7357116143579573377, i64 3432, i64 0], [3 x i64] [i64 1, i64 0, i64 227864477696], [3 x i64] [i64 3555734177475596582, i64 -2499945258167464262, i64 31654997219], [3 x i64] [i64 -4444867348953127234, i64 -6364177989878265479, i64 66620685343], [3 x i64] [i64 -286839016478075476, i64 -6997120389003355206, i64 33949692994], [3 x i64] [i64 5585207679308509467, i64 -928000453346947171, i64 53512343073], [3 x i64] [i64 -4498046450842826944, i64 -8995682510621917812, i64 65715091765], [3 x i64] [i64 -8639052145970515184, i64 -5255629286086236691, i64 165453594945], [3 x i64] [i64 -2628733977568730698, i64 8367349876734474798, i64 96354764709], [3 x i64] [i64 5629845624785010943, i64 6544253801674393506, i64 189873536608], [3 x i64] [i64 -8929108942571816909, i64 -2332837820372954119, i64 19558043581], [3 x i64] [i64 619338244618780585, i64 -8152656936912239225, i64 61494785043], [3 x i64] [i64 -6814377066217592717, i64 9127173070014462802, i64 67881830461], [3 x i64] [i64 -6363429812699811700, i64 -2179843234114066665, i64 124178879555], [3 x i64] [i64 -1566205464250669966, i64 3299745387370952631, i64 228653834364], [3 x i64] [i64 -1042520399223047388, i64 -6385628891105152428, i64 26274671844], [3 x i64] [i64 7089067015287185433, i64 5066801222582989645, i64 12194330], [3 x i64] [i64 2592264228029443648, i64 224945689727159819, i64 0], [3 x i64] [i64 -5033012989339327176, i64 224945689, i64 0], [3 x i64] [i64 1, i64 0, i64 78410285056], [3 x i64] [i64 -9122828132067998191, i64 7568423425299591512, i64 173897801038], [3 x i64] [i64 -6290913044616852052, i64 -1885238089044344240, i64 229234681773], [3 x i64] [i64 -1049572797121318940, i64 4329114621856906244, i64 31080095461], [3 x i64] [i64 -6572183456156297847, i64 1477500474861899138, i64 40915694367], [3 x i64] [i64 -5001904556871823662, i64 -1555164434445581933, i64 16253944616], [3 x i64] [i64 -1452328030124960945, i64 4684451357140027419, i64 30798362384], [3 x i64] [i64 -2567049570832535886, i64 -3719557493300470908, i64 209859998750], [3 x i64] [i64 4234647645735263359, i64 -2582567214022242783, i64 160095165137], [3 x i64] [i64 7978589901512919496, i64 1755486942842684437, i64 219944181664], [3 x i64] [i64 6114237175390859894, i64 -1029666557056841576, i64 170232614619], [3 x i64] [i64 8658612872088282708, i64 4290982361913532782, i64 191641124522], [3 x i64] [i64 -8192930743026226763, i64 -6620084092705200208, i64 203050574271], [3 x i64] [i64 -5157279011961720625, i64 932930645678090819, i64 97688890827], [3 x i64] [i64 4123165538545565412, i64 -5738951292381499000, i64 80894011233], [3 x i64] [i64 7846417485927038481, i64 -1955147646829239711, i64 31167628880], [3 x i64] [i64 -7884470727351532752, i64 3092207065214166009, i64 799], [3 x i64] [i64 2691512658346619120, i64 14742040721959, i64 0], [3 x i64] [i64 751187558544605998, i64 14742, i64 0], [3 x i64] [i64 1, i64 0, i64 8441430016], [3 x i64] [i64 3757709791947931308, i64 8142946531605512549, i64 214288853256], [3 x i64] [i64 3452755398462519465, i64 5328402096432654514, i64 20104734166], [3 x i64] [i64 3105818720159874523, i64 1932004361303814511, i64 129136147476], [3 x i64] [i64 -1587605614815052252, i64 2511477647985517770, i64 106946040961], [3 x i64] [i64 -6174849333103317861, i64 -995368580384834923, i64 2514414186], [3 x i64] [i64 5429638071845793701, i64 -8957477219230553128, i64 97477214466], [3 x i64] [i64 145278150038876889, i64 8803053132063235168, i64 40878132321], [3 x i64] [i64 9050266019724932450, i64 -2248061876566934844, i64 92742474792], [3 x i64] [i64 -6539727820258060750, i64 -4750501588306137415, i64 181889538140], [3 x i64] [i64 2472757296513770735, i64 -2037661647629691686, i64 140631732661], [3 x i64] [i64 -7888010275531312256, i64 -6793333336829954007, i64 32736689036], [3 x i64] [i64 -2529421502878295766, i64 -4857229953056338356, i64 242435466272], [3 x i64] [i64 -6192409416918196378, i64 8032934885905905773, i64 91149241586], [3 x i64] [i64 7869542424662730262, i64 2753021350129449272, i64 221920211035], [3 x i64] [i64 1378558986933000253, i64 -1471846614508147484, i64 233726338269], [3 x i64] [i64 -4925339031800140511, i64 -5048167897550450028, i64 52374249], [3 x i64] [i64 3206744593298092012, i64 966134380754314586, i64 0], [3 x i64] [i64 -4532095951494633111, i64 966134380, i64 0], [3 x i64] [i64 1, i64 0, i64 1557528576], [3 x i64] [i64 1235541077112082496, i64 -8162157118457826266, i64 242287014145], [3 x i64] [i64 -6431758555394017770, i64 5294476488634150890, i64 207858321906], [3 x i64] [i64 1561535086344155741, i64 -2613499535574488294, i64 218560993999], [3 x i64] [i64 -5684996797393327039, i64 -8098231331436434953, i64 47740429018], [3 x i64] [i64 -8701149292605585479, i64 -4788239463566955954, i64 176648155695], [3 x i64] [i64 -932505371314704831, i64 -6490381834468701351, i64 42727277488], [3 x i64] [i64 2428898913707151713, i64 -5030842370046819836, i64 205279820330], [3 x i64] [i64 71666709959904945, i64 5161774027546852761, i64 18828026061], [3 x i64] [i64 4049380135452919193, i64 -3172359234918963906, i64 184771591698], [3 x i64] [i64 -24503211932097883, i64 -4213389476030176688, i64 185231729592], [3 x i64] [i64 2914504416394425696, i64 4274656492162486920, i64 151652704697], [3 x i64] [i64 -5725366277960562198, i64 -6406467568167756571, i64 122717650071], [3 x i64] [i64 2626074459217717422, i64 -5208436867452786160, i64 52696608634], [3 x i64] [i64 4261529925046307655, i64 -5596582869536838346, i64 146950399540], [3 x i64] [i64 -6910705388279246030, i64 -914966978708106463, i64 241304857490], [3 x i64] [i64 -5890986284274388848, i64 5623628114515245989, i64 104398830065], [3 x i64] [i64 -6541565389163471557, i64 7357116143579573376, i64 3432], [3 x i64] [i64 -4413946354785008565, i64 63316582777114, i64 0], [3 x i64] [i64 -7696403785703698132, i64 63316, i64 0], [3 x i64] [i64 1, i64 0, i64 186192756736], [3 x i64] [i64 -8786453967493193363, i64 3555734177475596581, i64 121759043258], [3 x i64] [i64 -3626602039094200513, i64 -4444867348953127235, i64 186984450425], [3 x i64] [i64 -5772702290001773997, i64 -286839016478075477, i64 157302774714], [3 x i64] [i64 -3060057257266871622, i64 5585207679308509466, i64 140756160413], [3 x i64] [i64 5679510383719146248, i64 -4498046450842826945, i64 237531676044], [3 x i64] [i64 1391101719248678506, i64 -8639052145970515185, i64 46857496045], [3 x i64] [i64 3364596672173710517, i64 -2628733977568730699, i64 162305194542], [3 x i64] [i64 -7170234863605231884, i64 5629845624785010942, i64 249515952034], [3 x i64] [i64 5316312656902630164, i64 -8929108942571816910, i64 135033574393], [3 x i64] [i64 -975762769235906969, i64 619338244618780584, i64 82630591879], [3 x i64] [i64 7373293636384920591, i64 -6814377066217592718, i64 23655037778], [3 x i64] [i64 7616810902585191937, i64 -6363429812699811701, i64 183915095831], [3 x i64] [i64 -5706448417787647692, i64 -1566205464250669967, i64 84943484855], [3 x i64] [i64 -80108127793024676, i64 -1042520399223047389, i64 77384299092], [3 x i64] [i64 4472171448243407067, i64 7089067015287185432, i64 11140526925], [3 x i64] [i64 229592460858185629, i64 2592264228029443647, i64 25727159819], [3 x i64] [i64 -5697071207292436620, i64 -5033012989339327177, i64 224945689], [3 x i64] [i64 -8994487350842452923, i64 4149515568880992958, i64 0], [3 x i64] [i64 -2195292437290946982, i64 4149515568, i64 0], [3 x i64] [i64 1, i64 0, i64 88505450496], [3 x i64] [i64 4515791283442995454, i64 -9122828132067998192, i64 80658968920], [3 x i64] [i64 -5140588403661850270, i64 -6290913044616852053, i64 4943102544], [3 x i64] [i64 4456930152933417601, i64 -1049572797121318941, i64 130643721220], [3 x i64] [i64 9089157128546489637, i64 -6572183456156297848, i64 147728846210], [3 x i64] [i64 -6009411893364035776, i64 -5001904556871823663, i64 27921269139], [3 x i64] [i64 3433060408790452524, i64 -1452328030124960946, i64 132860839963], [3 x i64] [i64 8275594526021936172, i64 -2567049570832535887, i64 33229560708], [3 x i64] [i64 3846512444641107689, i64 4234647645735263358, i64 21432520225], [3 x i64] [i64 6210962618469046250, i64 7978589901512919495, i64 152331453461], [3 x i64] [i64 7272858906616296575, i64 6114237175390859893, i64 110469384344], [3 x i64] [i64 3710743300451225347, i64 8658612872088282707, i64 176555860334], [3 x i64] [i64 6424677242672030600, i64 -8192930743026226764, i64 67720423344], [3 x i64] [i64 -6960901817539249754, i64 -5157279011961720626, i64 136223517251], [3 x i64] [i64 7355797963557024308, i64 4123165538545565411, i64 97425355144], [3 x i64] [i64 6358188982569427273, i64 7846417485927038480, i64 249572581985], [3 x i64] [i64 -5971649344940784214, i64 -7884470727351532753, i64 39145907193], [3 x i64] [i64 -1158589235801655433, i64 2691512658346619119, i64 150040721959], [3 x i64] [i64 2983850577727105262, i64 751187558544605997, i64 14742], [3 x i64] [i64 -4528139438708365681, i64 271942652322184, i64 0], [3 x i64] [i64 -6413523677939675289, i64 271942, i64 0], [3 x i64] [i64 1, i64 0, i64 101203705856], [3 x i64] [i64 5782377197813462997, i64 3757709791947931307, i64 178187174245], [3 x i64] [i64 -714604225478152390, i64 3452755398462519464, i64 111168366770], [3 x i64] [i64 3628839527415562921, i64 3105818720159874522, i64 202913935727], [3 x i64] [i64 3188692267613601004, i64 -1587605614815052253, i64 149665260746], [3 x i64] [i64 5168130193478377352, i64 -6174849333103317862, i64 216294341269], [3 x i64] [i64 -5890516544304460326, i64 5429638071845793700, i64 96007875544], [3 x i64] [i64 -3359653760918110424, i64 145278150038876888, i64 196490615904], [3 x i64] [i64 -8164939315098909122, i64 9050266019724932449, i64 185645480644], [3 x i64] [i64 -4208566487550965036, i64 -6539727820258060751, i64 218134048441], [3 x i64] [i64 7107927498217678128, i64 2472757296513770734, i64 41572390106], [3 x i64] [i64 3845814658485364450, i64 -7888010275531312257, i64 76862879785], [3 x i64] [i64 714293333681725946, i64 -2529421502878295767, i64 109664308812], [3 x i64] [i64 -1680571415060434634, i64 -6192409416918196379, i64 56426608749], [3 x i64] [i64 812461421432632215, i64 7869542424662730261, i64 228074731832], [3 x i64] [i64 -3228719355075752420, i64 1378558986933000252, i64 148732996836], [3 x i64] [i64 8110797782612805146, i64 -4925339031800140512, i64 90173837972], [3 x i64] [i64 -2505550108776022389, i64 3206744593298092011, i64 108754314586], [3 x i64] [i64 -4302463471386273683, i64 -4532095951494633112, i64 966134380], [3 x i64] [i64 -3374341425896426371, i64 -624710411122851544, i64 0], [3 x i64] [i64 -7624037982426181727, i64 17822033662, i64 0], [3 x i64] [i64 -3282899479998584885, i64 17, i64 0], [3 x i64] [i64 1, i64 0, i64 38066978816], [3 x i64] [i64 2408529687792073670, i64 1235541077112082495, i64 234651333670], [3 x i64] [i64 3980682212356510808, i64 -6431758555394017771, i64 26084650986], [3 x i64] [i64 4202670442792148519, i64 1561535086344155740, i64 247691815706], [3 x i64] [i64 -9027160730554899694, i64 -5684996797393327040, i64 78528309751], [3 x i64] [i64 -2087577582139117041, i64 -8701149292605585480, i64 89949448782], [3 x i64] [i64 -5879017017325314231, i64 -932505371314704832, i64 4131670873], [3 x i64] [i64 2068388267923286639, i64 2428898913707151712, i64 153003885060], [3 x i64] [i64 5689135844565021196, i64 71666709959904944, i64 62219517337], [3 x i64] [i64 3104061965171139313, i64 4049380135452919192, i64 80998671678], [3 x i64] [i64 7955173880156328016, i64 -24503211932097884, i64 136157995600], [3 x i64] [i64 1445179403240833754, i64 2914504416394425695, i64 229689627272], [3 x i64] [i64 -5908542909250424901, i64 -5725366277960562199, i64 16142359781], [3 x i64] [i64 7580606719088482667, i64 2626074459217717421, i64 54231018000], [3 x i64] [i64 8168318283218819755, i64 4261529925046307654, i64 33625369910], [3 x i64] [i64 5249615277755961676, i64 -6910705388279246031, i64 165680648993], [3 x i64] [i64 6312997372068219831, i64 -5890986284274388849, i64 128645381029], [3 x i64] [i64 9183815417025176703, i64 -6541565389163471558, i64 26760719488], [3 x i64] [i64 -7762894120335674679, i64 -4413946354785008566, i64 84582777114], [3 x i64] [i64 -1271731918093884048, i64 -7696403785703698133, i64 63316], [3 x i64] [i64 -443235785330654704, i64 1167984798111281, i64 0], [3 x i64] [i64 -3724189512758554665, i64 1167984, i64 0], [3 x i64] [i64 1, i64 0, i64 37523685376], [3 x i64] [i64 -3387419591293156686, i64 -8786453967493193364, i64 189803401509], [3 x i64] [i64 4134778595813308312, i64 -3626602039094200514, i64 171687061181], [3 x i64] [i64 -2125625731069890668, i64 -5772702290001773998, i64 26834113963], [3 x i64] [i64 1523550293123468805, i64 -3060057257266871623, i64 63307886874], [3 x i64] [i64 8016371634569878509, i64 5679510383719146247, i64 15075411775], [3 x i64] [i64 -8562523934098417506, i64 1391101719248678505, i64 181182395151], [3 x i64] [i64 7218073002727840414, i64 3364596672173710516, i64 254611300789], [3 x i64] [i64 -2384508404228192383, i64 -7170234863605231885, i64 50288197886], [3 x i64] [i64 -2888695413149213614, i64 5316312656902630163, i64 168947103794], [3 x i64] [i64 8394398745765058609, i64 -975762769235906970, i64 114399707048], [3 x i64] [i64 5693296366442904274, i64 7373293636384920590, i64 139412908146], [3 x i64] [i64 -6663249398648390258, i64 7616810902585191936, i64 113690652811], [3 x i64] [i64 -5069450962844103722, i64 -5706448417787647693, i64 35995657329], [3 x i64] [i64 -5606010022616489486, i64 -80108127793024677, i64 24242436899], [3 x i64] [i64 7009868331566697505, i64 4472171448243407066, i64 63012446232], [3 x i64] [i64 5019690705031194477, i64 229592460858185628, i64 55691161151], [3 x i64] [i64 8608277240439804984, i64 -5697071207292436621, i64 190512407863], [3 x i64] [i64 -6274261483051802394, i64 -8994487350842452924, i64 48880992958], [3 x i64] [i64 -1833259181030779626, i64 -2195292437290946983, i64 4149515568], [3 x i64] [i64 5721488662757049244, i64 2758075434182769113, i64 4], [3 x i64] [i64 386931106438877039, i64 76545051729, i64 0], [3 x i64] [i64 -8392314321526725957, i64 76, i64 0], [3 x i64] [i64 1, i64 0, i64 16244801536], [3 x i64] [i64 8634592106137071313, i64 4515791283442995453, i64 171721328144], [3 x i64] [i64 -5820387572339720885, i64 -5140588403661850271, i64 227241610667], [3 x i64] [i64 4803333258178976933, i64 4456930152933417600, i64 136492724195], [3 x i64] [i64 -4833660850151342319, i64 9089157128546489636, i64 209674229128], [3 x i64] [i64 -2339776076472104627, i64 -6009411893364035777, i64 78186106577], [3 x i64] [i64 -3613822829329531446, i64 3433060408790452523, i64 177448620878], [3 x i64] [i64 -4672719435992320219, i64 8275594526021936171, i64 126208519857], [3 x i64] [i64 -8773731105204322731, i64 3846512444641107688, i64 199336696958], [3 x i64] [i64 5391832334264815667, i64 6210962618469046249, i64 117394262471], [3 x i64] [i64 -1932307781076848528, i64 7272858906616296574, i64 83201159797], [3 x i64] [i64 -6421707720926097463, i64 3710743300451225346, i64 180348282451], [3 x i64] [i64 7059867105311401050, i64 6424677242672030599, i64 206622648756], [3 x i64] [i64 -5677533442156956946, i64 -6960901817539249755, i64 227398758606], [3 x i64] [i64 8328873878884556145, i64 7355797963557024307, i64 16344678115], [3 x i64] [i64 1016565892414238685, i64 6358188982569427272, i64 47676276240], [3 x i64] [i64 -8783765611782301335, i64 -5971649344940784215, i64 239937192751], [3 x i64] [i64 -4716776796157683504, i64 -1158589235801655434, i64 45161754863], [3 x i64] [i64 6371593776693359475, i64 2983850577727105261, i64 136754529069], [3 x i64] [i64 -829535962863908371, i64 -4528139438708365682, i64 70652322184], [3 x i64] [i64 -3485783848076464819, i64 -6413523677939675290, i64 271942], [3 x i64] [i64 -6356109772387889058, i64 5016456510113118, i64 0], [3 x i64] [i64 -9036817925230916113, i64 5016456, i64 0], [3 x i64] [i64 1, i64 0, i64 171313463296], [3 x i64] [i64 4307062684900157136, i64 5782377197813462996, i64 168961261227], [3 x i64] [i64 -3145984689839639763, i64 -714604225478152391, i64 218196719784], [3 x i64] [i64 -2439209836066106169, i64 3628839527415562920, i64 35172859354], [3 x i64] [i64 7138502295759677634, i64 3188692267613601003, i64 154280164899], [3 x i64] [i64 8218537071653683708, i64 5168130193478377351, i64 164680674458], [3 x i64] [i64 2254219416760329296, i64 -5890516544304460327, i64 216817872804], [3 x i64] [i64 3057410459568460683, i64 -3359653760918110425, i64 97557377752], [3 x i64] [i64 8217810929938874370, i64 -8164939315098909123, i64 49771853153], [3 x i64] [i64 -6705617601211210687, i64 -4208566487550965037, i64 238385321521], [3 x i64] [i64 1175325363726654805, i64 7107927498217678127, i64 127208482030], [3 x i64] [i64 -9017901003012820716, i64 3845814658485364449, i64 41038721919], [3 x i64] [i64 -5784243094994419720, i64 714293333681725945, i64 101908896041], [3 x i64] [i64 6443045597035184564, i64 -1680571415060434635, i64 21044043621], [3 x i64] [i64 1921385512639171183, i64 812461421432632214, i64 60824970773], [3 x i64] [i64 -7977268979354000217, i64 -3228719355075752421, i64 32439687228], [3 x i64] [i64 -3767569584632598042, i64 8110797782612805145, i64 235864173856], [3 x i64] [i64 -6593669838989725972, i64 -2505550108776022390, i64 104766762987], [3 x i64] [i64 8270896886596139124, i64 -4302463471386273684, i64 40817076584], [3 x i64] [i64 -1914077027050433490, i64 -3374341425896426372, i64 254586700072], [3 x i64] [i64 148341279888833483, i64 -7624037982426181728, i64 17822033662], [3 x i64] [i64 -8082114777312275575, i64 -3282899479998584886, i64 17], [3 x i64] [i64 -4181061488163779945, i64 328758493846, i64 0], [3 x i64] [i64 -4455002200798203738, i64 328, i64 0], [3 x i64] [i64 1, i64 0, i64 63130566656], [3 x i64] [i64 -4417698286860827183, i64 2408529687792073669, i64 21215793215], [3 x i64] [i64 4005878521026842341, i64 3980682212356510807, i64 92227827221], [3 x i64] [i64 3428326338640386488, i64 4202670442792148518, i64 64510636636], [3 x i64] [i64 1010001558294829380, i64 -9027160730554899695, i64 184886832192], [3 x i64] [i64 2012063724327403418, i64 -2087577582139117042, i64 64681297848], [3 x i64] [i64 -7449589534858179004, i64 -5879017017325314232, i64 96112127552], [3 x i64] [i64 1917749645489607898, i64 2068388267923286638, i64 176308408672], [3 x i64] [i64 -8682871549998332811, i64 5689135844565021195, i64 152168271536], [3 x i64] [i64 -2571044995255492305, i64 3104061965171139312, i64 164431250840], [3 x i64] [i64 -7480214621038275510, i64 7955173880156328015, i64 95078343332], [3 x i64] [i64 -373499941603814703, i64 1445179403240833753, i64 233679697247], [3 x i64] [i64 4435241176994913173, i64 -5908542909250424902, i64 173410945513], [3 x i64] [i64 5464400086219074323, i64 7580606719088482666, i64 70442805421], [3 x i64] [i64 2445909179323258812, i64 8168318283218819754, i64 49284582214], [3 x i64] [i64 873962058644121211, i64 5249615277755961675, i64 143342228273], [3 x i64] [i64 -1770871879596900759, i64 6312997372068219830, i64 58497855631], [3 x i64] [i64 -7766641384434751261, i64 9183815417025176702, i64 74579172666], [3 x i64] [i64 2370498083108897524, i64 -7762894120335674680, i64 43931059274], [3 x i64] [i64 -3092343552258216950, i64 -1271731918093884049, i64 49975972139], [3 x i64] [i64 259991949657381021, i64 -443235785330654705, i64 112798111281], [3 x i64] [i64 -8111457514936584699, i64 -3724189512758554666, i64 1167984], [3 x i64] [i64 -2109217419802794353, i64 21545516652742137, i64 0], [3 x i64] [i64 -6405776910006766722, i64 21545516, i64 0], [3 x i64] [i64 1, i64 0, i64 108816367616], [3 x i64] [i64 3373309160242342187, i64 -3387419591293156687, i64 62224146796], [3 x i64] [i64 -4806903019198967395, i64 4134778595813308311, i64 82884769598], [3 x i64] [i64 -2547888645969843585, i64 -2125625731069890669, i64 185082591826], [3 x i64] [i64 4544387940067005419, i64 1523550293123468804, i64 7434568377], [3 x i64] [i64 5281598644835398575, i64 8016371634569878508, i64 105535824647], [3 x i64] [i64 -4771101668626142781, i64 -8562523934098417507, i64 180391292521], [3 x i64] [i64 3973392623768015721, i64 7218073002727840413, i64 243870735540], [3 x i64] [i64 4491285101509114191, i64 -2384508404228192384, i64 19843403507], [3 x i64] [i64 -3444439800899281116, i64 -2888695413149213615, i64 102455061267], [3 x i64] [i64 -1121645533089658148, i64 8394398745765058608, i64 14308634214], [3 x i64] [i64 1137212864974584822, i64 5693296366442904273, i64 638784526], [3 x i64] [i64 2619406097224859078, i64 -6663249398648390259, i64 51725184512], [3 x i64] [i64 8281347529729293732, i64 -5069450962844103723, i64 91696097587], [3 x i64] [i64 -7102024406914101512, i64 -5606010022616489487, i64 218380005723], [3 x i64] [i64 -1162873567030125833, i64 7009868331566697504, i64 156272117978], [3 x i64] [i64 -7392533555698947841, i64 5019690705031194476, i64 115466655644], [3 x i64] [i64 6399455551799092885, i64 8608277240439804983, i64 68659871603], [3 x i64] [i64 -5516214157135584446, i64 -6274261483051802395, i64 89900618820], [3 x i64] [i64 -3896647021371999212, i64 -1833259181030779627, i64 217310162521], [3 x i64] [i64 -5959111361503136868, i64 5721488662757049243, i64 81020975577], [3 x i64] [i64 5791017277843595715, i64 386931106438877038, i64 76545051729], [3 x i64] [i64 -8219479890260515503, i64 -8392314321526725958, i64 76], [3 x i64] [i64 2006055278511721441, i64 1412006979354, i64 0], [3 x i64] [i64 128746359043876333, i64 1412, i64 0], [3 x i64] [i64 1, i64 0, i64 253468082176], [3 x i64] [i64 7408146306870995754, i64 8634592106137071312, i64 97684476157], [3 x i64] [i64 8299024588195267962, i64 -5820387572339720886, i64 128260389217], [3 x i64] [i64 1497052939192040881, i64 4803333258178976932, i64 36737966720], [3 x i64] [i64 -1675029809443747869, i64 -4833660850151342320, i64 63873160484], [3 x i64] [i64 142988846654429432, i64 -2339776076472104628, i64 43804094271], [3 x i64] [i64 -6606905705993447471, i64 -3613822829329531447, i64 43746691371], [3 x i64] [i64 6019646776647679765, i64 -4672719435992320220, i64 232524375083], [3 x i64] [i64 4611972391702034948, i64 -8773731105204322732, i64 233292291816], [3 x i64] [i64 -1999561751504122071, i64 5391832334264815666, i64 126895249385], [3 x i64] [i64 2113477168726764245, i64 -1932307781076848529, i64 2651878526], [3 x i64] [i64 3536261187802311516, i64 -6421707720926097464, i64 135382716162], [3 x i64] [i64 -2362212722841762, i64 7059867105311401049, i64 165692220295], [3 x i64] [i64 4734315730275909838, i64 -5677533442156956947, i64 51451509157], [3 x i64] [i64 -8471807756859893442, i64 8328873878884556144, i64 72055108147], [3 x i64] [i64 -6582320392168893974, i64 1016565892414238684, i64 169523831112], [3 x i64] [i64 8207245621417902667, i64 -8783765611782301336, i64 118744303017], [3 x i64] [i64 7992526918695295028, i64 -4716776796157683505, i64 237345404790], [3 x i64] [i64 8679354522130259987, i64 6371593776693359474, i64 142955030765], [3 x i64] [i64 6065763799692166461, i64 -829535962863908372, i64 102811035278], [3 x i64] [i64 -303402964660526640, i64 -3485783848076464820, i64 94655434598], [3 x i64] [i64 -3204251742426201046, i64 -6356109772387889059, i64 136510113118], [3 x i64] [i64 -8460391720527284653, i64 -9036817925230916114, i64 5016456], [3 x i64] [i64 -1106280783798015539, i64 92537289398950870, i64 0], [3 x i64] [i64 7359344614214233035, i64 92537289, i64 0], [3 x i64] [i64 1, i64 0, i64 212233486336], [3 x i64] [i64 419091135888749535, i64 4307062684900157135, i64 57829455828], [3 x i64] [i64 1073142712661309790, i64 -3145984689839639764, i64 168867770169], [3 x i64] [i64 -7370305171513879330, i64 -2439209836066106170, i64 235386978984], [3 x i64] [i64 1820390940081322073, i64 7138502295759677633, i64 135445527787], [3 x i64] [i64 -28935099765028019, i64 8218537071653683707, i64 217122201479], [3 x i64] [i64 -8195449875977968659, i64 2254219416760329295, i64 39165742553], [3 x i64] [i64 1502394029870156428, i64 3057410459568460682, i64 61445488423], [3 x i64] [i64 321014853559106075, i64 8217810929938874369, i64 211636487741], [3 x i64] [i64 2390953058510591778, i64 -6705617601211210688, i64 47063714515], [3 x i64] [i64 -7761519807801557529, i64 1175325363726654804, i64 225511138607], [3 x i64] [i64 5967405799190505023, i64 -9017901003012820717, i64 249686435553], [3 x i64] [i64 -7236020414481336855, i64 -5784243094994419721, i64 53349278201], [3 x i64] [i64 -6119620432631088843, i64 6443045597035184563, i64 150104158517], [3 x i64] [i64 1709976940107894237, i64 1921385512639171182, i64 27567551382], [3 x i64] [i64 -1839057482770998105, i64 -7977268979354000218, i64 25795759643], [3 x i64] [i64 -114655979436872159, i64 -3767569584632598043, i64 138642556441], [3 x i64] [i64 2946170632136780882, i64 -6593669838989725973, i64 108448366218], [3 x i64] [i64 4824449494694383419, i64 8270896886596139123, i64 124896237676], [3 x i64] [i64 -1438411815016144482, i64 -1914077027050433491, i64 160008041596], [3 x i64] [i64 1773419466622750661, i64 148341279888833482, i64 202561867680], [3 x i64] [i64 3892343466023784379, i64 -8082114777312275576, i64 150773344202], [3 x i64] [i64 -6445172988134128820, i64 -4181061488163779946, i64 72758493846], [3 x i64] [i64 -5513237308208574034, i64 -4455002200798203739, i64 328], [3 x i64] [i64 -6561914065960407882, i64 6064523798049, i64 0], [3 x i64] [i64 -8784375505613346279, i64 6064, i64 0], [3 x i64] [i64 1, i64 0, i64 197760516096], [3 x i64] [i64 -1645244148432887174, i64 -4417698286860827184, i64 87217159109], [3 x i64] [i64 -7954336082921914532, i64 4005878521026842340, i64 38185849943], [3 x i64] [i64 7673849751013230269, i64 3428326338640386487, i64 17054752294], [3 x i64] [i64 6046724489853072367, i64 1010001558294829379, i64 14109074193], [3 x i64] [i64 3723941391207507903, i64 2012063724327403417, i64 72596156942], [3 x i64] [i64 -1602621964849203957, i64 -7449589534858179005, i64 110103961416], [3 x i64] [i64 -7824723891014883589, i64 1917749645489607897, i64 11529300590], [3 x i64] [i64 8741198820686854862, i64 -8682871549998332812, i64 240860623371], [3 x i64] [i64 6855480461211306807, i64 -2571044995255492306, i64 79594496752], [3 x i64] [i64 -8441035615697985312, i64 -7480214621038275511, i64 217979752527], [3 x i64] [i64 8932093106442919061, i64 -373499941603814704, i64 186240434905], [3 x i64] [i64 9062763476260756743, i64 4435241176994913172, i64 106296225722], [3 x i64] [i64 -4781766391676776095, i64 5464400086219074322, i64 170132593002], [3 x i64] [i64 1078499125430623453, i64 2445909179323258811, i64 75047377578], [3 x i64] [i64 6554586738078431161, i64 873962058644121210, i64 182904000843], [3 x i64] [i64 -6269430375066308733, i64 -1770871879596900760, i64 126578969526], [3 x i64] [i64 -1831671801804917663, i64 -7766641384434751262, i64 200128504958], [3 x i64] [i64 -2071339090602982331, i64 2370498083108897523, i64 111832363720], [3 x i64] [i64 -4894492242236028887, i64 -3092343552258216951, i64 15014094191], [3 x i64] [i64 8330500218412111874, i64 259991949657381020, i64 214560277007], [3 x i64] [i64 7044338079053294004, i64 -8111457514936584700, i64 249885659094], [3 x i64] [i64 2688849443046530184, i64 -2109217419802794354, i64 44652742137], [3 x i64] [i64 855940991879596845, i64 -6405776910006766723, i64 21545516], [3 x i64] [i64 7344363609485825662, i64 397444631628981487, i64 0], [3 x i64] [i64 -6844083548574916624, i64 397444631, i64 0], [3 x i64] [i64 1, i64 0, i64 177182867456], [3 x i64] [i64 -1501400865364677781, i64 3373309160242342186, i64 151739417265], [3 x i64] [i64 -8828751412371662471, i64 -4806903019198967396, i64 147861878679], [3 x i64] [i64 -166399140446809528, i64 -2547888645969843586, i64 4246351763], [3 x i64] [i64 5179975582362777795, i64 4544387940067005418, i64 236286316036], [3 x i64] [i64 1798918997870037130, i64 5281598644835398574, i64 157741358060], [3 x i64] [i64 6327667344756325883, i64 -4771101668626142782, i64 157215398045], [3 x i64] [i64 -66416499585543915, i64 3973392623768015720, i64 128243473053], [3 x i64] [i64 -431296516405256327, i64 4491285101509114190, i64 81813276544], [3 x i64] [i64 -8131153325636301738, i64 -3444439800899281117, i64 48939195473], [3 x i64] [i64 7697916092577993382, i64 -1121645533089658149, i64 209061648432], [3 x i64] [i64 3124132817942110723, i64 1137212864974584821, i64 141141998289], [3 x i64] [i64 7448238998520507049, i64 2619406097224859077, i64 213448932749], [3 x i64] [i64 -4553920751335346319, i64 8281347529729293731, i64 241614998485], [3 x i64] [i64 -7404606233663219052, i64 -7102024406914101513, i64 32936960497], [3 x i64] [i64 -7932777766263957812, i64 -1162873567030125834, i64 108599249952], [3 x i64] [i64 -9058306612766024658, i64 -7392533555698947842, i64 55346915180], [3 x i64] [i64 -7479515459031655388, i64 6399455551799092884, i64 229700965431], [3 x i64] [i64 2310996671540235542, i64 -5516214157135584447, i64 21788762341], [3 x i64] [i64 4989110555003898587, i64 -3896647021371999213, i64 155676955925], [3 x i64] [i64 -2175291651725893937, i64 -5959111361503136869, i64 110313931675], [3 x i64] [i64 -8923583892272461143, i64 5791017277843595714, i64 186554421102], [3 x i64] [i64 -5309036649944479366, i64 -8219479890260515504, i64 26108748474], [3 x i64] [i64 -1599884329487690911, i64 2006055278511721440, i64 132006979354], [3 x i64] [i64 7767140033449795569, i64 128746359043876332, i64 1412], [3 x i64] [i64 -1277287157988391599, i64 26046931378436, i64 0], [3 x i64] [i64 -1265844411876223797, i64 26046, i64 0], [3 x i64] [i64 1, i64 0, i64 208401596416], [3 x i64] [i64 -874223372774760200, i64 7408146306870995753, i64 74449891024], [3 x i64] [i64 -477945215475726199, i64 8299024588195267961, i64 164081155402], [3 x i64] [i64 -3108320759764246007, i64 1497052939192040880, i64 16909196452], [3 x i64] [i64 -551422749872825315, i64 -1675029809443747870, i64 76007751440], [3 x i64] [i64 814069333008965773, i64 142988846654429431, i64 201641838924], [3 x i64] [i64 7200328959852723947, i64 -6606905705993447472, i64 36326325705], [3 x i64] [i64 759884557248133773, i64 6019646776647679764, i64 84250015524], [3 x i64] [i64 -5036578211845576765, i64 4611972391702034947, i64 50891603540], [3 x i64] [i64 6278452420856351570, i64 -1999561751504122072, i64 111114571826], [3 x i64] [i64 9072115382556676442, i64 2113477168726764244, i64 200191701103], [3 x i64] [i64 2755882551854926563, i64 3536261187802311515, i64 89999871944], [3 x i64] [i64 8496072611504649269, i64 -2362212722841763, i64 237256647769], [3 x i64] [i64 4122009033579215815, i64 4734315730275909837, i64 112540742381], [3 x i64] [i64 -8224526349259024395, i64 -8471807756859893443, i64 220643171696], [3 x i64] [i64 2064539481554006325, i64 -6582320392168893975, i64 104444915676], [3 x i64] [i64 7935605886598063693, i64 8207245621417902666, i64 207433275752], [3 x i64] [i64 7805147585347548429, i64 7992526918695295027, i64 114470508751], [3 x i64] [i64 5709020905457661273, i64 8679354522130259986, i64 236328825714], [3 x i64] [i64 -2189373766304644942, i64 6065763799692166460, i64 76983552492], [3 x i64] [i64 -3475485880770177970, i64 -303402964660526641, i64 93826297164], [3 x i64] [i64 1133404845901376390, i64 -3204251742426201047, i64 238541361245], [3 x i64] [i64 -8985916525546729569, i64 -8460391720527284654, i64 214940028398], [3 x i64] [i64 1273897659779791346, i64 -1106280783798015540, i64 201398950870], [3 x i64] [i64 7833262224435092783, i64 7359344614214233034, i64 92537289], [3 x i64] [i64 3033420566713364587, i64 1707011694817242694, i64 0], [3 x i64] [i64 -3371277248349202513, i64 1707011694, i64 0], [3 x i64] [i64 1, i64 0, i64 207022718976], [3 x i64] [i64 2484134775182816690, i64 419091135888749534, i64 44058175183], [3 x i64] [i64 -46204258373560339, i64 1073142712661309789, i64 198600454956], [3 x i64] [i64 485494064952118286, i64 -7370305171513879331, i64 193098683590], [3 x i64] [i64 -869695268468236725, i64 1820390940081322072, i64 251998431425], [3 x i64] [i64 2863946907557583807, i64 -28935099765028020, i64 79555723771], [3 x i64] [i64 -5401436655923320816, i64 -8195449875977968660, i64 138081444943], [3 x i64] [i64 -6414655202094453850, i64 1502394029870156427, i64 1017402250], [3 x i64] [i64 8848763446997690580, i64 321014853559106074, i64 64129613825], [3 x i64] [i64 -8415454923401878932, i64 2390953058510591777, i64 84579247168], [3 x i64] [i64 -6854528498210895053, i64 -7761519807801557530, i64 19323493716], [3 x i64] [i64 -2552307325752653228, i64 5967405799190505022, i64 247607734547], [3 x i64] [i64 2091546719588500923, i64 -7236020414481336856, i64 179668254711], [3 x i64] [i64 5863809244813756109, i64 -6119620432631088844, i64 110092698035], [3 x i64] [i64 -7143735320034140371, i64 1709976940107894236, i64 166900304494], [3 x i64] [i64 -5208317536202641084, i64 -1839057482770998106, i64 229993784486], [3 x i64] [i64 -1188286002686546051, i64 -114655979436872160, i64 235159712229], [3 x i64] [i64 8385733444777075179, i64 2946170632136780881, i64 115261533931], [3 x i64] [i64 -8915986977546304316, i64 4824449494694383418, i64 45922023539], [3 x i64] [i64 -4023743228318479399, i64 -1438411815016144483, i64 202096137261], [3 x i64] [i64 -7493604062549667305, i64 1773419466622750660, i64 136211004362], [3 x i64] [i64 -6218403835761287489, i64 3892343466023784378, i64 150650606472], [3 x i64] [i64 -7167609126743292427, i64 -6445172988134128821, i64 165701126806], [3 x i64] [i64 -3806646281024968965, i64 -5513237308208574035, i64 33644277925], [3 x i64] [i64 6232313315128656728, i64 -6561914065960407883, i64 176523798049], [3 x i64] [i64 -2310622240776229528, i64 -8784375505613346280, i64 6064], [3 x i64] [i64 -3371976994036193345, i64 111870718431542, i64 0], [3 x i64] [i64 -5194021268880269708, i64 111870, i64 0], [3 x i64] [i64 1, i64 0, i64 208910811136], [3 x i64] [i64 7740175894281560509, i64 -1645244148432887175, i64 228568794576], [3 x i64] [i64 -2776248681283958390, i64 -7954336082921914533, i64 183416000228], [3 x i64] [i64 -3294486446952558838, i64 7673849751013230268, i64 67327793591], [3 x i64] [i64 4090073428152440422, i64 6046724489853072366, i64 153201875267], [3 x i64] [i64 -3996416300875346032, i64 3723941391207507902, i64 67913121689], [3 x i64] [i64 4466091895542494216, i64 -1602621964849203958, i64 217575820867], [3 x i64] [i64 -7992628695155756239, i64 -7824723891014883590, i64 116473861337], [3 x i64] [i64 2267817233475657788, i64 8741198820686854861, i64 46371636340], [3 x i64] [i64 5500455702636497521, i64 6855480461211306806, i64 73542410542], [3 x i64] [i64 -3267975774217299067, i64 -8441035615697985313, i64 208484209737], [3 x i64] [i64 7062359872332045590, i64 8932093106442919060, i64 148491293392], [3 x i64] [i64 -6149396783681609040, i64 9062763476260756742, i64 18740779924], [3 x i64] [i64 8030124596941085588, i64 -4781766391676776096, i64 187058465554], [3 x i64] [i64 6526656990996654843, i64 1078499125430623452, i64 122355324859], [3 x i64] [i64 6254287345256979850, i64 6554586738078431160, i64 104660133498], [3 x i64] [i64 6642007136244870032, i64 -6269430375066308734, i64 226900704872], [3 x i64] [i64 2027592955437164718, i64 -1831671801804917664, i64 243887712482], [3 x i64] [i64 942718349157325567, i64 -2071339090602982332, i64 9734669043], [3 x i64] [i64 -3829677401825549338, i64 -4894492242236028888, i64 156451597321], [3 x i64] [i64 6831631114396133348, i64 8330500218412111873, i64 4381874332], [3 x i64] [i64 -3843704060322612358, i64 7044338079053294003, i64 142145762820], [3 x i64] [i64 -8540637308390150513, i64 2688849443046530183, i64 125046400654], [3 x i64] [i64 1396179595609933063, i64 855940991879596844, i64 239398138749], [3 x i64] [i64 -6921859805244575199, i64 7344363609485825661, i64 23628981487], [3 x i64] [i64 382929570730827274, i64 -6844083548574916625, i64 397444631], [3 x i64] [i64 6109721884461301381, i64 7331559403129590068, i64 0], [3 x i64] [i64 2390514825000339691, i64 7331559403, i64 0], [3 x i64] [i64 6116191454763441755, i64 7, i64 0], [3 x i64] [i64 1, i64 0, i64 42918608896], [3 x i64] [i64 -6847875302610375306, i64 -1501400865364677782, i64 156521392426], [3 x i64] [i64 -3996777628189466511, i64 -8828751412371662472, i64 126990979484], [3 x i64] [i64 -6771148786303936890, i64 -166399140446809529, i64 234280807038], [3 x i64] [i64 -2585947675159061719, i64 5179975582362777794, i64 174097519594], [3 x i64] [i64 -2266335638463721954, i64 1798918997870037129, i64 194343023534], [3 x i64] [i64 -4689751276554600910, i64 6327667344756325882, i64 104996399554], [3 x i64] [i64 8830551328786758466, i64 -66416499585543916, i64 78976619368], [3 x i64] [i64 -1746788817148600352, i64 -431296516405256328, i64 35559209294], [3 x i64] [i64 -8407760446556149542, i64 -8131153325636301739, i64 219417304867], [3 x i64] [i64 -3361643337017424270, i64 7697916092577993381, i64 245169359579], [3 x i64] [i64 -8438960293419840491, i64 3124132817942110722, i64 197403769845], [3 x i64] [i64 -849837025355949424, i64 7448238998520507048, i64 163753131461], [3 x i64] [i64 -4916093728812978107, i64 -4553920751335346320, i64 247598595491], [3 x i64] [i64 6337724853398437005, i64 -7404606233663219053, i64 246569963255], [3 x i64] [i64 -5677859064805488319, i64 -7932777766263957813, i64 254508948214], [3 x i64] [i64 2759773619512884114, i64 -9058306612766024659, i64 148594534654], [3 x i64] [i64 8434364600126655292, i64 -7479515459031655389, i64 65125279380], [3 x i64] [i64 3843827521199949338, i64 2310996671540235541, i64 19270460225], [3 x i64] [i64 4661660852957808994, i64 4989110555003898586, i64 155882077203], [3 x i64] [i64 -3148699939532227199, i64 -2175291651725893938, i64 194516251547], [3 x i64] [i64 7747773274913338217, i64 -8923583892272461144, i64 80712196546], [3 x i64] [i64 -8097958161688918650, i64 -5309036649944479367, i64 224913270096], [3 x i64] [i64 4175372293197190170, i64 -1599884329487690912, i64 236421057504], [3 x i64] [i64 -7120679916896468471, i64 7767140033449795568, i64 4930758124], [3 x i64] [i64 8100407170505981763, i64 -1277287157988391600, i64 190931378436], [3 x i64] [i64 1706556116319916846, i64 -1265844411876223798, i64 26046], [3 x i64] [i64 -3417846792959909674, i64 480481077043500, i64 0], [3 x i64] [i64 1421201742071739121, i64 480481, i64 0], [3 x i64] [i64 1, i64 0, i64 41952608256], [3 x i64] [i64 8480737406125178272, i64 -874223372774760201, i64 121974090537], [3 x i64] [i64 -7499538422953931255, i64 -477945215475726200, i64 176831497593], [3 x i64] [i64 868577942165647781, i64 -3108320759764246008, i64 226970107312], [3 x i64] [i64 -2429034054618163137, i64 -551422749872825316, i64 247044130786], [3 x i64] [i64 6610879150827623375, i64 814069333008965772, i64 208390330615], [3 x i64] [i64 -6336648207485789524, i64 7200328959852723946, i64 20041193424], [3 x i64] [i64 7756802952949470775, i64 759884557248133772, i64 3726966548], [3 x i64] [i64 2941800790804618759, i64 -5036578211845576766, i64 40340355587], [3 x i64] [i64 -6743143799509624094, i64 6278452420856351569, i64 212491800360], [3 x i64] [i64 806737539257940346, i64 9072115382556676441, i64 91149396692], [3 x i64] [i64 -3867715676599419593, i64 2755882551854926562, i64 93460573019], [3 x i64] [i64 -4198935198365184682, i64 8496072611504649268, i64 205223454557], [3 x i64] [i64 -8733364150014272103, i64 4122009033579215814, i64 61554147533], [3 x i64] [i64 2246428675703313877, i64 -8224526349259024396, i64 233111918909], [3 x i64] [i64 3549783776592680620, i64 2064539481554006324, i64 74430190057], [3 x i64] [i64 -5801714325780338583, i64 7935605886598063692, i64 51423117898], [3 x i64] [i64 -2167734806232971110, i64 7805147585347548428, i64 18309486643], [3 x i64] [i64 343358782242907186, i64 5709020905457661272, i64 60881313810], [3 x i64] [i64 -8369689334623661295, i64 -2189373766304644943, i64 207811593532], [3 x i64] [i64 -7920028668997378030, i64 -3475485880770177971, i64 41061441999], [3 x i64] [i64 -7008028208584407373, i64 1133404845901376389, i64 82512872489], [3 x i64] [i64 5040916178827294801, i64 -8985916525546729570, i64 204069058130], [3 x i64] [i64 -1802982436433702108, i64 1273897659779791345, i64 202424641996], [3 x i64] [i64 4852542977279030386, i64 7833262224435092782, i64 70164442058], [3 x i64] [i64 7883373066544387129, i64 3033420566713364586, i64 110817242694], [3 x i64] [i64 -1747679758941050638, i64 -3371277248349202514, i64 1707011694], [3 x i64] [i64 6805863634444817214, i64 -5404680282296233839, i64 1], [3 x i64] [i64 2266540253968903500, i64 31488807865, i64 0], [3 x i64] [i64 9016913589137908810, i64 31, i64 0], [3 x i64] [i64 1, i64 0, i64 222134665216], [3 x i64] [i64 -6792293049106999582, i64 2484134775182816689, i64 93997495262], [3 x i64] [i64 5299013208454526793, i64 -46204258373560340, i64 221026318685], [3 x i64] [i64 -3528193699783369076, i64 485494064952118285, i64 88952853725], [3 x i64] [i64 6225552657491071054, i64 -869695268468236726, i64 76155254872], [3 x i64] [i64 -8102030577113315831, i64 2863946907557583806, i64 236707187532], [3 x i64] [i64 -5474338439276271407, i64 -5401436655923320817, i64 139652260844], [3 x i64] [i64 -5534858791306766671, i64 -6414655202094453851, i64 26479692427], [3 x i64] [i64 6934311832970995868, i64 8848763446997690579, i64 33543797274], [3 x i64] [i64 -8471014876706121155, i64 -8415454923401878933, i64 230628415265], [3 x i64] [i64 1982857556803548935, i64 -6854528498210895054, i64 62861639142], [3 x i64] [i64 2095735223386298223, i64 -2552307325752653229, i64 232113382974], [3 x i64] [i64 7110931538347639365, i64 2091546719588500922, i64 52317877736], [3 x i64] [i64 -2624560349078582081, i64 5863809244813756108, i64 220612737332], [3 x i64] [i64 -1514761383553224115, i64 -7143735320034140372, i64 166717656540], [3 x i64] [i64 6740069226761666110, i64 -5208317536202641085, i64 32935582886], [3 x i64] [i64 3138792961008474902, i64 -1188286002686546052, i64 81454591520], [3 x i64] [i64 -6292149646737700226, i64 8385733444777075178, i64 58516663377], [3 x i64] [i64 -2666616854487640714, i64 -8915986977546304317, i64 157781872442], [3 x i64] [i64 -2025202142749357235, i64 -4023743228318479400, i64 196593770909], [3 x i64] [i64 7485894627196740576, i64 -7493604062549667306, i64 186662899652], [3 x i64] [i64 8897269432694476707, i64 -6218403835761287490, i64 75611443130], [3 x i64] [i64 -1256920438767872811, i64 -7167609126743292428, i64 173793641291], [3 x i64] [i64 -8861162009423296400, i64 -3806646281024968966, i64 181337854381], [3 x i64] [i64 -5611271794134529519, i64 6232313315128656727, i64 24874740917], [3 x i64] [i64 6776016669542754608, i64 -2310622240776229529, i64 54817204760], [3 x i64] [i64 -106728298088680589, i64 -3371976994036193346, i64 254718431542], [3 x i64] [i64 5254188752292365830, i64 -5194021268880269709, i64 111870], [3 x i64] [i64 6798802596750151183, i64 2063650512248692, i64 0], [3 x i64] [i64 -8997423543494279616, i64 2063650, i64 0], [3 x i64] [i64 1, i64 0, i64 121419595776], [3 x i64] [i64 -1336023591134582805, i64 7740175894281560508, i64 91849499257], [3 x i64] [i64 -2274302380150863403, i64 -2776248681283958391, i64 188821405531], [3 x i64] [i64 6234654946353717320, i64 -3294486446952558839, i64 238221723324], [3 x i64] [i64 -7266460973030106178, i64 4090073428152440421, i64 190783353838], [3 x i64] [i64 -3594484042532590344, i64 -3996416300875346033, i64 10242107326], [3 x i64] [i64 4481533167346438750, i64 4466091895542494215, i64 250566718730], [3 x i64] [i64 4269718344362365664, i64 -7992628695155756240, i64 205122938618], [3 x i64] [i64 -6926714321328450150, i64 2267817233475657787, i64 54298180301], [3 x i64] [i64 -1668061523400183199, i64 5500455702636497520, i64 223822842678], [3 x i64] [i64 -8759156606408188008, i64 -3267975774217299068, i64 148382851295], [3 x i64] [i64 -8352772996881054298, i64 7062359872332045589, i64 6666640532], [3 x i64] [i64 1913763026490934696, i64 -6149396783681609041, i64 96435313926], [3 x i64] [i64 -5745293946095994616, i64 8030124596941085587, i64 220353810784], [3 x i64] [i64 8974572160711134644, i64 6526656990996654842, i64 184339045596], [3 x i64] [i64 -8556743996372857492, i64 6254287345256979849, i64 130360063928], [3 x i64] [i64 4292326716201059148, i64 6642007136244870031, i64 96109916034], [3 x i64] [i64 -3802224898605214196, i64 2027592955437164717, i64 68051104864], [3 x i64] [i64 5051178622270136798, i64 942718349157325566, i64 40792392772], [3 x i64] [i64 675983118348065839, i64 -3829677401825549339, i64 1370343464], [3 x i64] [i64 4431647660065117244, i64 6831631114396133347, i64 179791632385], [3 x i64] [i64 8316115180008411962, i64 -3843704060322612359, i64 135537011123], [3 x i64] [i64 -8825585978164586014, i64 -8540637308390150514, i64 44075687047], [3 x i64] [i64 -3163265114758449544, i64 1396179595609933062, i64 125624765228], [3 x i64] [i64 -4465191000615103803, i64 -6921859805244575200, i64 239020758653], [3 x i64] [i64 4558368743929911607, i64 382929570730827273, i64 52331208687], [3 x i64] [i64 -3229739603851073825, i64 6109721884461301380, i64 235129590068], [3 x i64] [i64 -6857553703713035879, i64 2390514825000339690, i64 7331559403], [3 x i64] [i64 3670624237398152929, i64 6116191454763441754, i64 7], [3 x i64] [i64 -4975030315291511839, i64 135243399970, i64 0], [3 x i64] [i64 4489936967610296411, i64 135, i64 0], [3 x i64] [i64 1, i64 0, i64 106628775936], [3 x i64] [i64 9052049303222747950, i64 -6847875302610375307, i64 120783334250], [3 x i64] [i64 1011330006193020538, i64 -3996777628189466512, i64 71632935288], [3 x i64] [i64 -1034668429350073004, i64 -6771148786303936891, i64 194859815495], [3 x i64] [i64 6358678384745980468, i64 -2585947675159061720, i64 137877141698], [3 x i64] [i64 -3184390144866700697, i64 -2266335638463721955, i64 250745768073], [3 x i64] [i64 -7301486387270969880, i64 -4689751276554600911, i64 20478705146], [3 x i64] [i64 1600562031807691890, i64 8830551328786758465, i64 120905306388], [3 x i64] [i64 6775147337046626724, i64 -1746788817148600353, i64 85544214392], [3 x i64] [i64 -2674616751603253794, i64 -8407760446556149543, i64 165817764949], [3 x i64] [i64 4141472200527441474, i64 -3361643337017424271, i64 2542523045], [3 x i64] [i64 -200736265830270349, i64 -8438960293419840492, i64 168953930242], [3 x i64] [i64 960746958654787123, i64 -849837025355949425, i64 112733498024], [3 x i64] [i64 -7090762861445143139, i64 -4916093728812978108, i64 147343568752], [3 x i64] [i64 1573078209576251481, i64 6337724853398437004, i64 203692202643], [3 x i64] [i64 6245294478780491367, i64 -5677859064805488320, i64 45149607627], [3 x i64] [i64 7523292955659721510, i64 2759773619512884113, i64 35457227821], [3 x i64] [i64 -3992007322694325111, i64 8434364600126655291, i64 21208374307], [3 x i64] [i64 7219786377781411316, i64 3843827521199949337, i64 218252709141], [3 x i64] [i64 -7849620991500159185, i64 4661660852957808993, i64 206829308634], [3 x i64] [i64 6922353544343010714, i64 -3148699939532227200, i64 168420007630], [3 x i64] [i64 -4129220717416174186, i64 7747773274913338216, i64 121561008808], [3 x i64] [i64 4057766168681892717, i64 -8097958161688918651, i64 96226347385], [3 x i64] [i64 -3232660461808307571, i64 4175372293197190169, i64 240613987168], [3 x i64] [i64 8390569016883950721, i64 -7120679916896468472, i64 80439123952], [3 x i64] [i64 -7766271535501376561, i64 8100407170505981762, i64 202092512592], [3 x i64] [i64 -6273176240579006689, i64 1706556116319916845, i64 44814718154], [3 x i64] [i64 1386341248286610026, i64 -3417846792959909675, i64 225077043500], [3 x i64] [i64 -5959443120912314264, i64 1421201742071739120, i64 480481], [3 x i64] [i64 2614759871804869720, i64 8863311460481781, i64 0], [3 x i64] [i64 8494389567327729477, i64 8863311, i64 0], [3 x i64] [i64 1, i64 0, i64 247459741696], [3 x i64] [i64 6260469580539185878, i64 8480737406125178271, i64 136593449207], [3 x i64] [i64 -628170972625025775, i64 -7499538422953931256, i64 8047085704], [3 x i64] [i64 2201029069927307150, i64 868577942165647780, i64 28868321800], [3 x i64] [i64 -8048746459904654577, i64 -2429034054618163138, i64 140358376476], [3 x i64] [i64 -4176828107939447875, i64 6610879150827623374, i64 234656489612], [3 x i64] [i64 -1670604164513184889, i64 -6336648207485789525, i64 140420497130], [3 x i64] [i64 6246513436385199720, i64 7756802952949470774, i64 194159475340], [3 x i64] [i64 2926026498821554288, i64 2941800790804618758, i64 81634453442], [3 x i64] [i64 -2721244682681210634, i64 -6743143799509624095, i64 89043733329], [3 x i64] [i64 8576577277771450827, i64 806737539257940345, i64 226790330713], [3 x i64] [i64 -2923392897687292281, i64 -3867715676599419594, i64 52772375266], [3 x i64] [i64 4775158829429176134, i64 -4198935198365184683, i64 198526563380], [3 x i64] [i64 -8304926851586019154, i64 -8733364150014272104, i64 244121779142], [3 x i64] [i64 -5599085173466927030, i64 2246428675703313876, i64 52192434164], [3 x i64] [i64 -4738546109249036961, i64 3549783776592680619, i64 76685488436], [3 x i64] [i64 1951540006613246932, i64 -5801714325780338584, i64 12882486860], [3 x i64] [i64 -8467446746429459417, i64 -2167734806232971111, i64 88018613516], [3 x i64] [i64 -3065436367426997932, i64 343358782242907185, i64 177546278232], [3 x i64] [i64 -8409315416166490439, i64 -8369689334623661296, i64 77570654385], [3 x i64] [i64 2584877324547208668, i64 -7920028668997378031, i64 133620094029], [3 x i64] [i64 1126624732730703576, i64 -7008028208584407374, i64 158273268613], [3 x i64] [i64 1501064139624981020, i64 5040916178827294800, i64 241902260126], [3 x i64] [i64 5219661484955306109, i64 -1802982436433702109, i64 46263056881], [3 x i64] [i64 5336997298570282212, i64 4852542977279030385, i64 106427358510], [3 x i64] [i64 -6255612897975718254, i64 7883373066544387128, i64 174905258090], [3 x i64] [i64 3707068178994436536, i64 -1747679758941050639, i64 145368946606], [3 x i64] [i64 5045484691732942022, i64 6805863634444817213, i64 185122869393], [3 x i64] [i64 -3598843530800840384, i64 2266540253968903499, i64 31488807865], [3 x i64] [i64 9097257915916965135, i64 9016913589137908809, i64 31], [3 x i64] [i64 2472027983230314217, i64 580865979874, i64 0], [3 x i64] [i64 -2472234962576279411, i64 580, i64 0], [3 x i64] [i64 1, i64 0, i64 177631789056], [3 x i64] [i64 -6347257231761364217, i64 -6792293049106999583, i64 236287260081], [3 x i64] [i64 5319910566029976328, i64 5299013208454526792, i64 13808736236], [3 x i64] [i64 -6897529652692265752, i64 -3528193699783369077, i64 74337487885], [3 x i64] [i64 1998791413186046700, i64 6225552657491071053, i64 190560788042], [3 x i64] [i64 -1371572143619540406, i64 -8102030577113315832, i64 15703235518], [3 x i64] [i64 -3288448069896050142, i64 -5474338439276271408, i64 165699954703], [3 x i64] [i64 1360083178079384115, i64 -5534858791306766672, i64 211375909797], [3 x i64] [i64 6167980558592741158, i64 6934311832970995867, i64 107540785363], [3 x i64] [i64 3630180428124865653, i64 -8471014876706121156, i64 50107490923], [3 x i64] [i64 2276550099763657677, i64 1982857556803548934, i64 83113610034], [3 x i64] [i64 407006713016100655, i64 2095735223386298222, i64 186385484371], [3 x i64] [i64 -4204165012056055614, i64 7110931538347639364, i64 204857722298], [3 x i64] [i64 -502250741030907912, i64 -2624560349078582082, i64 44917884620], [3 x i64] [i64 987185901870869452, i64 -1514761383553224116, i64 67365379884], [3 x i64] [i64 5578665155415167745, i64 6740069226761666109, i64 124170154307], [3 x i64] [i64 4849210377429577536, i64 3138792961008474901, i64 234658901884], [3 x i64] [i64 -7634748670320659754, i64 -6292149646737700227, i64 195855442410], [3 x i64] [i64 7051931074990177294, i64 -2666616854487640715, i64 216890213571], [3 x i64] [i64 2030832259446664275, i64 -2025202142749357236, i64 22405811160], [3 x i64] [i64 6069512651054767896, i64 7485894627196740575, i64 190482321942], [3 x i64] [i64 -7838042819945592817, i64 8897269432694476706, i64 244931862206], [3 x i64] [i64 -2746690630282644899, i64 -1256920438767872812, i64 250519635444], [3 x i64] [i64 -687024838984010394, i64 -8861162009423296401, i64 87695812346], [3 x i64] [i64 -3259422504793146406, i64 -5611271794134529520, i64 103367328599], [3 x i64] [i64 -7406587615596422022, i64 6776016669542754607, i64 190994214247], [3 x i64] [i64 2800727824598008497, i64 -106728298088680590, i64 115284830142], [3 x i64] [i64 2997236166375604479, i64 5254188752292365829, i64 116368563827], [3 x i64] [i64 6260091886451512841, i64 6798802596750151182, i64 34512248692], [3 x i64] [i64 -873684758481204142, i64 -8997423543494279617, i64 2063650], [3 x i64] [i64 7519453664590169251, i64 38067632857031246, i64 0], [3 x i64] [i64 -2637308008055685087, i64 38067632, i64 0], [3 x i64] [i64 1, i64 0, i64 188927574016], [3 x i64] [i64 228921437623588922, i64 -1336023591134582806, i64 137876709820], [3 x i64] [i64 2195862230003073884, i64 -2274302380150863404, i64 9337981321], [3 x i64] [i64 960207412233973688, i64 6234654946353717319, i64 101606084361], [3 x i64] [i64 2464387149230492479, i64 -7266460973030106179, i64 143805142629], [3 x i64] [i64 3631866936444955213, i64 -3594484042532590345, i64 7242944399], [3 x i64] [i64 1578304441149380227, i64 4481533167346438749, i64 48231461895], [3 x i64] [i64 -256205554036106435, i64 4269718344362365663, i64 59624502064], [3 x i64] [i64 1271000736479934749, i64 -6926714321328450151, i64 112909574203], [3 x i64] [i64 -153781040891805982, i64 -1668061523400183200, i64 132525165168], [3 x i64] [i64 -1278730051784014161, i64 -8759156606408188009, i64 21547195268], [3 x i64] [i64 -399986360839172667, i64 -8352772996881054299, i64 175103745301], [3 x i64] [i64 -3588745179797808396, i64 1913763026490934695, i64 147688546991], [3 x i64] [i64 -6513136703740867041, i64 -5745293946095994617, i64 250486512531], [3 x i64] [i64 3483798509902859162, i64 8974572160711134643, i64 137536137978], [3 x i64] [i64 7378828438829845831, i64 -8556743996372857493, i64 143232687497], [3 x i64] [i64 -2655606643361852051, i64 4292326716201059147, i64 173793880975], [3 x i64] [i64 -1402602836879618975, i64 -3802224898605214197, i64 254273824941], [3 x i64] [i64 9075651910862456484, i64 5051178622270136797, i64 229036645118], [3 x i64] [i64 -635536717824987521, i64 675983118348065838, i64 227240240101], [3 x i64] [i64 4438638126207305937, i64 4431647660065117243, i64 121450817507], [3 x i64] [i64 -5938771438196601431, i64 8316115180008411961, i64 142521564025], [3 x i64] [i64 -3788474945611442208, i64 -8825585978164586015, i64 6828519054], [3 x i64] [i64 3642436268910286111, i64 -3163265114758449545, i64 32757941510], [3 x i64] [i64 3783099432964819561, i64 -4465191000615103804, i64 9247109664], [3 x i64] [i64 -8949164207682011978, i64 4558368743929911606, i64 132824915465], [3 x i64] [i64 3395179445046271361, i64 -3229739603851073826, i64 234628251268], [3 x i64] [i64 5938502732309497276, i64 -6857553703713035880, i64 90198984938], [3 x i64] [i64 5793671185917606255, i64 3670624237398152928, i64 34730303066], [3 x i64] [i64 889272970253526588, i64 -4975030315291511840, i64 135243399970], [3 x i64] [i64 8594177504370135501, i64 4489936967610296410, i64 135], [3 x i64] [i64 7374354721120724712, i64 2494800386918, i64 0], [3 x i64] [i64 -3682211430044044049, i64 2494, i64 0], [3 x i64] [i64 1, i64 0, i64 117490712576], [3 x i64] [i64 5392404173658087695, i64 9052049303222747949, i64 112054824309], [3 x i64] [i64 4976586473237854316, i64 1011330006193020537, i64 133943910512], [3 x i64] [i64 6308932742419013569, i64 -1034668429350073005, i64 40344704645], [3 x i64] [i64 4831846642430703059, i64 6358678384745980467, i64 29827373864], [3 x i64] [i64 -307236217759704715, i64 -3184390144866700698, i64 49604185629], [3 x i64] [i64 4865833876326628410, i64 -7301486387270969881, i64 65086766641], [3 x i64] [i64 -4150082234579372355, i64 1600562031807691889, i64 223367281473], [3 x i64] [i64 -9191970923331433368, i64 6775147337046626723, i64 217855008735], [3 x i64] [i64 -6272031639981676473, i64 -2674616751603253795, i64 113224509657], [3 x i64] [i64 705653145340915199, i64 4141472200527441473, i64 20989118065], [3 x i64] [i64 -682815214747069804, i64 -200736265830270350, i64 143052082196], [3 x i64] [i64 3982836567612046296, i64 960746958654787122, i64 68615608975], [3 x i64] [i64 -5715894796147583877, i64 -7090762861445143140, i64 140085276740], [3 x i64] [i64 -1132255309342315708, i64 1573078209576251480, i64 64338558092], [3 x i64] [i64 -2495325143119250497, i64 6245294478780491366, i64 145407838528], [3 x i64] [i64 7193356087283467261, i64 7523292955659721509, i64 59783592849], [3 x i64] [i64 -853798448013462170, i64 -3992007322694325112, i64 25391385403], [3 x i64] [i64 3554461664875361428, i64 7219786377781411315, i64 97574471193], [3 x i64] [i64 2213779057785318208, i64 -7849620991500159186, i64 128375261537], [3 x i64] [i64 3880940796082421148, i64 6922353544343010713, i64 104776154496], [3 x i64] [i64 4528237545358141043, i64 -4129220717416174187, i64 133219971944], [3 x i64] [i64 -6765547534621404253, i64 4057766168681892716, i64 25824757125], [3 x i64] [i64 -8611738570796908599, i64 -3232660461808307572, i64 8454853657], [3 x i64] [i64 4964088126040986696, i64 8390569016883950720, i64 66578989576], [3 x i64] [i64 3355564873147047622, i64 -7766271535501376562, i64 45659930434], [3 x i64] [i64 1853093467828272927, i64 -6273176240579006690, i64 213075153709], [3 x i64] [i64 -3691402488906542939, i64 1386341248286610025, i64 240676937941], [3 x i64] [i64 4701571132542556621, i64 -5959443120912314265, i64 245141746416], [3 x i64] [i64 6128849686644853851, i64 2614759871804869719, i64 79460481781], [3 x i64] [i64 -6419876172539349522, i64 8494389567327729476, i64 8863311], [3 x i64] [i64 -536983748728125313, i64 163499238157084246, i64 0], [3 x i64] [i64 2897692901883393664, i64 163499238, i64 0], [3 x i64] [i64 1, i64 0, i64 159339380736], [3 x i64] [i64 -6123039271154713462, i64 6260469580539185877, i64 8965946783], [3 x i64] [i64 7135886931147821732, i64 -628170972625025776, i64 164119318024], [3 x i64] [i64 -3105460953416666669, i64 2201029069927307149, i64 62563676580], [3 x i64] [i64 3092789040392634166, i64 -8048746459904654578, i64 206773573694], [3 x i64] [i64 8811761390822097865, i64 -4176828107939447876, i64 171909436366], [3 x i64] [i64 -1575883275099333447, i64 -1670604164513184890, i64 54338624171], [3 x i64] [i64 -994702620117646783, i64 6246513436385199719, i64 6158620214], [3 x i64] [i64 -8131960389699676708, i64 2926026498821554287, i64 225852481030], [3 x i64] [i64 4932636630789274903, i64 -2721244682681210635, i64 121464937185], [3 x i64] [i64 -302859727627427136, i64 8576577277771450826, i64 54841522553], [3 x i64] [i64 2823209155405527322, i64 -2923392897687292282, i64 85258861878], [3 x i64] [i64 -2251347967089325365, i64 4775158829429176133, i64 152549789013], [3 x i64] [i64 1150544491807648944, i64 -8304926851586019155, i64 212696472984], [3 x i64] [i64 7767455475523884824, i64 -5599085173466927031, i64 171743122900], [3 x i64] [i64 -3242366028025559808, i64 -4738546109249036962, i64 104105793195], [3 x i64] [i64 -1207011511990745994, i64 1951540006613246931, i64 153540978792], [3 x i64] [i64 -5560313449186751554, i64 -8467446746429459418, i64 49833822361], [3 x i64] [i64 -284493532531293480, i64 -3065436367426997933, i64 16544130097], [3 x i64] [i64 -1417808707009393532, i64 -8409315416166490440, i64 17140126480], [3 x i64] [i64 -2371276249745352979, i64 2584877324547208667, i64 178061074449], [3 x i64] [i64 -8642885248135053312, i64 1126624732730703575, i64 80081372850], [3 x i64] [i64 -982673265566509799, i64 1501064139624981019, i64 35282958416], [3 x i64] [i64 -764040602470284840, i64 5219661484955306108, i64 113289319203], [3 x i64] [i64 -299055719548200280, i64 5336997298570282211, i64 56660882545], [3 x i64] [i64 6663423873348080051, i64 -6255612897975718255, i64 241200960568], [3 x i64] [i64 -9029473709993316483, i64 3707068178994436535, i64 61273516273], [3 x i64] [i64 -9151730352138207437, i64 5045484691732942021, i64 75804906301], [3 x i64] [i64 6199479138350037783, i64 -3598843530800840385, i64 73493163339], [3 x i64] [i64 887603005365085688, i64 9097257915916965134, i64 226134008905], [3 x i64] [i64 333989628642975696, i64 2472027983230314216, i64 68865979874], [3 x i64] [i64 4620735991403939439, i64 -2472234962576279412, i64 580], [3 x i64] [i64 -6028221009746750415, i64 10715086071862, i64 0], [3 x i64] [i64 1587745622680169419, i64 10715, i64 0], [3 x i64] [i64 1, i64 0, i64 225655914496], [3 x i64] [i64 -7477838991425185978, i64 -6347257231761364218, i64 72288392929], [3 x i64] [i64 -4369836980907573804, i64 5319910566029976327, i64 139626084168], [3 x i64] [i64 3438322122816124202, i64 -6897529652692265753, i64 77108354699], [3 x i64] [i64 -3801330748880477940, i64 1998791413186046699, i64 8925646925], [3 x i64] [i64 -6175462634217261617, i64 -1371572143619540407, i64 208821732872], [3 x i64] [i64 6233751789862708246, i64 -3288448069896050143, i64 176073730256], [3 x i64] [i64 1962644459455827991, i64 1360083178079384114, i64 155334366896], [3 x i64] [i64 8726934184642952500, i64 6167980558592741157, i64 60196792475], [3 x i64] [i64 4531087719737475147, i64 3630180428124865652, i64 6123412028], [3 x i64] [i64 481513520412720775, i64 2276550099763657676, i64 110022063878], [3 x i64] [i64 992149349835802669, i64 407006713016100654, i64 68772091758], [3 x i64] [i64 -7281269637033360255, i64 -4204165012056055615, i64 190972772932], [3 x i64] [i64 -8205958218565844432, i64 -502250741030907913, i64 76053515454], [3 x i64] [i64 -8387414155470619150, i64 987185901870869451, i64 61302420044], [3 x i64] [i64 -3655027622762519730, i64 5578665155415167744, i64 21262876221], [3 x i64] [i64 -3067861758972134213, i64 4849210377429577535, i64 125586119445], [3 x i64] [i64 -3719773844467280488, i64 -7634748670320659755, i64 117382285949], [3 x i64] [i64 5090110549507128156, i64 7051931074990177293, i64 76110091637], [3 x i64] [i64 -1261523292603047775, i64 2030832259446664274, i64 223329028940], [3 x i64] [i64 -8588226382190022310, i64 6069512651054767895, i64 162575098847], [3 x i64] [i64 5595905546638020703, i64 -7838042819945592818, i64 212851101602], [3 x i64] [i64 -2891570846741521360, i64 -2746690630282644900, i64 111962756308], [3 x i64] [i64 -7701507444864195845, i64 -687024838984010395, i64 16823306351], [3 x i64] [i64 -8473430031309790856, i64 -3259422504793146407, i64 47598488080], [3 x i64] [i64 4374506813558796576, i64 -7406587615596422023, i64 114151827759], [3 x i64] [i64 -2485917593282801683, i64 2800727824598008496, i64 5162480498], [3 x i64] [i64 -8810289210910935878, i64 2997236166375604478, i64 14339360261], [3 x i64] [i64 -473412544798232347, i64 6260091886451512840, i64 63952637454], [3 x i64] [i64 7366495200039369602, i64 -873684758481204143, i64 78407630399], [3 x i64] [i64 -7940912747182618217, i64 7519453664590169250, i64 176857031246], [3 x i64] [i64 2803218632575724145, i64 -2637308008055685088, i64 38067632], [3 x i64] [i64 8425731874431741636, i64 702223880805592151, i64 0], [3 x i64] [i64 -3586191827997639505, i64 702223880, i64 0], [3 x i64] [i64 1, i64 0, i64 234012409856], [3 x i64] [i64 6993664200669526994, i64 228921437623588921, i64 212119037930], [3 x i64] [i64 4065363582031999356, i64 2195862230003073883, i64 71052052948], [3 x i64] [i64 6899780515342669867, i64 960207412233973687, i64 189133594695], [3 x i64] [i64 -733243183507706677, i64 2464387149230492478, i64 247196883901], [3 x i64] [i64 6445781125105107086, i64 3631866936444955212, i64 93085560055], [3 x i64] [i64 -4883700002992073045, i64 1578304441149380226, i64 223986111069], [3 x i64] [i64 -5279131079560202731, i64 -256205554036106436, i64 153068901087], [3 x i64] [i64 5505463469596727288, i64 1271000736479934748, i64 96991663513], [3 x i64] [i64 -6321297861190732244, i64 -153781040891805983, i64 151930679904], [3 x i64] [i64 -5909036348974129822, i64 -1278730051784014162, i64 165978316695], [3 x i64] [i64 -3273068987005774547, i64 -399986360839172668, i64 167805453733], [3 x i64] [i64 -4911233899616503140, i64 -3588745179797808397, i64 7646922151], [3 x i64] [i64 -7747831076622454987, i64 -6513136703740867042, i64 179188857095], [3 x i64] [i64 -1494184525277617755, i64 3483798509902859161, i64 107400007091], [3 x i64] [i64 -4918488245965301623, i64 7378828438829845830, i64 75856039275], [3 x i64] [i64 -4324576637384779661, i64 -2655606643361852052, i64 11923964747], [3 x i64] [i64 -5375736935969513319, i64 -1402602836879618976, i64 221491992075], [3 x i64] [i64 -5434856464380647591, i64 9075651910862456483, i64 46965547485], [3 x i64] [i64 3116434332871336590, i64 -635536717824987522, i64 59240619054], [3 x i64] [i64 9050993820536772770, i64 4438638126207305936, i64 57678058555], [3 x i64] [i64 -6453024950270917378, i64 -5938771438196601432, i64 225794626361], [3 x i64] [i64 1414857165879849301, i64 -3788474945611442209, i64 119197456865], [3 x i64] [i64 -4627305852897176522, i64 3642436268910286110, i64 196205082231], [3 x i64] [i64 6073063033888264440, i64 3783099432964819560, i64 54514864836], [3 x i64] [i64 6828883869150720294, i64 -8949164207682011979, i64 222184053046], [3 x i64] [i64 4548265621068768345, i64 3395179445046271360, i64 152321926878], [3 x i64] [i64 -8024219150128179742, i64 5938502732309497275, i64 224314075544], [3 x i64] [i64 1858996082510682634, i64 5793671185917606254, i64 224048207584], [3 x i64] [i64 890276727450878316, i64 889272970253526587, i64 90465891296], [3 x i64] [i64 3886008133802710905, i64 8594177504370135500, i64 102399764570], [3 x i64] [i64 612074409233016757, i64 7374354721120724711, i64 190800386918], [3 x i64] [i64 3927020336901729264, i64 -3682211430044044050, i64 2494], [3 x i64] [i64 5298603480094474942, i64 46020944252475, i64 0], [3 x i64] [i64 -1028360321119121591, i64 46020, i64 0], [3 x i64] [i64 1, i64 0, i64 45292322816], [3 x i64] [i64 8973799690601597929, i64 5392404173658087694, i64 121269781293], [3 x i64] [i64 1343055462055792431, i64 4976586473237854315, i64 83342007929], [3 x i64] [i64 -1021625345026381957, i64 6308932742419013568, i64 51261934931], [3 x i64] [i64 -56962347682875649, i64 4831846642430703058, i64 102983344691], [3 x i64] [i64 272526939565961561, i64 -307236217759704716, i64 231263777382], [3 x i64] [i64 -7153717227778588388, i64 4865833876326628409, i64 113775023591], [3 x i64] [i64 -4449327634805649019, i64 -4150082234579372356, i64 163501702257], [3 x i64] [i64 6186605805999441184, i64 -9191970923331433369, i64 221659992483], [3 x i64] [i64 4401776373281836138, i64 -6272031639981676474, i64 65038253533], [3 x i64] [i64 -2107826983955004608, i64 705653145340915198, i64 114962984513], [3 x i64] [i64 -5109043315774548560, i64 -682815214747069805, i64 50215910002], [3 x i64] [i64 -3834247182893202923, i64 3982836567612046295, i64 156690140722], [3 x i64] [i64 3219935399907691719, i64 -5715894796147583878, i64 88938620316], [3 x i64] [i64 -7559505343657221229, i64 -1132255309342315709, i64 102864728152], [3 x i64] [i64 360256418697768294, i64 -2495325143119250498, i64 37389952614], [3 x i64] [i64 321440824631118565, i64 7193356087283467260, i64 136953715493], [3 x i64] [i64 -8377515993008149036, i64 -853798448013462171, i64 243192687752], [3 x i64] [i64 -9018674466097928641, i64 3554461664875361427, i64 46120009203], [3 x i64] [i64 -3709945056240739272, i64 2213779057785318207, i64 153210386222], [3 x i64] [i64 -7571411506401572336, i64 3880940796082421147, i64 149245476249], [3 x i64] [i64 4611492910339012807, i64 4528237545358141042, i64 108633238933], [3 x i64] [i64 -7703235436112236830, i64 -6765547534621404254, i64 140533156716], [3 x i64] [i64 -9090547758041535588, i64 -8611738570796908600, i64 128269103756], [3 x i64] [i64 -2691145455987362269, i64 4964088126040986695, i64 206181905536], [3 x i64] [i64 1275276394173375542, i64 3355564873147047621, i64 30100456398], [3 x i64] [i64 -5801744709842335365, i64 1853093467828272926, i64 105799888670], [3 x i64] [i64 4553830511509832021, i64 -3691402488906542940, i64 103254872681], [3 x i64] [i64 8869400642218174412, i64 4701571132542556620, i64 87332245607], [3 x i64] [i64 -1875894922550497576, i64 6128849686644853850, i64 68651977815], [3 x i64] [i64 -2319624739607753943, i64 -6419876172539349523, i64 86970890052], [3 x i64] [i64 -8759876823288621066, i64 -536983748728125314, i64 230157084246], [3 x i64] [i64 -7768517203935123581, i64 2897692901883393663, i64 163499238], [3 x i64] [i64 7767227962910162068, i64 3016028602530220424, i64 0], [3 x i64] [i64 -8665903601760557942, i64 3016028602, i64 0], [3 x i64] [i64 1, i64 0, i64 213668069376], [3 x i64] [i64 6288709332106746357, i64 -6123039271154713463, i64 16386837205], [3 x i64] [i64 9066785620141948673, i64 7135886931147821731, i64 141831652624], [3 x i64] [i64 8442375916704414909, i64 -3105460953416666670, i64 14167660429], [3 x i64] [i64 -6842114855609125813, i64 3092789040392634165, i64 188477686542], [3 x i64] [i64 3877248044010875762, i64 8811761390822097864, i64 134914571196], [3 x i64] [i64 -2011606369314334333, i64 -1575883275099333448, i64 103946077062], [3 x i64] [i64 -3452301496131738345, i64 -994702620117646784, i64 111559165543], [3 x i64] [i64 4410105917142436089, i64 -8131960389699676709, i64 245267398767], [3 x i64] [i64 4632574728444936970, i64 4932636630789274902, i64 202983581941], [3 x i64] [i64 9117147535650050359, i64 -302859727627427137, i64 134153046474], [3 x i64] [i64 588939301256904809, i64 2823209155405527321, i64 69877954182], [3 x i64] [i64 324393982565305683, i64 -2251347967089325366, i64 173062371141], [3 x i64] [i64 -9065834886786030441, i64 1150544491807648943, i64 73421074605], [3 x i64] [i64 4463385697777230217, i64 7767455475523884823, i64 94824230985], [3 x i64] [i64 -2067758571283217808, i64 -3242366028025559809, i64 211934567774], [3 x i64] [i64 -235849151321717262, i64 -1207011511990745995, i64 38698574803], [3 x i64] [i64 1555748035329493205, i64 -5560313449186751555, i64 83984577574], [3 x i64] [i64 4277055533891898507, i64 -284493532531293481, i64 184923140435], [3 x i64] [i64 -6872314301198677208, i64 -1417808707009393533, i64 219871452856], [3 x i64] [i64 -1055644820215742801, i64 -2371276249745352980, i64 215531468251], [3 x i64] [i64 5791212393959129882, i64 -8642885248135053313, i64 27946729175], [3 x i64] [i64 -7192475842253870736, i64 -982673265566509800, i64 124958581275], [3 x i64] [i64 -2091266486397316294, i64 -764040602470284841, i64 227983788156], [3 x i64] [i64 2411485149249320633, i64 -299055719548200281, i64 145361224931], [3 x i64] [i64 -5683629431638913256, i64 6663423873348080050, i64 183510511249], [3 x i64] [i64 1147543073987366419, i64 -9029473709993316484, i64 197503883703], [3 x i64] [i64 8410777835225272692, i64 -9151730352138207438, i64 63336074437], [3 x i64] [i64 8134725822306818018, i64 6199479138350037782, i64 14048117055], [3 x i64] [i64 8899607004752328377, i64 887603005365085687, i64 232018105614], [3 x i64] [i64 690976506652396830, i64 333989628642975695, i64 140250490600], [3 x i64] [i64 -6165173128114359542, i64 4620735991403939438, i64 54673209484], [3 x i64] [i64 -5853786782343998717, i64 -6028221009746750416, i64 219086071862], [3 x i64] [i64 -4850936734695581344, i64 1587745622680169418, i64 10715], [3 x i64] [i64 -8748647683959711624, i64 197658450495420, i64 0], [3 x i64] [i64 8310173728816391804, i64 197658, i64 0]]
@std.ryu.POW10_OFFSET_2 = internal unnamed_addr constant [69 x i16] [i16 0, i16 2, i16 6, i16 12, i16 20, i16 29, i16 40, i16 52, i16 66, i16 80, i16 95, i16 112, i16 130, i16 150, i16 170, i16 192, i16 215, i16 240, i16 265, i16 292, i16 320, i16 350, i16 381, i16 413, i16 446, i16 480, i16 516, i16 552, i16 590, i16 629, i16 670, i16 712, i16 755, i16 799, i16 845, i16 892, i16 940, i16 989, i16 1040, i16 1092, i16 1145, i16 1199, i16 1254, i16 1311, i16 1369, i16 1428, i16 1488, i16 1550, i16 1613, i16 1678, i16 1743, i16 1810, i16 1878, i16 1947, i16 2017, i16 2088, i16 2161, i16 2235, i16 2311, i16 2387, i16 2465, i16 2544, i16 2625, i16 2706, i16 2789, i16 2873, i16 2959, i16 3046, i16 3133]
@std.ryu.MIN_BLOCK_2 = internal unnamed_addr constant [69 x i8] c"\00\00\00\00\00\00\01\01\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F\10\10\11\11\12\13\13\14\14\15\15\16\16\17\17\18\18\19\1A\1A\1B\1B\1C\1C\1D\1D\1E\1E\1F\1F  !\22\00"
@std.ryu.POW10_SPLIT_2 = internal unnamed_addr constant [3133 x [3 x i64]] [[3 x i64] [i64 0, i64 0, i64 3906250], [3 x i64] [i64 0, i64 0, i64 202000000000], [3 x i64] [i64 0, i64 -7293016646573096960, i64 59], [3 x i64] [i64 0, i64 7205759403792793600, i64 59604644775], [3 x i64] [i64 0, i64 0, i64 167390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 0, i64 16777216000000000, i64 0], [3 x i64] [i64 0, i64 -5501318468646993920, i64 909494], [3 x i64] [i64 0, i64 4388757836872548352, i64 182701772928], [3 x i64] [i64 0, i64 1152921504606846976, i64 128237915039], [3 x i64] [i64 0, i64 0, i64 159062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 0, i64 256000000000, i64 0], [3 x i64] [i64 0, i64 -2254417031933722624, i64 13], [3 x i64] [i64 0, i64 -3422668749671497728, i64 13877787807], [3 x i64] [i64 0, i64 5449091666327633920, i64 159814456755], [3 x i64] [i64 0, i64 2494994193563254784, i64 179295395851], [3 x i64] [i64 0, i64 4611686018427387904, i64 11135253906], [3 x i64] [i64 0, i64 0, i64 146250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 0, i64 3906250, i64 0], [3 x i64] [i64 0, i64 3906250000000000, i64 0], [3 x i64] [i64 0, i64 4368439412768899072, i64 211758], [3 x i64] [i64 0, i64 1563676642168012800, i64 46236813575], [3 x i64] [i64 0, i64 -6914394732307152896, i64 7084767080], [3 x i64] [i64 0, i64 9048364970084925440, i64 104625169910], [3 x i64] [i64 0, i64 -1837468647967162368, i64 246490512847], [3 x i64] [i64 0, i64 0, i64 207900390625], [3 x i64] [i64 0, i64 0, i64 225000000000], [3 x i64] [i64 -7293016646573096960, i64 59, i64 0], [3 x i64] [i64 7205759403792793600, i64 59604644775, i64 0], [3 x i64] [i64 0, i64 4264412554261970152, i64 3], [3 x i64] [i64 0, i64 -3961173487437017088, i64 3231174267], [3 x i64] [i64 0, i64 -619068979077447680, i64 123785264354], [3 x i64] [i64 0, i64 7347197909193981952, i64 226966440203], [3 x i64] [i64 0, i64 -4769340042931863552, i64 11398292396], [3 x i64] [i64 0, i64 3810326759732150272, i64 172741453558], [3 x i64] [i64 0, i64 -8502796096475496448, i64 246206558227], [3 x i64] [i64 0, i64 0, i64 19539062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 -5501318468646993920, i64 909494, i64 0], [3 x i64] [i64 4388757836872548352, i64 909494701772928, i64 0], [3 x i64] [i64 1152921504606846976, i64 -3568037247494960225, i64 49303], [3 x i64] [i64 0, i64 4387341015746028192, i64 151806576313], [3 x i64] [i64 0, i64 651726680428265472, i64 185237838233], [3 x i64] [i64 0, i64 2570638187944738816, i64 153035330174], [3 x i64] [i64 0, i64 7419175577111756800, i64 126139354575], [3 x i64] [i64 0, i64 -1147421747444711424, i64 207402194313], [3 x i64] [i64 0, i64 7990511638862102528, i64 137937798142], [3 x i64] [i64 0, i64 -1729382256910270464, i64 254433166503], [3 x i64] [i64 0, i64 0, i64 167906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 -2254417031933722624, i64 13, i64 0], [3 x i64] [i64 -3422668749671497728, i64 13877787807, i64 0], [3 x i64] [i64 5449091666327633920, i64 -4568956265895094861, i64 0], [3 x i64] [i64 2494994193563254784, i64 -8738886656424632309, i64 752316384], [3 x i64] [i64 4611686018427387904, i64 1844515466944871826, i64 224526264005], [3 x i64] [i64 0, i64 -3279144253853276544, i64 197099991383], [3 x i64] [i64 0, i64 -3616558768120070144, i64 87822237233], [3 x i64] [i64 0, i64 6163721531743535104, i64 49803945956], [3 x i64] [i64 0, i64 -4323896666697498624, i64 228334136013], [3 x i64] [i64 0, i64 335491783960035328, i64 205765601092], [3 x i64] [i64 0, i64 941252322120433664, i64 68018187046], [3 x i64] [i64 0, i64 -6917529027641081856, i64 38051025390], [3 x i64] [i64 0, i64 0, i64 238625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 4368439412768899072, i64 211758, i64 0], [3 x i64] [i64 1563676642168012800, i64 211758236813575, i64 0], [3 x i64] [i64 -6914394732307152896, i64 8061591463141767016, i64 11479], [3 x i64] [i64 9048364970084925440, i64 -1818018729501694474, i64 215437019748], [3 x i64] [i64 -1837468647967162368, i64 3555541870038531535, i64 100901445007], [3 x i64] [i64 0, i64 -130096623547697951, i64 143192746310], [3 x i64] [i64 0, i64 -1737169505331475968, i64 70992947447], [3 x i64] [i64 0, i64 7696022835795591168, i64 247905827852], [3 x i64] [i64 0, i64 -1782294433333510144, i64 12417202233], [3 x i64] [i64 0, i64 3109186955116544000, i64 57903381625], [3 x i64] [i64 0, i64 -7931225971892420608, i64 121168549362], [3 x i64] [i64 0, i64 -8484781697966014464, i64 242570047378], [3 x i64] [i64 0, i64 -9223372036854775808, i64 146540039062], [3 x i64] [i64 0, i64 0, i64 150500000000], [3 x i64] [i64 -3961173487437017088, i64 3231174267, i64 0], [3 x i64] [i64 -619068979077447680, i64 3231174267785264354, i64 0], [3 x i64] [i64 7347197909193981952, i64 748977172262750475, i64 175162308], [3 x i64] [i64 -4769340042931863552, i64 -2481710616394456148, i64 196040602133], [3 x i64] [i64 3810326759732150272, i64 -1637341924642822410, i64 21865466197], [3 x i64] [i64 -8502796096475496448, i64 7563769067065700371, i64 85911239516], [3 x i64] [i64 0, i64 -4896421262869500188, i64 92410032742], [3 x i64] [i64 0, i64 8663209637545764864, i64 102734564471], [3 x i64] [i64 0, i64 8969247575312957440, i64 119469633535], [3 x i64] [i64 0, i64 6193172891660451840, i64 255486223885], [3 x i64] [i64 0, i64 3427954273864908800, i64 13335732575], [3 x i64] [i64 0, i64 -8388376518442614784, i64 95185829773], [3 x i64] [i64 0, i64 -4539628424389459968, i64 141545265197], [3 x i64] [i64 0, i64 0, i64 45753906250], [3 x i64] [i64 0, i64 0, i64 74000000000], [3 x i64] [i64 -3568037247494960225, i64 49303, i64 0], [3 x i64] [i64 4387341015746028192, i64 49303806576313, i64 0], [3 x i64] [i64 651726680428265472, i64 -4340332712393631335, i64 2672], [3 x i64] [i64 2570638187944738816, i64 3609034283485221502, i64 112764710092], [3 x i64] [i64 7419175577111756800, i64 -8550671826371359281, i64 204195646140], [3 x i64] [i64 -1147421747444711424, i64 8889095178479228297, i64 188536467151], [3 x i64] [i64 7990511638862102528, i64 3631796911038383102, i64 207481878815], [3 x i64] [i64 -1729382256910270464, i64 898318840772166823, i64 31196880105], [3 x i64] [i64 0, i64 -1153066119726756592, i64 233048697961], [3 x i64] [i64 0, i64 7353628266884669440, i64 105937492160], [3 x i64] [i64 0, i64 2404693032470315008, i64 192398640987], [3 x i64] [i64 0, i64 9191155893041889280, i64 91130358670], [3 x i64] [i64 0, i64 6353946855033798656, i64 142498253559], [3 x i64] [i64 0, i64 3767824038248841216, i64 247344448149], [3 x i64] [i64 0, i64 7205759403792793600, i64 149204254150], [3 x i64] [i64 0, i64 0, i64 198390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 -8738886656424632309, i64 752316384, i64 0], [3 x i64] [i64 1844515466944871826, i64 752316384526264005, i64 0], [3 x i64] [i64 -3279144253853276544, i64 -1383675916016733865, i64 40783152], [3 x i64] [i64 -3616558768120070144, i64 5385330256507239985, i64 48924990778], [3 x i64] [i64 6163721531743535104, i64 3373050282752075748, i64 58291939338], [3 x i64] [i64 -4323896666697498624, i64 4116064001262906061, i64 10182853422], [3 x i64] [i64 335491783960035328, i64 -7140162026961508540, i64 46223132276], [3 x i64] [i64 941252322120433664, i64 -1411333127619925210, i64 116612931040], [3 x i64] [i64 -6917529027641081856, i64 -2828148358526103058, i64 224923491477], [3 x i64] [i64 0, i64 5141740092277295680, i64 149846685770], [3 x i64] [i64 0, i64 -1473099782194561024, i64 74278734288], [3 x i64] [i64 0, i64 -3821488805265801216, i64 208920143100], [3 x i64] [i64 0, i64 -4425573566389420032, i64 252792836676], [3 x i64] [i64 0, i64 4451355232865091584, i64 68760089176], [3 x i64] [i64 0, i64 -5555190140361506816, i64 88241308450], [3 x i64] [i64 0, i64 1152921504606846976, i64 34698852539], [3 x i64] [i64 0, i64 0, i64 187062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 8061591463141767016, i64 11479, i64 0], [3 x i64] [i64 -1818018729501694474, i64 11479437019748, i64 0], [3 x i64] [i64 3555541870038531535, i64 5562205901560339855, i64 622], [3 x i64] [i64 -130096623547697951, i64 2106077949367544134, i64 110301527786], [3 x i64] [i64 -1737169505331475968, i64 7496855998374373623, i64 234114170714], [3 x i64] [i64 7696022835795591168, i64 229183437194837004, i64 90406405378], [3 x i64] [i64 -1782294433333510144, i64 465169186276472889, i64 2012424059], [3 x i64] [i64 3109186955116544000, i64 2152980561625316473, i64 123025216872], [3 x i64] [i64 -7931225971892420608, i64 2059790725449340402, i64 104116713310], [3 x i64] [i64 -8484781697966014464, i64 -555553147299352686, i64 94111661478], [3 x i64] [i64 -9223372036854775808, i64 -8516047898099741802, i64 166969883403], [3 x i64] [i64 0, i64 7276914261609005312, i64 11538344118], [3 x i64] [i64 0, i64 -7906981099672567808, i64 182394482312], [3 x i64] [i64 0, i64 -5595654614717300736, i64 136571361695], [3 x i64] [i64 0, i64 -8997432396030672896, i64 159696658955], [3 x i64] [i64 0, i64 8699564697382289408, i64 11512248212], [3 x i64] [i64 0, i64 4224376450473525248, i64 148471604347], [3 x i64] [i64 0, i64 4611686018427387904, i64 123229003906], [3 x i64] [i64 0, i64 0, i64 130250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 748977172262750475, i64 175162308, i64 0], [3 x i64] [i64 -2481710616394456148, i64 175162308040602133, i64 0], [3 x i64] [i64 -1637341924642822410, i64 -4689903925753771691, i64 9495567], [3 x i64] [i64 7563769067065700371, i64 -4658296471617045668, i64 15745759798], [3 x i64] [i64 -4896421262869500188, i64 4972540435632173670, i64 54747473242], [3 x i64] [i64 8663209637545764864, i64 2844874687533091959, i64 90269561957], [3 x i64] [i64 8969247575312957440, i64 -3069170294176747521, i64 101154220965], [3 x i64] [i64 6193172891660451840, i64 -622028268618357235, i64 165833619944], [3 x i64] [i64 3427954273864908800, i64 -169174938071391905, i64 232966279779], [3 x i64] [i64 -8388376518442614784, i64 4254645803379752845, i64 99990829008], [3 x i64] [i64 -4539628424389459968, i64 2933643244178200621, i64 208230644811], [3 x i64] [i64 0, i64 -1258595271830064054, i64 75159033118], [3 x i64] [i64 0, i64 -7376981572546305024, i64 30931771413], [3 x i64] [i64 0, i64 -6770173429767733248, i64 21600093027], [3 x i64] [i64 0, i64 -606727304965521408, i64 99632988162], [3 x i64] [i64 0, i64 -1982926752057393152, i64 2967109246], [3 x i64] [i64 0, i64 6954191143357644800, i64 126892505325], [3 x i64] [i64 0, i64 5080060379673919488, i64 237376987457], [3 x i64] [i64 0, i64 0, i64 65275390625], [3 x i64] [i64 0, i64 0, i64 161000000000], [3 x i64] [i64 -4340332712393631335, i64 2672, i64 0], [3 x i64] [i64 3609034283485221502, i64 2672764710092, i64 0], [3 x i64] [i64 -8550671826371359281, i64 -2013180595689338180, i64 144], [3 x i64] [i64 8889095178479228297, i64 4194750497955655375, i64 144890865261], [3 x i64] [i64 3631796911038383102, i64 2691539602252904735, i64 109227397880], [3 x i64] [i64 898318840772166823, i64 3775467271962795241, i64 248145908654], [3 x i64] [i64 -1153066119726756592, i64 -1466531460484633495, i64 174204668490], [3 x i64] [i64 7353628266884669440, i64 4172857038337333440, i64 74920499170], [3 x i64] [i64 2404693032470315008, i64 5936867627376461659, i64 226226211033], [3 x i64] [i64 9191155893041889280, i64 -589906630442685554, i64 217321838238], [3 x i64] [i64 6353946855033798656, i64 8956297047799810807, i64 158968021097], [3 x i64] [i64 3767824038248841216, i64 -3089770023992638827, i64 105485521835], [3 x i64] [i64 7205759403792793600, i64 6923608913322982854, i64 171832503231], [3 x i64] [i64 0, i64 4855902993563955944, i64 191375329591], [3 x i64] [i64 0, i64 -4610850851421220864, i64 55263239028], [3 x i64] [i64 0, i64 9114973913760137216, i64 116750045274], [3 x i64] [i64 0, i64 -509645070287241216, i64 90494123725], [3 x i64] [i64 0, i64 7007960010734960640, i64 205972372085], [3 x i64] [i64 0, i64 7683422439270776832, i64 117379902273], [3 x i64] [i64 0, i64 720575940379279360, i64 65416519165], [3 x i64] [i64 0, i64 0, i64 253039062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 -1383675916016733865, i64 40783152, i64 0], [3 x i64] [i64 5385330256507239985, i64 40783152924990778, i64 0], [3 x i64] [i64 3373050282752075748, i64 2768933352715741194, i64 2210859], [3 x i64] [i64 4116064001262906061, i64 -3244802461885398226, i64 43150104177], [3 x i64] [i64 -7140162026961508540, i64 1418128541727000180, i64 113824098906], [3 x i64] [i64 -1411333127619925210, i64 5353350204565757408, i64 90076876902], [3 x i64] [i64 -2828148358526103058, i64 1721001680354286741, i64 102290205696], [3 x i64] [i64 5141740092277295680, i64 637631411660453962, i64 93295688], [3 x i64] [i64 -1473099782194561024, i64 1630012588870568400, i64 72034566068], [3 x i64] [i64 -3821488805265801216, i64 -9193680502052723460, i64 180088363159], [3 x i64] [i64 -4425573566389420032, i64 6029146854993203780, i64 151501609581], [3 x i64] [i64 4451355232865091584, i64 -1459342108356791720, i64 109326840705], [3 x i64] [i64 -5555190140361506816, i64 -3947612453167463646, i64 129920888905], [3 x i64] [i64 1152921504606846976, i64 1978417255298660539, i64 73785999500], [3 x i64] [i64 0, i64 5790079354402454176, i64 140107250214], [3 x i64] [i64 0, i64 -4697825137867472896, i64 38313880830], [3 x i64] [i64 0, i64 -399306058968858624, i64 254745330388], [3 x i64] [i64 0, i64 3116889656839372800, i64 212978353575], [3 x i64] [i64 0, i64 -2450791627103404032, i64 167168966926], [3 x i64] [i64 0, i64 -5916604010457989120, i64 14867142319], [3 x i64] [i64 0, i64 -1729382256910270464, i64 175679260253], [3 x i64] [i64 0, i64 0, i64 93906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 5562205901560339855, i64 622, i64 0], [3 x i64] [i64 2106077949367544134, i64 622301527786, i64 0], [3 x i64] [i64 7496855998374373623, i64 -4887770720010584230, i64 33], [3 x i64] [i64 229183437194837004, i64 6228991722850501890, i64 33735033418], [3 x i64] [i64 465169186276472889, i64 -1559912682006173829, i64 74337674317], [3 x i64] [i64 2152980561625316473, i64 1181713637872883048, i64 77915436964], [3 x i64] [i64 2059790725449340402, i64 -6052811638784329890, i64 164064060824], [3 x i64] [i64 -555553147299352686, i64 -7761944228289839706, i64 152671876423], [3 x i64] [i64 -8516047898099741802, i64 4590318792215640843, i64 71579224160], [3 x i64] [i64 7276914261609005312, i64 6383712187366189238, i64 96248841680], [3 x i64] [i64 -7906981099672567808, i64 1904270214927675016, i64 208346061731], [3 x i64] [i64 -5595654614717300736, i64 3711506775113308575, i64 163103230695], [3 x i64] [i64 -8997432396030672896, i64 8091219444738793995, i64 231201201185], [3 x i64] [i64 8699564697382289408, i64 39436684991068052, i64 33438625885], [3 x i64] [i64 4224376450473525248, i64 -421561165513038725, i64 93002137866], [3 x i64] [i64 4611686018427387904, i64 7853924592034603138, i64 10977147123], [3 x i64] [i64 0, i64 4815749283615688320, i64 243425762105], [3 x i64] [i64 0, i64 -4204344167165263872, i64 57261062291], [3 x i64] [i64 0, i64 76242322576113664, i64 147772082046], [3 x i64] [i64 0, i64 -7588655652331847680, i64 126004133104], [3 x i64] [i64 0, i64 -4152908194668085248, i64 240588618152], [3 x i64] [i64 0, i64 -6264507081672359936, i64 168774870395], [3 x i64] [i64 0, i64 -6917529027641081856, i64 123660400390], [3 x i64] [i64 0, i64 0, i64 6625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 -4689903925753771691, i64 9495567, i64 0], [3 x i64] [i64 -4658296471617045668, i64 9495567745759798, i64 0], [3 x i64] [i64 4972540435632173670, i64 -4446646635204172454, i64 514755], [3 x i64] [i64 2844874687533091959, i64 -1995681387257121691, i64 195758946802], [3 x i64] [i64 -3069170294176747521, i64 4009347599785716645, i64 242891813895], [3 x i64] [i64 -622028268618357235, i64 -1902581726163355160, i64 7217347168], [3 x i64] [i64 -169174938071391905, i64 -772485773963734429, i64 96896860837], [3 x i64] [i64 4254645803379752845, i64 5215238411201214416, i64 165958123462], [3 x i64] [i64 2933643244178200621, i64 -4192753845364229045, i64 198282718640], [3 x i64] [i64 -1258595271830064054, i64 -7231907519769357026, i64 176772710358], [3 x i64] [i64 -7376981572546305024, i64 -3826032725328961515, i64 214607957507], [3 x i64] [i64 -6770173429767733248, i64 6638710787931587427, i64 3792590350], [3 x i64] [i64 -606727304965521408, i64 -1126743730016698366, i64 14359885232], [3 x i64] [i64 -1982926752057393152, i64 75147386268843646, i64 176938919100], [3 x i64] [i64 6954191143357644800, i64 -507942491584071443, i64 188004073747], [3 x i64] [i64 5080060379673919488, i64 6573358613626446145, i64 19972464382], [3 x i64] [i64 0, i64 8688505427903736481, i64 254356342484], [3 x i64] [i64 0, i64 539870168696556032, i64 212471004823], [3 x i64] [i64 0, i64 9002861336394465280, i64 151029266420], [3 x i64] [i64 0, i64 -456897255551533056, i64 244488046090], [3 x i64] [i64 0, i64 2700938287723315200, i64 10975231550], [3 x i64] [i64 0, i64 -646653574620643328, i64 62146418157], [3 x i64] [i64 0, i64 8809040871136690176, i64 237964944839], [3 x i64] [i64 0, i64 -9223372036854775808, i64 199477539062], [3 x i64] [i64 0, i64 0, i64 246500000000], [3 x i64] [i64 -2013180595689338180, i64 144, i64 0], [3 x i64] [i64 4194750497955655375, i64 144890865261, i64 0], [3 x i64] [i64 2691539602252904735, i64 -2683087328449015048, i64 7], [3 x i64] [i64 3775467271962795241, i64 8787336846248645550, i64 7854549544], [3 x i64] [i64 -1466531460484633495, i64 -862659625828857270, i64 40476362484], [3 x i64] [i64 4172857038337333440, i64 -405071522579867678, i64 244953235127], [3 x i64] [i64 5936867627376461659, i64 -4420857771415041831, i64 183978041028], [3 x i64] [i64 -589906630442685554, i64 -16245970426390882, i64 196760344819], [3 x i64] [i64 8956297047799810807, i64 3292348826238025833, i64 243999119304], [3 x i64] [i64 -3089770023992638827, i64 9211721212658275243, i64 200178478587], [3 x i64] [i64 6923608913322982854, i64 -8213498201043244097, i64 251499368407], [3 x i64] [i64 4855902993563955944, i64 6200995035623311671, i64 215554745370], [3 x i64] [i64 -4610850851421220864, i64 8480542380570450804, i64 26336156614], [3 x i64] [i64 9114973913760137216, i64 -6576380209209651110, i64 198459731123], [3 x i64] [i64 -509645070287241216, i64 -9145692693869969715, i64 179643493714], [3 x i64] [i64 7007960010734960640, i64 -6990049270139913611, i64 82504211005], [3 x i64] [i64 7683422439270776832, i64 -4119535183065568447, i64 61621068669], [3 x i64] [i64 720575940379279360, i64 4510081789599866365, i64 125776679550], [3 x i64] [i64 0, i64 -5191387097689248284, i64 126244492023], [3 x i64] [i64 0, i64 -8787937219582236672, i64 247718574341], [3 x i64] [i64 0, i64 -4738308544899579904, i64 5523604968], [3 x i64] [i64 0, i64 1580190652103131136, i64 232743135779], [3 x i64] [i64 0, i64 -1889407103362138112, i64 35085662306], [3 x i64] [i64 0, i64 -5695223941275058176, i64 98897575035], [3 x i64] [i64 0, i64 -9151314442816847872, i64 123691261291], [3 x i64] [i64 0, i64 0, i64 107503906250], [3 x i64] [i64 0, i64 0, i64 202000000000], [3 x i64] [i64 2768933352715741194, i64 2210859, i64 0], [3 x i64] [i64 -3244802461885398226, i64 2210859150104177, i64 0], [3 x i64] [i64 1418128541727000180, i64 -1573873985646630310, i64 119850], [3 x i64] [i64 5353350204565757408, i64 5112979788807802982, i64 42914680120], [3 x i64] [i64 1721001680354286741, i64 -4704015991689401344, i64 56277175189], [3 x i64] [i64 637631411660453962, i64 2217110934613627976, i64 149744994782], [3 x i64] [i64 1630012588870568400, i64 -7425310133520941132, i64 222120189824], [3 x i64] [i64 -9193680502052723460, i64 1713669895470733463, i64 128597473131], [3 x i64] [i64 6029146854993203780, i64 3313382510572018285, i64 107092898231], [3 x i64] [i64 -1459342108356791720, i64 -3470148840925482111, i64 183179618825], [3 x i64] [i64 -3947612453167463646, i64 7213172372862496841, i64 9811882854], [3 x i64] [i64 1978417255298660539, i64 -2610269531207303028, i64 102391026857], [3 x i64] [i64 5790079354402454176, i64 3221099285878340134, i64 169858497005], [3 x i64] [i64 -4697825137867472896, i64 3265814602578095358, i64 237174616142], [3 x i64] [i64 -399306058968858624, i64 6502528252282225364, i64 78177040164], [3 x i64] [i64 3116889656839372800, i64 -2054267239152761433, i64 36352502762], [3 x i64] [i64 -2450791627103404032, i64 -3279114660292460274, i64 234888637949], [3 x i64] [i64 -5916604010457989120, i64 1366763272626280111, i64 253822238838], [3 x i64] [i64 -1729382256910270464, i64 8720523635169216093, i64 118074092385], [3 x i64] [i64 0, i64 -8797572697942152944, i64 97472740533], [3 x i64] [i64 0, i64 7647980704001073152, i64 181523082628], [3 x i64] [i64 0, i64 -5160309578100899840, i64 132414597864], [3 x i64] [i64 0, i64 4358271637167013888, i64 232720259057], [3 x i64] [i64 0, i64 -2491756131819454464, i64 241236262378], [3 x i64] [i64 0, i64 7911135695429697536, i64 234864921629], [3 x i64] [i64 0, i64 7205759403792793600, i64 29428863525], [3 x i64] [i64 0, i64 0, i64 37390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 -4887770720010584230, i64 33, i64 0], [3 x i64] [i64 6228991722850501890, i64 33735033418, i64 0], [3 x i64] [i64 -1559912682006173829, i64 -3158454729081428915, i64 1], [3 x i64] [i64 1181713637872883048, i64 952589339068938148, i64 1828779826], [3 x i64] [i64 -6052811638784329890, i64 -8388589033518733928, i64 50051639971], [3 x i64] [i64 -7761944228289839706, i64 5322725640026584391, i64 163545253677], [3 x i64] [i64 4590318792215640843, i64 2269982385930389600, i64 45288545535], [3 x i64] [i64 6383712187366189238, i64 -5230060393733241392, i64 255123055991], [3 x i64] [i64 1904270214927675016, i64 -1029303431626056797, i64 119716477857], [3 x i64] [i64 3711506775113308575, i64 3029180749090900711, i64 161944201349], [3 x i64] [i64 8091219444738793995, i64 8315443826261908513, i64 133164212217], [3 x i64] [i64 39436684991068052, i64 1488962797247197277, i64 249450781113], [3 x i64] [i64 -421561165513038725, i64 -437644438710517494, i64 185080716834], [3 x i64] [i64 7853924592034603138, i64 8092455412807497971, i64 34976275247], [3 x i64] [i64 4815749283615688320, i64 -638286026472793287, i64 47438692886], [3 x i64] [i64 -4204344167165263872, i64 3164591817527425171, i64 22965398445], [3 x i64] [i64 76242322576113664, i64 3314036340472350590, i64 173171552866], [3 x i64] [i64 -7588655652331847680, i64 33234902404332784, i64 98179654270], [3 x i64] [i64 -4152908194668085248, i64 -6097459355852277336, i64 126001801667], [3 x i64] [i64 -6264507081672359936, i64 -237136170696432261, i64 195669456065], [3 x i64] [i64 -6917529027641081856, i64 7891549145984268038, i64 193987144822], [3 x i64] [i64 0, i64 7703609897518594624, i64 118427801736], [3 x i64] [i64 0, i64 6336912652634587136, i64 136417613529], [3 x i64] [i64 0, i64 4461621834659397632, i64 217343524723], [3 x i64] [i64 0, i64 5484660635557953536, i64 115241865004], [3 x i64] [i64 0, i64 -3304124800443613184, i64 44297324048], [3 x i64] [i64 0, i64 -6275766080740786176, i64 16820883035], [3 x i64] [i64 0, i64 1152921504606846976, i64 91659790039], [3 x i64] [i64 0, i64 0, i64 215062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 -4446646635204172454, i64 514755, i64 0], [3 x i64] [i64 -1995681387257121691, i64 514755758946802, i64 0], [3 x i64] [i64 4009347599785716645, i64 -634430062146030585, i64 27904], [3 x i64] [i64 -1902581726163355160, i64 7684138864490314336, i64 965607477], [3 x i64] [i64 -772485773963734429, i64 -8706221286289522011, i64 53416558002], [3 x i64] [i64 5215238411201214416, i64 6701109407732989894, i64 178528034798], [3 x i64] [i64 -4192753845364229045, i64 -1911857846207107664, i64 238363267868], [3 x i64] [i64 -7231907519769357026, i64 8908667306968317910, i64 28896357978], [3 x i64] [i64 -3826032725328961515, i64 7531472173477105155, i64 90482939822], [3 x i64] [i64 6638710787931587427, i64 -6919372468874750450, i64 174408281924], [3 x i64] [i64 -1126743730016698366, i64 -2758150577018473040, i64 68624900066], [3 x i64] [i64 75147386268843646, i64 -7051799269456239428, i64 226850480357], [3 x i64] [i64 -507942491584071443, i64 -7264464192855178989, i64 229617721195], [3 x i64] [i64 6573358613626446145, i64 150579373068361470, i64 107606192607], [3 x i64] [i64 8688505427903736481, i64 3147220002440857300, i64 223008162924], [3 x i64] [i64 539870168696556032, i64 3630514817795505815, i64 108170611138], [3 x i64] [i64 9002861336394465280, i64 -6737947485375318028, i64 194196810602], [3 x i64] [i64 -456897255551533056, i64 -1602248607283182070, i64 106634735134], [3 x i64] [i64 2700938287723315200, i64 -810088601384075714, i64 30913141928], [3 x i64] [i64 -646653574620643328, i64 -1407817418022906387, i64 168956085008], [3 x i64] [i64 8809040871136690176, i64 -2843905616926022201, i64 16923682064], [3 x i64] [i64 -9223372036854775808, i64 -7576928204460674826, i64 16845831567], [3 x i64] [i64 0, i64 -39619892769750784, i64 143589253898], [3 x i64] [i64 0, i64 5705018517251293184, i64 10997852201], [3 x i64] [i64 0, i64 -8786291814966493184, i64 41309269673], [3 x i64] [i64 0, i64 5646292272224927744, i64 169523694166], [3 x i64] [i64 0, i64 7410409304047484928, i64 86306086117], [3 x i64] [i64 0, i64 5953758707383795712, i64 229401719093], [3 x i64] [i64 0, i64 4611686018427387904, i64 53322753906], [3 x i64] [i64 0, i64 0, i64 114250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 -2683087328449015048, i64 7, i64 0], [3 x i64] [i64 8787336846248645550, i64 7854549544, i64 0], [3 x i64] [i64 -862659625828857270, i64 7854549544476362484, i64 0], [3 x i64] [i64 -405071522579867678, i64 15035424419724983, i64 425795984], [3 x i64] [i64 -4420857771415041831, i64 -165921607676715324, i64 144000815071], [3 x i64] [i64 -16245970426390882, i64 -6922493326406936333, i64 223991005371], [3 x i64] [i64 3292348826238025833, i64 -3234458130017740856, i64 187624730884], [3 x i64] [i64 9211721212658275243, i64 7951804027551297019, i64 4824659673], [3 x i64] [i64 -8213498201043244097, i64 1706416229965221847, i64 217431068160], [3 x i64] [i64 6200995035623311671, i64 3406023111930700826, i64 92505009], [3 x i64] [i64 8480542380570450804, i64 -2314047869576160314, i64 177184640882], [3 x i64] [i64 -6576380209209651110, i64 -6852897384915194701, i64 114874555213], [3 x i64] [i64 -9145692693869969715, i64 6875759884161133906, i64 77628503688], [3 x i64] [i64 -6990049270139913611, i64 3593593325323835965, i64 136372735690], [3 x i64] [i64 -4119535183065568447, i64 -8904694340452162691, i64 202194809084], [3 x i64] [i64 4510081789599866365, i64 -8520192147771764098, i64 252517275552], [3 x i64] [i64 -5191387097689248284, i64 3128491553219547895, i64 160538119458], [3 x i64] [i64 -8787937219582236672, i64 -1288335416778196731, i64 34169595866], [3 x i64] [i64 -4738308544899579904, i64 2065169543154992616, i64 218930159197], [3 x i64] [i64 1580190652103131136, i64 4832622393556232739, i64 93111953065], [3 x i64] [i64 -1889407103362138112, i64 -1940813358975895454, i64 169261976984], [3 x i64] [i64 -5695223941275058176, i64 -175756000216662917, i64 152894788296], [3 x i64] [i64 -9151314442816847872, i64 2525111411519708523, i64 200990472248], [3 x i64] [i64 0, i64 -1717754731190981174, i64 56136886563], [3 x i64] [i64 0, i64 7974052022039438336, i64 35906880329], [3 x i64] [i64 0, i64 5356554962386550784, i64 73432274226], [3 x i64] [i64 0, i64 6693869495028547584, i64 50290379426], [3 x i64] [i64 0, i64 8157517147199766528, i64 162362875392], [3 x i64] [i64 0, i64 -6380967353286393856, i64 442219890], [3 x i64] [i64 0, i64 -6449154666394550272, i64 114654087066], [3 x i64] [i64 0, i64 0, i64 154650390625], [3 x i64] [i64 0, i64 0, i64 97000000000], [3 x i64] [i64 -1573873985646630310, i64 119850, i64 0], [3 x i64] [i64 5112979788807802982, i64 119850914680120, i64 0], [3 x i64] [i64 -4704015991689401344, i64 2418433229320326037, i64 6497], [3 x i64] [i64 2217110934613627976, i64 1143911773589293534, i64 97131103528], [3 x i64] [i64 -7425310133520941132, i64 -9170560370098626688, i64 40062011581], [3 x i64] [i64 1713669895470733463, i64 3532180128827684715, i64 189502862926], [3 x i64] [i64 3313382510572018285, i64 8563997501322031543, i64 78191479868], [3 x i64] [i64 -3470148840925482111, i64 -3602853664051090935, i64 60464255234], [3 x i64] [i64 7213172372862496841, i64 -8957326212074998938, i64 2804688911], [3 x i64] [i64 -2610269531207303028, i64 1113198223322322089, i64 15514422373], [3 x i64] [i64 3221099285878340134, i64 -7255966516562953747, i64 101060346596], [3 x i64] [i64 3265814602578095358, i64 -682190427776913330, i64 228606653266], [3 x i64] [i64 6502528252282225364, i64 -3545966922718316764, i64 82963018382], [3 x i64] [i64 -2054267239152761433, i64 -1081844210351658006, i64 142807772747], [3 x i64] [i64 -3279114660292460274, i64 -2909173892119384579, i64 75941353107], [3 x i64] [i64 1366763272626280111, i64 5558052627121307766, i64 147842293367], [3 x i64] [i64 8720523635169216093, i64 -6351502507914319007, i64 119301302636], [3 x i64] [i64 -8797572697942152944, i64 2187936505958366389, i64 108655684359], [3 x i64] [i64 7647980704001073152, i64 -6437540452383691388, i64 7118608275], [3 x i64] [i64 -5160309578100899840, i64 -3631901238959248664, i64 147651020232], [3 x i64] [i64 4358271637167013888, i64 5965296499605198833, i64 200803114239], [3 x i64] [i64 -2491756131819454464, i64 4051026394962148842, i64 255323379371], [3 x i64] [i64 7911135695429697536, i64 -1647217774567863267, i64 171219606580], [3 x i64] [i64 7205759403792793600, i64 -8986529907063336411, i64 52910704145], [3 x i64] [i64 0, i64 -7696007078680483608, i64 17512839237], [3 x i64] [i64 0, i64 5377963045376430080, i64 69582798620], [3 x i64] [i64 0, i64 -2449833723456126976, i64 28291539960], [3 x i64] [i64 0, i64 -4795586544054304768, i64 248867194247], [3 x i64] [i64 0, i64 -8675438663489814528, i64 135740030732], [3 x i64] [i64 0, i64 -5737304450293301248, i64 12529703527], [3 x i64] [i64 0, i64 -8502796096475496448, i64 103688980102], [3 x i64] [i64 0, i64 0, i64 134539062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 952589339068938148, i64 1828779826, i64 0], [3 x i64] [i64 -8388589033518733928, i64 1828779826051639971, i64 0], [3 x i64] [i64 5322725640026584391, i64 371564423966525229, i64 99138353], [3 x i64] [i64 2269982385930389600, i64 -3981884952195212033, i64 49020142547], [3 x i64] [i64 -5230060393733241392, i64 3913119023023056247, i64 211784141584], [3 x i64] [i64 -1029303431626056797, i64 5493396321716566945, i64 16212130607], [3 x i64] [i64 3029180749090900711, i64 5837454566818211973, i64 47297797611], [3 x i64] [i64 8315443826261908513, i64 2886670683193253881, i64 235316449046], [3 x i64] [i64 1488962797247197277, i64 5504823105587173817, i64 22156486731], [3 x i64] [i64 -437644438710517494, i64 -9014909796374700510, i64 75298417058], [3 x i64] [i64 8092455412807497971, i64 -5525082727253304529, i64 162511300760], [3 x i64] [i64 -638286026472793287, i64 3643076516404724246, i64 152700484665], [3 x i64] [i64 3164591817527425171, i64 -5887347120512685139, i64 57197491573], [3 x i64] [i64 3314036340472350590, i64 1626880974916825698, i64 117680846273], [3 x i64] [i64 33234902404332784, i64 6806994170946429566, i64 193088193394], [3 x i64] [i64 -6097459355852277336, i64 7596631230206896579, i64 114369007893], [3 x i64] [i64 -237136170696432261, i64 3100480253729502401, i64 21411814204], [3 x i64] [i64 7891549145984268038, i64 6310570748781063286, i64 60168077371], [3 x i64] [i64 7703609897518594624, i64 -4194876996333807480, i64 59342096725], [3 x i64] [i64 6336912652634587136, i64 6701165793751570137, i64 85772595262], [3 x i64] [i64 4461621834659397632, i64 -7589910933245591693, i64 62363270925], [3 x i64] [i64 5484660635557953536, i64 -2579180346148303060, i64 13588550103], [3 x i64] [i64 -3304124800443613184, i64 5048961008671491600, i64 215860182353], [3 x i64] [i64 -6275766080740786176, i64 -5168560954109702565, i64 81273704724], [3 x i64] [i64 1152921504606846976, i64 4547591784941053655, i64 20719811749], [3 x i64] [i64 0, i64 -6631306357822369120, i64 165246525444], [3 x i64] [i64 0, i64 398495392178782208, i64 4640516162], [3 x i64] [i64 0, i64 9154841240825495552, i64 66021602478], [3 x i64] [i64 0, i64 1902683298245640192, i64 174496284938], [3 x i64] [i64 0, i64 5081900962138816512, i64 10103144668], [3 x i64] [i64 0, i64 3234710432358858752, i64 220275490403], [3 x i64] [i64 0, i64 -1729382256910270464, i64 99175354003], [3 x i64] [i64 0, i64 0, i64 147906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 -634430062146030585, i64 27904, i64 0], [3 x i64] [i64 7684138864490314336, i64 27904965607477, i64 0], [3 x i64] [i64 -8706221286289522011, i64 -4958176045135037006, i64 1512], [3 x i64] [i64 6701109407732989894, i64 275784718433886190, i64 232731216738], [3 x i64] [i64 -1911857846207107664, i64 -8426175193352449252, i64 98014950319], [3 x i64] [i64 8908667306968317910, i64 8876397213146246746, i64 175543216127], [3 x i64] [i64 7531472173477105155, i64 2155905919114811310, i64 255481190457], [3 x i64] [i64 -6919372468874750450, i64 1087100407155601220, i64 57116871894], [3 x i64] [i64 -2758150577018473040, i64 2903498381705011170, i64 214058931831], [3 x i64] [i64 -7051799269456239428, i64 -6223267816702893851, i64 119157398962], [3 x i64] [i64 -7264464192855178989, i64 -6298086909972816021, i64 178662635975], [3 x i64] [i64 150579373068361470, i64 8951241323311673823, i64 199658580024], [3 x i64] [i64 3147220002440857300, i64 8463862715901576300, i64 56485247764], [3 x i64] [i64 3630514817795505815, i64 3873401978748963266, i64 20458826917], [3 x i64] [i64 -6737947485375318028, i64 248364795947002730, i64 165209977542], [3 x i64] [i64 -1602248607283182070, i64 -7992366048305549794, i64 198013463882], [3 x i64] [i64 -810088601384075714, i64 6574176865628265640, i64 74566732968], [3 x i64] [i64 -1407817418022906387, i64 16703315293848336, i64 168356386842], [3 x i64] [i64 -2843905616926022201, i64 -8550710851259538160, i64 26000905488], [3 x i64] [i64 -7576928204460674826, i64 -1135367804375466609, i64 16536465035], [3 x i64] [i64 -39619892769750784, i64 -68232757213912310, i64 139938451587], [3 x i64] [i64 5705018517251293184, i64 -3325947679981967319, i64 131996301094], [3 x i64] [i64 -8786291814966493184, i64 -193296267969204567, i64 38819700014], [3 x i64] [i64 5646292272224927744, i64 5842497225601731158, i64 46989521388], [3 x i64] [i64 7410409304047484928, i64 4369968404176723173, i64 236316722409], [3 x i64] [i64 5953758707383795712, i64 -2304536820035063499, i64 233236896461], [3 x i64] [i64 4611686018427387904, i64 -6322484846317623438, i64 205875070808], [3 x i64] [i64 0, i64 -5427260809143474560, i64 88657257409], [3 x i64] [i64 0, i64 74901376448135168, i64 193705787602], [3 x i64] [i64 0, i64 -4549683979896225792, i64 210004060411], [3 x i64] [i64 0, i64 4495486210810052608, i64 251753361137], [3 x i64] [i64 0, i64 -3561247793622286336, i64 241243700795], [3 x i64] [i64 0, i64 4976477588244398080, i64 59806944370], [3 x i64] [i64 0, i64 -6917529027641081856, i64 114269775390], [3 x i64] [i64 0, i64 0, i64 30625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 15035424419724983, i64 425795984, i64 0], [3 x i64] [i64 -165921607676715324, i64 425795984000815071, i64 0], [3 x i64] [i64 -6922493326406936333, i64 -8403149746579078981, i64 23082446], [3 x i64] [i64 -3234458130017740856, i64 8336034337032909060, i64 206544464339], [3 x i64] [i64 7951804027551297019, i64 -1729528288814270759, i64 211451897326], [3 x i64] [i64 1706416229965221847, i64 -7477912809758339584, i64 238906242083], [3 x i64] [i64 3406023111930700826, i64 5536629379734406065, i64 35594621534], [3 x i64] [i64 -2314047869576160314, i64 1618806894932332402, i64 94300141280], [3 x i64] [i64 -6852897384915194701, i64 -7083412748454552755, i64 224087755697], [3 x i64] [i64 6875759884161133906, i64 8775167772751754888, i64 177616007425], [3 x i64] [i64 3593593325323835965, i64 2898202945316114122, i64 1475702798], [3 x i64] [i64 -8904694340452162691, i64 8868842714495185148, i64 14157111896], [3 x i64] [i64 -8520192147771764098, i64 -1394649406177552480, i64 88480780926], [3 x i64] [i64 3128491553219547895, i64 3658615537031138594, i64 126924395904], [3 x i64] [i64 -1288335416778196731, i64 -5959791635722360870, i64 128198333945], [3 x i64] [i64 2065169543154992616, i64 912079238520577629, i64 249676919048], [3 x i64] [i64 4832622393556232739, i64 -7486671175677663575, i64 8049443914], [3 x i64] [i64 -1940813358975895454, i64 6129550094334741912, i64 74594146742], [3 x i64] [i64 -175756000216662917, i64 7965724516573729480, i64 182332283576], [3 x i64] [i64 2525111411519708523, i64 5801761178810791992, i64 184431822791], [3 x i64] [i64 -1717754731190981174, i64 -5249277590611105501, i64 199314514103], [3 x i64] [i64 7974052022039438336, i64 -7120475435316444343, i64 183715436091], [3 x i64] [i64 5356554962386550784, i64 3597339351794947378, i64 59613998253], [3 x i64] [i64 6693869495028547584, i64 353880726151383714, i64 173195012157], [3 x i64] [i64 8157517147199766528, i64 -7291925911107478016, i64 61019183912], [3 x i64] [i64 -6380967353286393856, i64 5141043976157511026, i64 40604703904], [3 x i64] [i64 -6449154666394550272, i64 7188225141808859034, i64 160278696552], [3 x i64] [i64 0, i64 -4552575130413846431, i64 104389674465], [3 x i64] [i64 0, i64 -6270206003874723328, i64 225753204407], [3 x i64] [i64 0, i64 7994239409235165184, i64 183660091451], [3 x i64] [i64 0, i64 -4738967048229486592, i64 59433368586], [3 x i64] [i64 0, i64 -8326516826032832512, i64 10743100081], [3 x i64] [i64 0, i64 7358494763030413312, i64 177548618618], [3 x i64] [i64 0, i64 7656119366529843200, i64 122398904800], [3 x i64] [i64 0, i64 -9223372036854775808, i64 224415039062], [3 x i64] [i64 0, i64 0, i64 86500000000], [3 x i64] [i64 2418433229320326037, i64 6497, i64 0], [3 x i64] [i64 1143911773589293534, i64 6497131103528, i64 0], [3 x i64] [i64 -9170560370098626688, i64 3877189582299842749, i64 352], [3 x i64] [i64 3532180128827684715, i64 7625565791857948238, i64 96210182868], [3 x i64] [i64 8563997501322031543, i64 -1878308910097544132, i64 212413382749], [3 x i64] [i64 -3602853664051090935, i64 -854672133187743486, i64 93898176669], [3 x i64] [i64 -8957326212074998938, i64 -3288106195674060785, i64 157953668130], [3 x i64] [i64 1113198223322322089, i64 -657500844563149723, i64 34821751405], [3 x i64] [i64 -7255966516562953747, i64 -3769058022456655132, i64 109964356807], [3 x i64] [i64 -682190427776913330, i64 3531237481269211986, i64 199795678955], [3 x i64] [i64 -3545966922718316764, i64 8074435404989280910, i64 235191428767], [3 x i64] [i64 -1081844210351658006, i64 7086549341467684427, i64 159437716020], [3 x i64] [i64 -2909173892119384579, i64 -7890609302790924653, i64 52384162609], [3 x i64] [i64 5558052627121307766, i64 -7674077938996584841, i64 49572249212], [3 x i64] [i64 -6351502507914319007, i64 6195173298198112620, i64 124583987401], [3 x i64] [i64 2187936505958366389, i64 8144773843324250887, i64 201335841017], [3 x i64] [i64 -6437540452383691388, i64 -4302459256558626925, i64 249441529074], [3 x i64] [i64 -3631901238959248664, i64 6464447844648863176, i64 242766763216], [3 x i64] [i64 5965296499605198833, i64 -2686275630416372481, i64 208350438419], [3 x i64] [i64 4051026394962148842, i64 5172191224908322475, i64 19854376706], [3 x i64] [i64 -1647217774567863267, i64 2357554307308969012, i64 2280385048], [3 x i64] [i64 -8986529907063336411, i64 1602046917604361745, i64 24127803275], [3 x i64] [i64 -7696007078680483608, i64 7830970218109515845, i64 139086847137], [3 x i64] [i64 5377963045376430080, i64 2899479134887821084, i64 161424517746], [3 x i64] [i64 -2449833723456126976, i64 -2654701771317533704, i64 114157181078], [3 x i64] [i64 -4795586544054304768, i64 -7160644961413495417, i64 150856088328], [3 x i64] [i64 -8675438663489814528, i64 -3285266244555604212, i64 8611820658], [3 x i64] [i64 -5737304450293301248, i64 423831848142641767, i64 114821905360], [3 x i64] [i64 -8502796096475496448, i64 -8739330752663239034, i64 208022975970], [3 x i64] [i64 0, i64 -7477260773905715996, i64 226526239930], [3 x i64] [i64 0, i64 4326479556120930304, i64 186594656881], [3 x i64] [i64 0, i64 -5570516841667756032, i64 113234538926], [3 x i64] [i64 0, i64 -1478757245918380032, i64 174698021676], [3 x i64] [i64 0, i64 1288146316538413056, i64 44919836409], [3 x i64] [i64 0, i64 -4731453621017772032, i64 249069830551], [3 x i64] [i64 0, i64 4683743612465315840, i64 151743507385], [3 x i64] [i64 0, i64 0, i64 185253906250], [3 x i64] [i64 0, i64 0, i64 74000000000], [3 x i64] [i64 371564423966525229, i64 99138353, i64 0], [3 x i64] [i64 -3981884952195212033, i64 99138353020142547, i64 0], [3 x i64] [i64 3913119023023056247, i64 -2101938769175278832, i64 5374300], [3 x i64] [i64 5493396321716566945, i64 26429987091348271, i64 92886053671], [3 x i64] [i64 5837454566818211973, i64 8691371289609838059, i64 39001432772], [3 x i64] [i64 2886670683193253881, i64 -5466575695216505066, i64 196471160181], [3 x i64] [i64 5504823105587173817, i64 -4436618615580055477, i64 117703656337], [3 x i64] [i64 -9014909796374700510, i64 -1384914396677756510, i64 145759490422], [3 x i64] [i64 -5525082727253304529, i64 2227928323072698520, i64 118924923640], [3 x i64] [i64 3643076516404724246, i64 7394752319272287289, i64 248120776236], [3 x i64] [i64 -5887347120512685139, i64 8805771303577744757, i64 44400870326], [3 x i64] [i64 1626880974916825698, i64 -2075716879407303231, i64 182477361818], [3 x i64] [i64 6806994170946429566, i64 9114324123731231602, i64 154887475162], [3 x i64] [i64 7596631230206896579, i64 -3978554264962559723, i64 218494088500], [3 x i64] [i64 3100480253729502401, i64 2376054557800684348, i64 52784322141], [3 x i64] [i64 6310570748781063286, i64 -5984505130163503045, i64 93128806175], [3 x i64] [i64 -4194876996333807480, i64 -3111888702866945707, i64 31675579326], [3 x i64] [i64 6701165793751570137, i64 7211347914013798462, i64 190831304175], [3 x i64] [i64 -7589910933245591693, i64 -4683101741137002739, i64 239390927953], [3 x i64] [i64 -2579180346148303060, i64 -1578475695969480233, i64 81746128545], [3 x i64] [i64 5048961008671491600, i64 1120013377627684177, i64 161914430661], [3 x i64] [i64 -5168560954109702565, i64 -2548636422992277228, i64 197060716046], [3 x i64] [i64 4547591784941053655, i64 -6164820697376277339, i64 14861838142], [3 x i64] [i64 -6631306357822369120, i64 6383530489286615044, i64 62665804400], [3 x i64] [i64 398495392178782208, i64 4253822060257126466, i64 112346051881], [3 x i64] [i64 9154841240825495552, i64 -832371635318049618, i64 41230600155], [3 x i64] [i64 1902683298245640192, i64 4309951310554333450, i64 219954877043], [3 x i64] [i64 5081900962138816512, i64 -5340558084735778596, i64 115233642928], [3 x i64] [i64 3234710432358858752, i64 2070134359761960547, i64 176710487766], [3 x i64] [i64 -1729382256910270464, i64 -9047384159571685741, i64 214112222208], [3 x i64] [i64 0, i64 -1031690788986010352, i64 509540321], [3 x i64] [i64 0, i64 4840502610448261120, i64 225944071930], [3 x i64] [i64 0, i64 5690599259712258048, i64 250262404172], [3 x i64] [i64 0, i64 114769594245185536, i64 76308488004], [3 x i64] [i64 0, i64 3150620882578178048, i64 68006221672], [3 x i64] [i64 0, i64 5136918324969472000, i64 104170795500], [3 x i64] [i64 0, i64 7205759403792793600, i64 236278472900], [3 x i64] [i64 0, i64 0, i64 196390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 -4958176045135037006, i64 1512, i64 0], [3 x i64] [i64 275784718433886190, i64 1512731216738, i64 0], [3 x i64] [i64 -8426175193352449252, i64 98202693831717807, i64 82], [3 x i64] [i64 8876397213146246746, i64 -5537456813539137537, i64 82005323578], [3 x i64] [i64 2155905919114811310, i64 -6718112124328765383, i64 58699813864], [3 x i64] [i64 1087100407155601220, i64 -183042148187353898, i64 232635810411], [3 x i64] [i64 2903498381705011170, i64 4868886449713321591, i64 107990077265], [3 x i64] [i64 -6223267816702893851, i64 5870139507184082354, i64 81263942863], [3 x i64] [i64 -6298086909972816021, i64 5978562500822661575, i64 207318220900], [3 x i64] [i64 8951241323311673823, i64 -7625607234079283144, i64 100324098522], [3 x i64] [i64 8463862715901576300, i64 -8955836443572798700, i64 218586615003], [3 x i64] [i64 3873401978748963266, i64 -7882738395707937627, i64 219514503133], [3 x i64] [i64 248364795947002730, i64 5754050547468481222, i64 221572675895], [3 x i64] [i64 -7992366048305549794, i64 3833909949855542602, i64 55311927705], [3 x i64] [i64 6574176865628265640, i64 -3000205521043583832, i64 153207836674], [3 x i64] [i64 16703315293848336, i64 -3521906224905152486, i64 2837358532], [3 x i64] [i64 -8550710851259538160, i64 -306573733291207408, i64 196809077080], [3 x i64] [i64 -1135367804375466609, i64 -7066319253884342645, i64 88983380604], [3 x i64] [i64 -68232757213912310, i64 -6029828409557299069, i64 124616934065], [3 x i64] [i64 -3325947679981967319, i64 -1251461832083261658, i64 177673122346], [3 x i64] [i64 -193296267969204567, i64 2649541045825281326, i64 42932158118], [3 x i64] [i64 5842497225601731158, i64 -1869314209441041940, i64 166143631907], [3 x i64] [i64 4369968404176723173, i64 -6395487013541444375, i64 35898664273], [3 x i64] [i64 -2304536820035063499, i64 5363884561143470797, i64 81653299954], [3 x i64] [i64 -6322484846317623438, i64 -5392714170625931432, i64 242290776764], [3 x i64] [i64 -5427260809143474560, i64 566314952158634945, i64 188707660379], [3 x i64] [i64 74901376448135168, i64 1329472079642345682, i64 91030699995], [3 x i64] [i64 -4549683979896225792, i64 -2760506587050694405, i64 219072070825], [3 x i64] [i64 4495486210810052608, i64 1069073549290598129, i64 169850352638], [3 x i64] [i64 -3561247793622286336, i64 4323599065125928507, i64 254057954593], [3 x i64] [i64 4976477588244398080, i64 -584920743956870030, i64 33234382774], [3 x i64] [i64 -6917529027641081856, i64 -1226594088296749538, i64 182968291382], [3 x i64] [i64 0, i64 4344934572159429184, i64 54933506201], [3 x i64] [i64 0, i64 2252927464837120000, i64 153235539375], [3 x i64] [i64 0, i64 -7536725901745061888, i64 175122131442], [3 x i64] [i64 0, i64 3597328585515335680, i64 242591433270], [3 x i64] [i64 0, i64 6972808074239148032, i64 54195011573], [3 x i64] [i64 0, i64 2227030015734710272, i64 245377996683], [3 x i64] [i64 0, i64 1152921504606846976, i64 139120727539], [3 x i64] [i64 0, i64 0, i64 243062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 -8403149746579078981, i64 23082446, i64 0], [3 x i64] [i64 8336034337032909060, i64 23082446544464339, i64 0], [3 x i64] [i64 -1729528288814270759, i64 -1208456569904306706, i64 1251301], [3 x i64] [i64 -7477912809758339584, i64 1434575446038410275, i64 229934489438], [3 x i64] [i64 5536629379734406065, i64 -4437174325868309922, i64 94077768490], [3 x i64] [i64 1618806894932332402, i64 -3507948341433600288, i64 42759460297], [3 x i64] [i64 -7083412748454552755, i64 6687653542888983473, i64 201809833739], [3 x i64] [i64 8775167772751754888, i64 28238723295162625, i64 11362538425], [3 x i64] [i64 2898202945316114122, i64 4745270274832691214, i64 185001530824], [3 x i64] [i64 8868842714495185148, i64 926478968112308824, i64 200257241617], [3 x i64] [i64 -1394649406177552480, i64 9213681606604198526, i64 17050224525], [3 x i64] [i64 3658615537031138594, i64 -5100520253130238592, i64 141499474680], [3 x i64] [i64 -5959791635722360870, i64 691642518601291257, i64 248723500243], [3 x i64] [i64 912079238520577629, i64 1153720150033789192, i64 211037494016], [3 x i64] [i64 -7486671175677663575, i64 -6357729038987770806, i64 62543294], [3 x i64] [i64 6129550094334741912, i64 3555868702841788854, i64 190655346818], [3 x i64] [i64 7965724516573729480, i64 -6738337290951337288, i64 130192764028], [3 x i64] [i64 5801761178810791992, i64 -9029246310804207673, i64 124634714003], [3 x i64] [i64 -5249277590611105501, i64 -5608408006751936329, i64 147510523576], [3 x i64] [i64 -7120475435316444343, i64 -4709035931581344197, i64 184695967592], [3 x i64] [i64 3597339351794947378, i64 -6763309263874855763, i64 104744722650], [3 x i64] [i64 353880726151383714, i64 2689114340106315837, i64 218633360270], [3 x i64] [i64 -7291925911107478016, i64 8859225263374261032, i64 142145777180], [3 x i64] [i64 5141043976157511026, i64 -2685072089130951520, i64 28480259563], [3 x i64] [i64 7188225141808859034, i64 7087267079878005352, i64 235854441950], [3 x i64] [i64 -4552575130413846431, i64 4601291730423121377, i64 222384201518], [3 x i64] [i64 -6270206003874723328, i64 -8887333036649969993, i64 46249436524], [3 x i64] [i64 7994239409235165184, i64 -5476923784068163525, i64 108518216710], [3 x i64] [i64 -4738967048229486592, i64 -4818504153423594486, i64 6703095366], [3 x i64] [i64 -8326516826032832512, i64 8049893933765800625, i64 70738788366], [3 x i64] [i64 7358494763030413312, i64 -8054988124869301382, i64 14436385624], [3 x i64] [i64 7656119366529843200, i64 -3992093296247107104, i64 88563338218], [3 x i64] [i64 -9223372036854775808, i64 -4202105550368424362, i64 234783588188], [3 x i64] [i64 0, i64 -6200727263269797632, i64 92772203401], [3 x i64] [i64 0, i64 -9064002309158469632, i64 137663857901], [3 x i64] [i64 0, i64 4608696190291148800, i64 237508639450], [3 x i64] [i64 0, i64 1696483666416369664, i64 218249837921], [3 x i64] [i64 0, i64 -3030060532104167424, i64 97091966563], [3 x i64] [i64 0, i64 7683140964294066176, i64 99835740089], [3 x i64] [i64 0, i64 4611686018427387904, i64 185416503906], [3 x i64] [i64 0, i64 0, i64 98250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 3877189582299842749, i64 352, i64 0], [3 x i64] [i64 7625565791857948238, i64 352210182868, i64 0], [3 x i64] [i64 -1878308910097544132, i64 1722045467931902045, i64 19], [3 x i64] [i64 -854672133187743486, i64 -2351420065556694883, i64 19093352271], [3 x i64] [i64 -3288106195674060785, i64 -3230556013615270878, i64 79872529262], [3 x i64] [i64 -657500844563149723, i64 -7653358143806520723, i64 110824871207], [3 x i64] [i64 -3769058022456655132, i64 -5833466846833611577, i64 39585110623], [3 x i64] [i64 3531237481269211986, i64 -7802204448553951509, i64 95683767128], [3 x i64] [i64 8074435404989280910, i64 6181262895644173983, i64 88577041649], [3 x i64] [i64 7086549341467684427, i64 148914399627082292, i64 241335086933], [3 x i64] [i64 -7890609302790924653, i64 -4067454298821565647, i64 85008072665], [3 x i64] [i64 -7674077938996584841, i64 -6703404398126924164, i64 217779502860], [3 x i64] [i64 6195173298198112620, i64 7841621929809463497, i64 12636607719], [3 x i64] [i64 8144773843324250887, i64 -7277799393458315015, i64 231425095176], [3 x i64] [i64 -4302459256558626925, i64 6178560202529287410, i64 8605469704], [3 x i64] [i64 6464447844648863176, i64 -5151500765507955504, i64 8334940419], [3 x i64] [i64 -2686275630416372481, i64 -1406070327537081325, i64 3720736583], [3 x i64] [i64 5172191224908322475, i64 -3489301586670141694, i64 71923776774], [3 x i64] [i64 2357554307308969012, i64 -668588647202559464, i64 6810844581], [3 x i64] [i64 1602046917604361745, i64 -3501339089489817717, i64 165963755736], [3 x i64] [i64 7830970218109515845, i64 -6855989207650870111, i64 216810192027], [3 x i64] [i64 2899479134887821084, i64 6020790784469412466, i64 155628336080], [3 x i64] [i64 -2654701771317533704, i64 7934351824569522326, i64 208326387722], [3 x i64] [i64 -7160644961413495417, i64 5038361112172116744, i64 10430122074], [3 x i64] [i64 -3285266244555604212, i64 3305187319649924210, i64 90273130103], [3 x i64] [i64 423831848142641767, i64 -6976568562610390064, i64 119179174563], [3 x i64] [i64 -8739330752663239034, i64 7308362160352048610, i64 163621799460], [3 x i64] [i64 -7477260773905715996, i64 -7780333402483974982, i64 36396187106], [3 x i64] [i64 4326479556120930304, i64 2181639019945820785, i64 226578227281], [3 x i64] [i64 -5570516841667756032, i64 4615749499734847918, i64 81118266888], [3 x i64] [i64 -1478757245918380032, i64 -4370584872751054036, i64 8250220281], [3 x i64] [i64 1288146316538413056, i64 5470405257862074105, i64 249763070119], [3 x i64] [i64 -4731453621017772032, i64 4565741478181339543, i64 167296551263], [3 x i64] [i64 4683743612465315840, i64 8901832997861862329, i64 95247509341], [3 x i64] [i64 0, i64 -4256602903517837494, i64 93482569333], [3 x i64] [i64 0, i64 4240772322245764096, i64 117769249094], [3 x i64] [i64 0, i64 4422842195340951552, i64 70229892728], [3 x i64] [i64 0, i64 -2998317686976413696, i64 120239762755], [3 x i64] [i64 0, i64 9203504548935630848, i64 67837460872], [3 x i64] [i64 0, i64 5936377627571912704, i64 136498922981], [3 x i64] [i64 0, i64 468374361246531584, i64 229321811676], [3 x i64] [i64 0, i64 0, i64 220025390625], [3 x i64] [i64 0, i64 0, i64 33000000000], [3 x i64] [i64 -2101938769175278832, i64 5374300, i64 0], [3 x i64] [i64 26429987091348271, i64 5374300886053671, i64 0], [3 x i64] [i64 8691371289609838059, i64 8020875056524075716, i64 291341], [3 x i64] [i64 -5466575695216505066, i64 1400288714762747253, i64 13434812508], [3 x i64] [i64 -4436618615580055477, i64 6136037711314764689, i64 92075909803], [3 x i64] [i64 -1384914396677756510, i64 -2711255987317157514, i64 171332635270], [3 x i64] [i64 2227928323072698520, i64 7735094782793634552, i64 134853022518], [3 x i64] [i64 7394752319272287289, i64 7273689191766726188, i64 54419320328], [3 x i64] [i64 8805771303577744757, i64 3410634565056431030, i64 8394307481], [3 x i64] [i64 -2075716879407303231, i64 4600927904885215898, i64 153184890870], [3 x i64] [i64 9114324123731231602, i64 9154871331680374746, i64 246249416801], [3 x i64] [i64 -3978554264962559723, i64 6117978272461042996, i64 97496286569], [3 x i64] [i64 2376054557800684348, i64 -5329839734422055331, i64 105331656266], [3 x i64] [i64 -5984505130163503045, i64 867037205615660831, i64 74711068809], [3 x i64] [i64 -3111888702866945707, i64 1802487145191504830, i64 137047002181], [3 x i64] [i64 7211347914013798462, i64 -1204734355252142609, i64 69097713023], [3 x i64] [i64 -4683101741137002739, i64 -4825941718221083567, i64 127934691219], [3 x i64] [i64 -1578475695969480233, i64 4442227880594435745, i64 147738385175], [3 x i64] [i64 1120013377627684177, i64 -1091894860855237435, i64 23240813655], [3 x i64] [i64 -2548636422992277228, i64 -244424893877983730, i64 87940808260], [3 x i64] [i64 -6164820697376277339, i64 -878110057360677058, i64 68986749699], [3 x i64] [i64 6383530489286615044, i64 7496925598312450672, i64 3952397558], [3 x i64] [i64 4253822060257126466, i64 601870379496813865, i64 246406409151], [3 x i64] [i64 -832371635318049618, i64 -6451637508028823589, i64 191032627458], [3 x i64] [i64 4309951310554333450, i64 -2115672378945367437, i64 2650256029], [3 x i64] [i64 -5340558084735778596, i64 -8780781856709027408, i64 157885309170], [3 x i64] [i64 2070134359761960547, i64 -4764082699294077226, i64 242523992861], [3 x i64] [i64 -9047384159571685741, i64 6940361789924260864, i64 29741738559], [3 x i64] [i64 -1031690788986010352, i64 -8788704242065541151, i64 63376237766], [3 x i64] [i64 4840502610448261120, i64 6843715893910236922, i64 198523563388], [3 x i64] [i64 5690599259712258048, i64 47089792870595660, i64 124370998582], [3 x i64] [i64 114769594245185536, i64 -3936357881612394684, i64 54002552742], [3 x i64] [i64 3150620882578178048, i64 -6386812865349511320, i64 166786609611], [3 x i64] [i64 5136918324969472000, i64 -3569730605250366996, i64 203653770180], [3 x i64] [i64 7205759403792793600, i64 2397668560671695044, i64 196806484516], [3 x i64] [i64 0, i64 2195572305559232232, i64 36129977873], [3 x i64] [i64 0, i64 3261686279425953792, i64 17119022213], [3 x i64] [i64 0, i64 -9112893411649650688, i64 133176816367], [3 x i64] [i64 0, i64 5036522340217782272, i64 239505989058], [3 x i64] [i64 0, i64 2800120215143186432, i64 194273030423], [3 x i64] [i64 0, i64 441634238459019264, i64 23151794821], [3 x i64] [i64 0, i64 720575940379279360, i64 133023941040], [3 x i64] [i64 0, i64 0, i64 176039062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 98202693831717807, i64 82, i64 0], [3 x i64] [i64 -5537456813539137537, i64 82005323578, i64 0], [3 x i64] [i64 -6718112124328765383, i64 8218347283861607400, i64 4], [3 x i64] [i64 -183042148187353898, i64 -550543687735917973, i64 4445517498], [3 x i64] [i64 4868886449713321591, i64 -2113501971615199407, i64 186970154966], [3 x i64] [i64 5870139507184082354, i64 -8464838345102762801, i64 214885426828], [3 x i64] [i64 5978562500822661575, i64 -3227274054784712604, i64 140541120193], [3 x i64] [i64 -7625607234079283144, i64 -1294673905179934246, i64 193825049122], [3 x i64] [i64 -8955836443572798700, i64 -605400632751223589, i64 34929815586], [3 x i64] [i64 -7882738395707937627, i64 -1155666049785561123, i64 34967181165], [3 x i64] [i64 5754050547468481222, i64 -1701939491918792393, i64 109937351217], [3 x i64] [i64 3833909949855542602, i64 5001622214111594905, i64 49907737675], [3 x i64] [i64 -3000205521043583832, i64 -8769997176274153470, i64 75271138483], [3 x i64] [i64 -3521906224905152486, i64 8109025833995118532, i64 179524577500], [3 x i64] [i64 -306573733291207408, i64 5495826424046694744, i64 220439591171], [3 x i64] [i64 -7066319253884342645, i64 7890288164365705852, i64 3297929347], [3 x i64] [i64 -6029828409557299069, i64 8616438349039895217, i64 131427733378], [3 x i64] [i64 -1251461832083261658, i64 -2659589271920790998, i64 130467098058], [3 x i64] [i64 2649541045825281326, i64 -6028084762228769114, i64 202855823376], [3 x i64] [i64 -1869314209441041940, i64 4486988874116669987, i64 16673216870], [3 x i64] [i64 -6395487013541444375, i64 4828971301551875409, i64 102243240154], [3 x i64] [i64 5363884561143470797, i64 -3677637651695109390, i64 218261779058], [3 x i64] [i64 -5392714170625931432, i64 7763933466423188156, i64 114800634863], [3 x i64] [i64 566314952158634945, i64 -7997646957455711653, i64 239420883676], [3 x i64] [i64 1329472079642345682, i64 -5576051571236651045, i64 220566446689], [3 x i64] [i64 -2760506587050694405, i64 -6849264592398547799, i64 97697721638], [3 x i64] [i64 1069073549290598129, i64 8294994869530047486, i64 38628700622], [3 x i64] [i64 4323599065125928507, i64 -1567428243785073375, i64 206449672572], [3 x i64] [i64 -584920743956870030, i64 -6573419236108111946, i64 124915029544], [3 x i64] [i64 -1226594088296749538, i64 3277599055636107318, i64 40643654229], [3 x i64] [i64 4344934572159429184, i64 -3083276176355309415, i64 85177679000], [3 x i64] [i64 2252927464837120000, i64 -8095561869229767249, i64 152832855263], [3 x i64] [i64 -7536725901745061888, i64 -5635226488777627150, i64 223561138711], [3 x i64] [i64 3597328585515335680, i64 -1457813374150802890, i64 23694513759], [3 x i64] [i64 6972808074239148032, i64 -6763244154884833291, i64 95920971778], [3 x i64] [i64 2227030015734710272, i64 -5327443382427904117, i64 2633363799], [3 x i64] [i64 1152921504606846976, i64 -8321194967114197517, i64 87711198715], [3 x i64] [i64 0, i64 -941391373838751072, i64 251548907116], [3 x i64] [i64 0, i64 6756039242241163264, i64 108948967071], [3 x i64] [i64 0, i64 3537338758766526464, i64 159366245621], [3 x i64] [i64 0, i64 6522626374119718912, i64 245191759518], [3 x i64] [i64 0, i64 4733294203482669056, i64 158353592284], [3 x i64] [i64 0, i64 -1449033180106457088, i64 220256592392], [3 x i64] [i64 0, i64 -1729382256910270464, i64 8921447753], [3 x i64] [i64 0, i64 0, i64 73906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 -1208456569904306706, i64 1251301, i64 0], [3 x i64] [i64 1434575446038410275, i64 1251301934489438, i64 0], [3 x i64] [i64 -4437174325868309922, i64 3943737498063000362, i64 67833], [3 x i64] [i64 -3507948341433600288, i64 2870731037991212489, i64 249213790438], [3 x i64] [i64 6687653542888983473, i64 7389433400402095883, i64 230155622641], [3 x i64] [i64 28238723295162625, i64 5675049236146197433, i64 241400581987], [3 x i64] [i64 4745270274832691214, i64 -8492964227446647352, i64 99307645035], [3 x i64] [i64 926478968112308824, i64 -5754765136529915375, i64 107539595486], [3 x i64] [i64 9213681606604198526, i64 -2923416742181353587, i64 222688033556], [3 x i64] [i64 -5100520253130238592, i64 -2724140794141433096, i64 20841521260], [3 x i64] [i64 691642518601291257, i64 -6608111709537735469, i64 108852324031], [3 x i64] [i64 1153720150033789192, i64 7832751832367143680, i64 191641773546], [3 x i64] [i64 -6357729038987770806, i64 -6279020046546610754, i64 234424614327], [3 x i64] [i64 3555868702841788854, i64 4108211144748152962, i64 183659613641], [3 x i64] [i64 -6738337290951337288, i64 7530983398136343676, i64 201222706572], [3 x i64] [i64 -9029246310804207673, i64 1117587133956542355, i64 140408255428], [3 x i64] [i64 -5608408006751936329, i64 -1311995448560060744, i64 196060584519], [3 x i64] [i64 -4709035931581344197, i64 4039918359454207848, i64 71928876584], [3 x i64] [i64 -6763309263874855763, i64 1830218764589441242, i64 40219004413], [3 x i64] [i64 2689114340106315837, i64 637895981480825742, i64 253099216358], [3 x i64] [i64 8859225263374261032, i64 8246879226348334620, i64 230034580410], [3 x i64] [i64 -2685072089130951520, i64 -6057504505566968341, i64 186447064218], [3 x i64] [i64 7087267079878005352, i64 -4405486894906397218, i64 154671622022], [3 x i64] [i64 4601291730423121377, i64 -2134228357214920914, i64 134761178076], [3 x i64] [i64 -8887333036649969993, i64 -1358221274112563860, i64 220884303248], [3 x i64] [i64 -5476923784068163525, i64 3588932524637852678, i64 144926370677], [3 x i64] [i64 -4818504153423594486, i64 107218049069817414, i64 117194556422], [3 x i64] [i64 8049893933765800625, i64 1596707240462008334, i64 6005812302], [3 x i64] [i64 -8054988124869301382, i64 -984830931317963944, i64 78086557672], [3 x i64] [i64 -3992093296247107104, i64 4366474266651610090, i64 232946612208], [3 x i64] [i64 -4202105550368424362, i64 5539304013194805084, i64 240236707044], [3 x i64] [i64 -6200727263269797632, i64 4762470619211987849, i64 228300286272], [3 x i64] [i64 -9064002309158469632, i64 -7611105614722906899, i64 64258174049], [3 x i64] [i64 4608696190291148800, i64 -2305101783199499558, i64 97587401137], [3 x i64] [i64 1696483666416369664, i64 -1056175402953196191, i64 177875040181], [3 x i64] [i64 -3030060532104167424, i64 -5909975582375684509, i64 181942744616], [3 x i64] [i64 7683140964294066176, i64 -5301595550837604423, i64 40679619581], [3 x i64] [i64 4611686018427387904, i64 5665349945233068642, i64 253712599929], [3 x i64] [i64 0, i64 -1372136535958485376, i64 121307119235], [3 x i64] [i64 0, i64 6241525660962062336, i64 131925616329], [3 x i64] [i64 0, i64 1142860629783085056, i64 201338353784], [3 x i64] [i64 0, i64 -2159216656839081984, i64 120061954598], [3 x i64] [i64 0, i64 9028002014738513920, i64 38882948630], [3 x i64] [i64 0, i64 -2229281815548395520, i64 22489408969], [3 x i64] [i64 0, i64 -6917529027641081856, i64 201879150390], [3 x i64] [i64 0, i64 0, i64 54625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 1722045467931902045, i64 19, i64 0], [3 x i64] [i64 -2351420065556694883, i64 19093352271, i64 0], [3 x i64] [i64 -3230556013615270878, i64 646608198162977646, i64 1], [3 x i64] [i64 -7653358143806520723, i64 -6276285226814843609, i64 1035052700], [3 x i64] [i64 -5833466846833611577, i64 1797330480103086687, i64 156659761896], [3 x i64] [i64 -7802204448553951509, i64 -8114555509212288168, i64 232097433480], [3 x i64] [i64 6181262895644173983, i64 7524259485079594225, i64 136560109064], [3 x i64] [i64 148914399627082292, i64 62681109059153749, i64 8407890924], [3 x i64] [i64 -4067454298821565647, i64 -4966107621905514535, i64 236003397949], [3 x i64] [i64 -6703404398126924164, i64 6948168233012789004, i64 61730786766], [3 x i64] [i64 7841621929809463497, i64 -6431241099667745561, i64 206376660954], [3 x i64] [i64 -7277799393458315015, i64 7343801660689004040, i64 218651361721], [3 x i64] [i64 6178560202529287410, i64 -4776163215068820472, i64 185398108285], [3 x i64] [i64 -5151500765507955504, i64 5605073897566574851, i64 125741083673], [3 x i64] [i64 -1406070327537081325, i64 -3058955133204304057, i64 25303851664], [3 x i64] [i64 -3489301586670141694, i64 -881562574031438586, i64 144834173709], [3 x i64] [i64 -668588647202559464, i64 1893743623847493029, i64 13952210397], [3 x i64] [i64 -3501339089489817717, i64 -8203245076993281832, i64 221102660047], [3 x i64] [i64 -6855989207650870111, i64 5619675836950314139, i64 207555301193], [3 x i64] [i64 6020790784469412466, i64 -8221874336198036528, i64 73304643237], [3 x i64] [i64 7934351824569522326, i64 2574495974386198538, i64 165554291299], [3 x i64] [i64 5038361112172116744, i64 7825756347302873178, i64 99139563706], [3 x i64] [i64 3305187319649924210, i64 -6375193969914894729, i64 186424235101], [3 x i64] [i64 -6976568562610390064, i64 7195875213867606691, i64 93654400042], [3 x i64] [i64 7308362160352048610, i64 -175379635302660572, i64 42390089176], [3 x i64] [i64 -7780333402483974982, i64 -1480222139756986910, i64 216990492650], [3 x i64] [i64 2181639019945820785, i64 289920862029570129, i64 234919756997], [3 x i64] [i64 4615749499734847918, i64 7804199568098625032, i64 197015716641], [3 x i64] [i64 -4370584872751054036, i64 5758118571242446585, i64 33423066506], [3 x i64] [i64 5470405257862074105, i64 4030788293606375591, i64 138312148233], [3 x i64] [i64 4565741478181339543, i64 4387716460037196127, i64 9218509471], [3 x i64] [i64 8901832997861862329, i64 -1639237594828265635, i64 159237858585], [3 x i64] [i64 -4256602903517837494, i64 -1413683469296021899, i64 25911136751], [3 x i64] [i64 4240772322245764096, i64 -7948325565417381562, i64 239923364065], [3 x i64] [i64 4422842195340951552, i64 -5208992034965086600, i64 225569120407], [3 x i64] [i64 -2998317686976413696, i64 -709125645404918461, i64 151717619975], [3 x i64] [i64 9203504548935630848, i64 -4900560240460725880, i64 7961558221], [3 x i64] [i64 5936377627571912704, i64 826778452978976229, i64 205734340097], [3 x i64] [i64 468374361246531584, i64 -4718667446719404324, i64 1044819749], [3 x i64] [i64 0, i64 2794860281883592225, i64 37744200525], [3 x i64] [i64 0, i64 8680705720425908736, i64 77151509679], [3 x i64] [i64 0, i64 731520517439488000, i64 175470582000], [3 x i64] [i64 0, i64 -5325931752940634112, i64 240039655806], [3 x i64] [i64 0, i64 2722954908557901824, i64 126711280661], [3 x i64] [i64 0, i64 6860847004205973504, i64 21147611681], [3 x i64] [i64 0, i64 6503197861922996224, i64 33371927261], [3 x i64] [i64 0, i64 -9223372036854775808, i64 221352539062], [3 x i64] [i64 0, i64 0, i64 182500000000], [3 x i64] [i64 8020875056524075716, i64 291341, i64 0], [3 x i64] [i64 1400288714762747253, i64 291341434812508, i64 0], [3 x i64] [i64 6136037711314764689, i64 -6441087660582313301, i64 15793], [3 x i64] [i64 -2711255987317157514, i64 4821130826186787462, i64 177650827938], [3 x i64] [i64 7735094782793634552, i64 -4068844606643383498, i64 162261354025], [3 x i64] [i64 7273689191766726188, i64 -1871130834084106744, i64 41779427491], [3 x i64] [i64 3410634565056431030, i64 4317827099179284377, i64 163898565794], [3 x i64] [i64 4600927904885215898, i64 1242354770412171254, i64 162234069876], [3 x i64] [i64 9154871331680374746, i64 994838588328896609, i64 116067348187], [3 x i64] [i64 6117978272461042996, i64 -1163434211696491159, i64 219053930307], [3 x i64] [i64 -5329839734422055331, i64 124242522249856586, i64 67936930105], [3 x i64] [i64 867037205615660831, i64 -6882136059042566007, i64 57006735200], [3 x i64] [i64 1802487145191504830, i64 -6045715498127897531, i64 96626918656], [3 x i64] [i64 -1204734355252142609, i64 2490725392961465727, i64 672261106], [3 x i64] [i64 -4825941718221083567, i64 1949482237120640915, i64 242135022494], [3 x i64] [i64 4442227880594435745, i64 -3036241677543351529, i64 158105681643], [3 x i64] [i64 -1091894860855237435, i64 -2751824543909630889, i64 235835405008], [3 x i64] [i64 -244424893877983730, i64 -8121874703537783228, i64 208850823292], [3 x i64] [i64 -878110057360677058, i64 1631866459122189059, i64 124559712290], [3 x i64] [i64 7496925598312450672, i64 172020494461226230, i64 34088463658], [3 x i64] [i64 601870379496813865, i64 -5712133765800694849, i64 42009325249], [3 x i64] [i64 -6451637508028823589, i64 1467513250829340930, i64 193690344608], [3 x i64] [i64 -2115672378945367437, i64 -4887984645215243619, i64 160079554052], [3 x i64] [i64 -8780781856709027408, i64 7915355143999496434, i64 4735021821], [3 x i64] [i64 -4764082699294077226, i64 2876370200608797469, i64 253429092262], [3 x i64] [i64 6940361789924260864, i64 343685370404989503, i64 166155928341], [3 x i64] [i64 -8788704242065541151, i64 4837266557407634630, i64 21018631221], [3 x i64] [i64 6843715893910236922, i64 -8824152657962390148, i64 53262228745], [3 x i64] [i64 47089792870595660, i64 -1942960259285330634, i64 9521641725], [3 x i64] [i64 -3936357881612394684, i64 5377083431343591334, i64 253894671913], [3 x i64] [i64 -6386812865349511320, i64 -1938261702410260021, i64 41291492276], [3 x i64] [i64 -3569730605250366996, i64 -7930860514897302588, i64 180894926622], [3 x i64] [i64 2397668560671695044, i64 63492062913405476, i64 30570067190], [3 x i64] [i64 2195572305559232232, i64 -6874824314091751919, i64 246003441911], [3 x i64] [i64 3261686279425953792, i64 2956602334970088581, i64 247627315027], [3 x i64] [i64 -9112893411649650688, i64 -4842007325991701777, i64 83160277733], [3 x i64] [i64 5036522340217782272, i64 -1873203354371400254, i64 229737514256], [3 x i64] [i64 2800120215143186432, i64 -5826041069108383465, i64 16898453442], [3 x i64] [i64 441634238459019264, i64 -3797336264619959675, i64 194684169680], [3 x i64] [i64 720575940379279360, i64 -7156368825810927184, i64 208794145988], [3 x i64] [i64 0, i64 -7426424623416677404, i64 196612052468], [3 x i64] [i64 0, i64 8754634933362354176, i64 244597412714], [3 x i64] [i64 0, i64 -5470424623377022976, i64 106474589710], [3 x i64] [i64 0, i64 -999412954082312192, i64 14703447686], [3 x i64] [i64 0, i64 3665184902673858560, i64 134945821715], [3 x i64] [i64 0, i64 -5497065557670756352, i64 19198690071], [3 x i64] [i64 0, i64 72057594037927936, i64 23702003479], [3 x i64] [i64 0, i64 0, i64 23003906250], [3 x i64] [i64 0, i64 0, i64 202000000000], [3 x i64] [i64 8218347283861607400, i64 4, i64 0], [3 x i64] [i64 -550543687735917973, i64 4445517498, i64 0], [3 x i64] [i64 -2113501971615199407, i64 4445517498970154966, i64 0], [3 x i64] [i64 -8464838345102762801, i64 -9033584337933474164, i64 240991986], [3 x i64] [i64 -3227274054784712604, i64 -4167580590819553599, i64 242510288411], [3 x i64] [i64 -1294673905179934246, i64 8693044629541194274, i64 27774075003], [3 x i64] [i64 -605400632751223589, i64 -6583633820449329118, i64 123471250893], [3 x i64] [i64 -1155666049785561123, i64 8319293368489531245, i64 205643100495], [3 x i64] [i64 -1701939491918792393, i64 3376307525676489265, i64 79450989797], [3 x i64] [i64 5001622214111594905, i64 -5241081818949639093, i64 229183029997], [3 x i64] [i64 -8769997176274153470, i64 5276250334231686323, i64 237715880385], [3 x i64] [i64 8109025833995118532, i64 -4656545552786806564, i64 193286026103], [3 x i64] [i64 5495826424046694744, i64 -4251208823558555389, i64 119747568159], [3 x i64] [i64 7890288164365705852, i64 -2021515277282547581, i64 31769541507], [3 x i64] [i64 8616438349039895217, i64 4295900841296269186, i64 131890413437], [3 x i64] [i64 -2659589271920790998, i64 4533952595483946442, i64 125232881251], [3 x i64] [i64 -6028084762228769114, i64 -5561706054336104432, i64 99245786062], [3 x i64] [i64 4486988874116669987, i64 -6306007833221719706, i64 206698499310], [3 x i64] [i64 4828971301551875409, i64 6927124077155322074, i64 238658150630], [3 x i64] [i64 -3677637651695109390, i64 -5968955731301731726, i64 230375520148], [3 x i64] [i64 7763933466423188156, i64 7980854329409711087, i64 148676422261], [3 x i64] [i64 -7997646957455711653, i64 2062671021810827996, i64 117432642980], [3 x i64] [i64 -5576051571236651045, i64 2739521363598172769, i64 164111817620], [3 x i64] [i64 -6849264592398547799, i64 -5549158387116085978, i64 148148509750], [3 x i64] [i64 8294994869530047486, i64 1127632646629044686, i64 54699179521], [3 x i64] [i64 -1567428243785073375, i64 4833775019274666364, i64 1061129088], [3 x i64] [i64 -6573419236108111946, i64 -2579081400769702360, i64 128262039468], [3 x i64] [i64 3277599055636107318, i64 2092350330982953557, i64 172860187717], [3 x i64] [i64 -3083276176355309415, i64 -5116681773867058024, i64 69113426538], [3 x i64] [i64 -8095561869229767249, i64 4479193352178519263, i64 106722624125], [3 x i64] [i64 -5635226488777627150, i64 3149393938889064983, i64 125242817558], [3 x i64] [i64 -1457813374150802890, i64 -8710364169638930849, i64 22170728987], [3 x i64] [i64 -6763244154884833291, i64 3816238703055069186, i64 27527810212], [3 x i64] [i64 -5327443382427904117, i64 -6847828134910889641, i64 164206878714], [3 x i64] [i64 -8321194967114197517, i64 -625110809102995973, i64 250628778492], [3 x i64] [i64 -941391373838751072, i64 2514623558764574316, i64 252966112675], [3 x i64] [i64 6756039242241163264, i64 4976730480406253215, i64 163136318016], [3 x i64] [i64 3537338758766526464, i64 -1170180376517939979, i64 64269789099], [3 x i64] [i64 6522626374119718912, i64 -5922009977768552802, i64 171936564394], [3 x i64] [i64 4733294203482669056, i64 -3115192764779196452, i64 170678967195], [3 x i64] [i64 -1449033180106457088, i64 -3029628492583607800, i64 155831125061], [3 x i64] [i64 -1729382256910270464, i64 6010750237807115593, i64 69835763510], [3 x i64] [i64 0, i64 5624630987553628432, i64 54325843423], [3 x i64] [i64 0, i64 -3564895829871910912, i64 223304911856], [3 x i64] [i64 0, i64 -3165130186828021760, i64 240806746609], [3 x i64] [i64 0, i64 -4388841715436355584, i64 241828417948], [3 x i64] [i64 0, i64 -2371425579275649024, i64 156762080413], [3 x i64] [i64 0, i64 -4554828073131835392, i64 157871444761], [3 x i64] [i64 0, i64 7205759403792793600, i64 25753082275], [3 x i64] [i64 0, i64 0, i64 163390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 3943737498063000362, i64 67833, i64 0], [3 x i64] [i64 2870731037991212489, i64 67833213790438, i64 0], [3 x i64] [i64 7389433400402095883, i64 4535831408134330609, i64 3677], [3 x i64] [i64 5675049236146197433, i64 6204770794376564579, i64 93245887913], [3 x i64] [i64 -8492964227446647352, i64 -4576931950957664149, i64 169336361298], [3 x i64] [i64 -5754765136529915375, i64 -4193514661315084066, i64 82751884021], [3 x i64] [i64 -2923416742181353587, i64 -5670186463493506284, i64 245772669114], [3 x i64] [i64 -2724140794141433096, i64 -1953103345030897556, i64 186692618575], [3 x i64] [i64 -6608111709537735469, i64 -9012345776883718465, i64 79894122055], [3 x i64] [i64 7832751832367143680, i64 8773374058285327850, i64 71511439756], [3 x i64] [i64 -6279020046546610754, i64 -5514728796961522249, i64 140475605560], [3 x i64] [i64 4108211144748152962, i64 -2152785490181796407, i64 56701045952], [3 x i64] [i64 7530983398136343676, i64 -4934850137566423668, i64 192883297264], [3 x i64] [i64 1117587133956542355, i64 -36807671704325180, i64 240732481237], [3 x i64] [i64 -1311995448560060744, i64 2189663026458466887, i64 213998004652], [3 x i64] [i64 4039918359454207848, i64 -8949018799461396952, i64 172118701870], [3 x i64] [i64 1830218764589441242, i64 -3679818592581759491, i64 46514872718], [3 x i64] [i64 637895981480825742, i64 6982373971809635814, i64 142800516634], [3 x i64] [i64 8246879226348334620, i64 8616702383006884794, i64 26378515251], [3 x i64] [i64 -6057504505566968341, i64 3059473300040871066, i64 51467112372], [3 x i64] [i64 -4405486894906397218, i64 -1322900916678056058, i64 180165854379], [3 x i64] [i64 -2134228357214920914, i64 -7236116899498925092, i64 171928285397], [3 x i64] [i64 -1358221274112563860, i64 -2578676935083623024, i64 213607729316], [3 x i64] [i64 3588932524637852678, i64 4467869511636937589, i64 164860209643], [3 x i64] [i64 107218049069817414, i64 -8394635947865209850, i64 235242203691], [3 x i64] [i64 1596707240462008334, i64 7470588003218451534, i64 43544925873], [3 x i64] [i64 -984830931317963944, i64 2613527085490786280, i64 177404981387], [3 x i64] [i64 4366474266651610090, i64 3632919450036549616, i64 139141679587], [3 x i64] [i64 5539304013194805084, i64 179367907231218916, i64 227196940958], [3 x i64] [i64 4762470619211987849, i64 -4893675889153676992, i64 158009723553], [3 x i64] [i64 -7611105614722906899, i64 8798774862365584481, i64 161734713298], [3 x i64] [i64 -2305101783199499558, i64 910911255817064881, i64 210476982541], [3 x i64] [i64 -1056175402953196191, i64 2304331144765093813, i64 13049380598], [3 x i64] [i64 -5909975582375684509, i64 -6197807050625911256, i64 246124918041], [3 x i64] [i64 -5301595550837604423, i64 -8240704523047420931, i64 25664016206], [3 x i64] [i64 5665349945233068642, i64 -6178862749871699079, i64 78553270512], [3 x i64] [i64 -1372136535958485376, i64 2858642007937891971, i64 240665043179], [3 x i64] [i64 6241525660962062336, i64 -4275413783959230775, i64 235154967293], [3 x i64] [i64 1142860629783085056, i64 6601103619749017720, i64 253768229354], [3 x i64] [i64 -2159216656839081984, i64 4919573414486739494, i64 234357846544], [3 x i64] [i64 9028002014738513920, i64 3401998285294974486, i64 16266690609], [3 x i64] [i64 -2229281815548395520, i64 -7647307817194019383, i64 49184422696], [3 x i64] [i64 -6917529027641081856, i64 -8362957429043798218, i64 40585438612], [3 x i64] [i64 0, i64 6481194517685688896, i64 148546643169], [3 x i64] [i64 0, i64 -3342582316849004544, i64 225351346258], [3 x i64] [i64 0, i64 -8890704799465472000, i64 82818798249], [3 x i64] [i64 0, i64 1376343134954323968, i64 169518033927], [3 x i64] [i64 0, i64 -2764255795112574976, i64 7074611710], [3 x i64] [i64 0, i64 1506454075355430912, i64 254850149393], [3 x i64] [i64 0, i64 1152921504606846976, i64 17081665039], [3 x i64] [i64 0, i64 0, i64 15062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 -6276285226814843609, i64 1035052700, i64 0], [3 x i64] [i64 1797330480103086687, i64 1035052700659761896, i64 0], [3 x i64] [i64 -8114555509212288168, i64 6172559441576707976, i64 56110319], [3 x i64] [i64 7524259485079594225, i64 -3363414335154821624, i64 239334615117], [3 x i64] [i64 62681109059153749, i64 -8433617240160322580, i64 77817668943], [3 x i64] [i64 -4966107621905514535, i64 5817156823499936061, i64 79542812693], [3 x i64] [i64 6948168233012789004, i64 5282692560913632718, i64 21315348703], [3 x i64] [i64 -6431241099667745561, i64 -8194437039483785254, i64 223286375337], [3 x i64] [i64 7343801660689004040, i64 -464862790461881927, i64 169555778677], [3 x i64] [i64 -4776163215068820472, i64 -6757453913976168323, i64 117974799737], [3 x i64] [i64 5605073897566574851, i64 5530668968487988249, i64 121633677689], [3 x i64] [i64 -3058955133204304057, i64 -8362978332887604592, i64 121299818165], [3 x i64] [i64 -881562574031438586, i64 2798423656816843533, i64 181546642036], [3 x i64] [i64 1893743623847493029, i64 7614494481582904797, i64 116151702850], [3 x i64] [i64 -8203245076993281832, i64 -635425573626127921, i64 66412782572], [3 x i64] [i64 5619675836950314139, i64 -6805276661509222583, i64 236965553510], [3 x i64] [i64 -8221874336198036528, i64 -713151048413210971, i64 102631085212], [3 x i64] [i64 2574495974386198538, i64 3689424000190644835, i64 156961340004], [3 x i64] [i64 7825756347302873178, i64 -3480109928192823110, i64 100200004075], [3 x i64] [i64 -6375193969914894729, i64 -4275062132147481507, i64 235811342862], [3 x i64] [i64 7195875213867606691, i64 8130575762882608170, i64 14768248417], [3 x i64] [i64 -175379635302660572, i64 5234550794400656856, i64 97440759395], [3 x i64] [i64 -1480222139756986910, i64 3020576149360486378, i64 99283765567], [3 x i64] [i64 289920862029570129, i64 3038675756589057221, i64 63163745761], [3 x i64] [i64 7804199568098625032, i64 -2976483886588673247, i64 225164726942], [3 x i64] [i64 5758118571242446585, i64 3497929414841828746, i64 158838644485], [3 x i64] [i64 4030788293606375591, i64 -8510903436848536311, i64 5189623133], [3 x i64] [i64 4387716460037196127, i64 3647355485153741471, i64 93538623000], [3 x i64] [i64 -1639237594828265635, i64 766100215038272793, i64 24197723537], [3 x i64] [i64 -1413683469296021899, i64 -2318656599492750865, i64 145041530375], [3 x i64] [i64 -7948325565417381562, i64 -2230112341075820319, i64 7874305373], [3 x i64] [i64 -5208992034965086600, i64 -4686523200929554281, i64 93879105367], [3 x i64] [i64 -709125645404918461, i64 3826276262374222087, i64 87745943068], [3 x i64] [i64 -4900560240460725880, i64 -3508711327870370611, i64 28207422851], [3 x i64] [i64 826778452978976229, i64 -3967484078700042751, i64 131809792377], [3 x i64] [i64 -4718667446719404324, i64 2372033248156102437, i64 121784922257], [3 x i64] [i64 2794860281883592225, i64 792005346826701645, i64 145128588180], [3 x i64] [i64 8680705720425908736, i64 -2167819545777759057, i64 148042934695], [3 x i64] [i64 731520517439488000, i64 -1004227650170611472, i64 167882482266], [3 x i64] [i64 -5325931752940634112, i64 13844184233048446, i64 90945560710], [3 x i64] [i64 2722954908557901824, i64 -4960550203228769259, i64 134000750494], [3 x i64] [i64 6860847004205973504, i64 -6515428894524902879, i64 158731088034], [3 x i64] [i64 6503197861922996224, i64 -1954181868122066211, i64 162646797891], [3 x i64] [i64 -9223372036854775808, i64 -6317756856029170762, i64 67894063588], [3 x i64] [i64 0, i64 -7878620259520413440, i64 228657513714], [3 x i64] [i64 0, i64 -1439160554592010240, i64 242572899139], [3 x i64] [i64 0, i64 143791533903052800, i64 67921982950], [3 x i64] [i64 0, i64 -6048029837916897280, i64 230007794954], [3 x i64] [i64 0, i64 -8786786755790503936, i64 10672135645], [3 x i64] [i64 0, i64 -9034220852505214976, i64 221523667335], [3 x i64] [i64 0, i64 4611686018427387904, i64 135510253906], [3 x i64] [i64 0, i64 0, i64 82250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 -6441087660582313301, i64 15793, i64 0], [3 x i64] [i64 4821130826186787462, i64 15793650827938, i64 0], [3 x i64] [i64 -4068844606643383498, i64 3237900842885170729, i64 856], [3 x i64] [i64 -1871130834084106744, i64 7515893506498066595, i64 88175526956], [3 x i64] [i64 4317827099179284377, i64 7300206309181072546, i64 44407437403], [3 x i64] [i64 1242354770412171254, i64 5999737279837044, i64 91395744977], [3 x i64] [i64 994838588328896609, i64 7556839307242450651, i64 209000325246], [3 x i64] [i64 -1163434211696491159, i64 -5500709032065910973, i64 126409657079], [3 x i64] [i64 124242522249856586, i64 -2560866431356810951, i64 247701805965], [3 x i64] [i64 -6882136059042566007, i64 -7675925725463462048, i64 141861175152], [3 x i64] [i64 -6045715498127897531, i64 -6811328570109999872, i64 112583887232], [3 x i64] [i64 2490725392961465727, i64 6248053924100826098, i64 128630757138], [3 x i64] [i64 1949482237120640915, i64 -1552573270979691618, i64 18338707681], [3 x i64] [i64 -3036241677543351529, i64 6143589029651889899, i64 225915834834], [3 x i64] [i64 -2751824543909630889, i64 -6634656371871665456, i64 210333044628], [3 x i64] [i64 -8121874703537783228, i64 7306705080150829180, i64 148640334557], [3 x i64] [i64 1631866459122189059, i64 1485332570280714274, i64 221396097276], [3 x i64] [i64 172020494461226230, i64 -404141770413920982, i64 252080520039], [3 x i64] [i64 -5712133765800694849, i64 -5049714184452477247, i64 103978091430], [3 x i64] [i64 1467513250829340930, i64 -8498639204096140128, i64 166726254445], [3 x i64] [i64 -4887984645215243619, i64 -7610677832538905084, i64 109539287845], [3 x i64] [i64 7915355143999496434, i64 -116169292475092227, i64 37587424327], [3 x i64] [i64 2876370200608797469, i64 666297360208433062, i64 71993702450], [3 x i64] [i64 343685370404989503, i64 5035352224889324309, i64 50036120052], [3 x i64] [i64 4837266557407634630, i64 1341745796439923765, i64 244272966991], [3 x i64] [i64 -8824152657962390148, i64 6846932182653803785, i64 79072736185], [3 x i64] [i64 -1942960259285330634, i64 6727685027257825533, i64 185371172937], [3 x i64] [i64 5377083431343591334, i64 2168538874806877737, i64 73364708536], [3 x i64] [i64 -1938261702410260021, i64 -751807973032580172, i64 184117556727], [3 x i64] [i64 -7930860514897302588, i64 2163944241059563294, i64 247959244408], [3 x i64] [i64 63492062913405476, i64 6727780864524301558, i64 120117307652], [3 x i64] [i64 -6874824314091751919, i64 8599551977795002615, i64 4364713731], [3 x i64] [i64 2956602334970088581, i64 -3018479265902692525, i64 3466182646], [3 x i64] [i64 -4842007325991701777, i64 2126771385339683557, i64 246836367911], [3 x i64] [i64 -1873203354371400254, i64 -3352427511626578672, i64 39115292507], [3 x i64] [i64 -5826041069108383465, i64 8111300598225956802, i64 91818264540], [3 x i64] [i64 -3797336264619959675, i64 -8965528873145291312, i64 220439714486], [3 x i64] [i64 -7156368825810927184, i64 -1610069945086126908, i64 182513977705], [3 x i64] [i64 -7426424623416677404, i64 7087243115299722740, i64 105912717933], [3 x i64] [i64 8754634933362354176, i64 2343560867338408810, i64 109384200219], [3 x i64] [i64 -5470424623377022976, i64 3431385749090422286, i64 27127044689], [3 x i64] [i64 -999412954082312192, i64 3504545517469224582, i64 81186015794], [3 x i64] [i64 3665184902673858560, i64 3333759805712094227, i64 50189981793], [3 x i64] [i64 -5497065557670756352, i64 3595183476205994775, i64 97180723481], [3 x i64] [i64 72057594037927936, i64 -4255177441139630313, i64 25194895286], [3 x i64] [i64 0, i64 -5529316402351456054, i64 182769326368], [3 x i64] [i64 0, i64 3883793922738316288, i64 32700255157], [3 x i64] [i64 0, i64 7857281689266421760, i64 181210540890], [3 x i64] [i64 0, i64 -2459662422223355904, i64 90425944093], [3 x i64] [i64 0, i64 -1619181917310025728, i64 29866661432], [3 x i64] [i64 0, i64 7012737938513461248, i64 56912223972], [3 x i64] [i64 0, i64 7385903388887613440, i64 228380161285], [3 x i64] [i64 0, i64 0, i64 5400390625], [3 x i64] [i64 0, i64 0, i64 225000000000], [3 x i64] [i64 -9033584337933474164, i64 240991986, i64 0], [3 x i64] [i64 -4167580590819553599, i64 240991986510288411, i64 0], [3 x i64] [i64 8693044629541194274, i64 -4310956059866775429, i64 13064201], [3 x i64] [i64 -6583633820449329118, i64 -5162421155541957171, i64 9766302603], [3 x i64] [i64 8319293368489531245, i64 7264587765474046287, i64 139720144588], [3 x i64] [i64 3376307525676489265, i64 -2270261853931182875, i64 204393814091], [3 x i64] [i64 -5241081818949639093, i64 5401983818872095469, i64 75876928858], [3 x i64] [i64 5276250334231686323, i64 -7237886626858501695, i64 90292842129], [3 x i64] [i64 -4656545552786806564, i64 -4652054065428515977, i64 145607633379], [3 x i64] [i64 -4251208823558555389, i64 -3926961332716248545, i64 227747811643], [3 x i64] [i64 -2021515277282547581, i64 -7560885486664762493, i64 59787118999], [3 x i64] [i64 4295900841296269186, i64 8710500938899914621, i64 151590123576], [3 x i64] [i64 4533952595483946442, i64 1284182587483102819, i64 56472197202], [3 x i64] [i64 -5561706054336104432, i64 -8100669591578049586, i64 82069615677], [3 x i64] [i64 -6306007833221719706, i64 -9016939387454305042, i64 61560861821], [3 x i64] [i64 6927124077155322074, i64 6412022633845121254, i64 125511190736], [3 x i64] [i64 -5968955731301731726, i64 8892351297529018260, i64 208347596443], [3 x i64] [i64 7980854329409711087, i64 -4348583967726491019, i64 155482055329], [3 x i64] [i64 2062671021810827996, i64 -4652911043970077276, i64 161764262790], [3 x i64] [i64 2739521363598172769, i64 -2079090307712574572, i64 134747765186], [3 x i64] [i64 -5549158387116085978, i64 -7761955730375779274, i64 194887292288], [3 x i64] [i64 1127632646629044686, i64 -5174062855004406271, i64 128579223536], [3 x i64] [i64 4833775019274666364, i64 -7353175458211722368, i64 240719513490], [3 x i64] [i64 -2579081400769702360, i64 -5958523308571793492, i64 146601383559], [3 x i64] [i64 2092350330982953557, i64 3727114642519696453, i64 135676987804], [3 x i64] [i64 -5116681773867058024, i64 -6896878698014494102, i64 156202047289], [3 x i64] [i64 4479193352178519263, i64 -7153934918800768387, i64 57626119456], [3 x i64] [i64 3149393938889064983, i64 -722839211872240618, i64 32612184410], [3 x i64] [i64 -8710364169638930849, i64 -3569069685522400741, i64 90960814807], [3 x i64] [i64 3816238703055069186, i64 -6267782123603817308, i64 215806520344], [3 x i64] [i64 -6847828134910889641, i64 4540604068069253114, i64 24660222850], [3 x i64] [i64 -625110809102995973, i64 -4614265351556191748, i64 130246146639], [3 x i64] [i64 2514623558764574316, i64 1308046668730371491, i64 79749860174], [3 x i64] [i64 4976730480406253215, i64 -46213050164794816, i64 78070909351], [3 x i64] [i64 -1170180376517939979, i64 -8656920615088085077, i64 167997494785], [3 x i64] [i64 -5922009977768552802, i64 1924870562610267306, i64 1530707393], [3 x i64] [i64 -3115192764779196452, i64 5290016144582400923, i64 193104347442], [3 x i64] [i64 -3029628492583607800, i64 -3283860410535492539, i64 50286772349], [3 x i64] [i64 6010750237807115593, i64 8078086116520046390, i64 125821981570], [3 x i64] [i64 5624630987553628432, i64 -2715336741536360993, i64 130437913925], [3 x i64] [i64 -3564895829871910912, i64 5346389182763011056, i64 69852801300], [3 x i64] [i64 -3165130186828021760, i64 6368422217216252401, i64 20289828338], [3 x i64] [i64 -4388841715436355584, i64 2961453088119116188, i64 242345232860], [3 x i64] [i64 -2371425579275649024, i64 -7514602382099381091, i64 220160540693], [3 x i64] [i64 -4554828073131835392, i64 -7412727882347769063, i64 21592632588], [3 x i64] [i64 7205759403792793600, i64 5455325785621453219, i64 12598155216], [3 x i64] [i64 0, i64 7735615202566149352, i64 208295733803], [3 x i64] [i64 0, i64 7502396497775759360, i64 43419348540], [3 x i64] [i64 0, i64 1601286435751591936, i64 60406705729], [3 x i64] [i64 0, i64 -6997360915137953792, i64 65086805911], [3 x i64] [i64 0, i64 -5402799478019194880, i64 151620672304], [3 x i64] [i64 0, i64 7773494431818186752, i64 48707113653], [3 x i64] [i64 0, i64 -8502796096475496448, i64 181421401977], [3 x i64] [i64 0, i64 0, i64 121539062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 4535831408134330609, i64 3677, i64 0], [3 x i64] [i64 6204770794376564579, i64 3677245887913, i64 0], [3 x i64] [i64 -4576931950957664149, i64 6343817245135589714, i64 199], [3 x i64] [i64 -4193514661315084066, i64 -897420998049035531, i64 199343899021], [3 x i64] [i64 -5670186463493506284, i64 3948641822109421754, i64 141951350710], [3 x i64] [i64 -1953103345030897556, i64 1750739713693534543, i64 182214056302], [3 x i64] [i64 -9012345776883718465, i64 962163898128633415, i64 110094907790], [3 x i64] [i64 8773374058285327850, i64 7967320249386531212, i64 142052159009], [3 x i64] [i64 -5514728796961522249, i64 3018466665533383224, i64 33431909296], [3 x i64] [i64 -2152785490181796407, i64 -3369878341854606144, i64 176163631405], [3 x i64] [i64 -4934850137566423668, i64 691187172844604400, i64 45817318529], [3 x i64] [i64 -36807671704325180, i64 -5172251260338559275, i64 129037469331], [3 x i64] [i64 2189663026458466887, i64 6364168818499152300, i64 147719611697], [3 x i64] [i64 -8949018799461396952, i64 -847363286307637458, i64 49345002282], [3 x i64] [i64 -3679818592581759491, i64 3782323149461692814, i64 42954064344], [3 x i64] [i64 6982373971809635814, i64 -3976580631267314150, i64 216205040148], [3 x i64] [i64 8616702383006884794, i64 476109872130437939, i64 20784429132], [3 x i64] [i64 3059473300040871066, i64 -2116195229036195916, i64 76025809967], [3 x i64] [i64 -1322900916678056058, i64 -4357585112245812053, i64 47885280826], [3 x i64] [i64 -7236116899498925092, i64 -5061233280634752811, i64 58763774837], [3 x i64] [i64 -2578676935083623024, i64 1549401308746959012, i64 117725629994], [3 x i64] [i64 4467869511636937589, i64 4607384943843027435, i64 42083993213], [3 x i64] [i64 -8394635947865209850, i64 5157353797716093483, i64 125249766838], [3 x i64] [i64 7470588003218451534, i64 -7599915291038001487, i64 182279580709], [3 x i64] [i64 2613527085490786280, i64 -8530886722890420085, i64 37588007766], [3 x i64] [i64 3632919450036549616, i64 1673544973504317923, i64 86537539704], [3 x i64] [i64 179367907231218916, i64 -3665757782086765922, i64 120090723054], [3 x i64] [i64 -4893675889153676992, i64 8168111319515466401, i64 238801278872], [3 x i64] [i64 8798774862365584481, i64 -2100983685849817134, i64 152442794201], [3 x i64] [i64 910911255817064881, i64 3177475373321281805, i64 217886105446], [3 x i64] [i64 2304331144765093813, i64 2558676822419554038, i64 102172251285], [3 x i64] [i64 -6197807050625911256, i64 8813474062662382873, i64 149138706148], [3 x i64] [i64 -8240704523047420931, i64 5426294560236228430, i64 228477779386], [3 x i64] [i64 -6178862749871699079, i64 -8527566599581218576, i64 186294160017], [3 x i64] [i64 2858642007937891971, i64 6197383943089627371, i64 145537719688], [3 x i64] [i64 -4275413783959230775, i64 -4773504758842127619, i64 136335960856], [3 x i64] [i64 6601103619749017720, i64 -9137159974740827670, i64 24741227788], [3 x i64] [i64 4919573414486739494, i64 4647101757759615504, i64 12504673565], [3 x i64] [i64 3401998285294974486, i64 1405809295505096753, i64 29251919891], [3 x i64] [i64 -7647307817194019383, i64 -7114039994135692504, i64 19076209074], [3 x i64] [i64 -8362957429043798218, i64 2960072434514044308, i64 178614347119], [3 x i64] [i64 6481194517685688896, i64 3887266602785432801, i64 111160465848], [3 x i64] [i64 -3342582316849004544, i64 -3901197989021702062, i64 184210729144], [3 x i64] [i64 -8890704799465472000, i64 4617763804182385321, i64 184788515633], [3 x i64] [i64 1376343134954323968, i64 7857823815580249095, i64 49250329477], [3 x i64] [i64 -2764255795112574976, i64 -7507417337161186818, i64 133425973482], [3 x i64] [i64 1506454075355430912, i64 -6184731627142599663, i64 234593022090], [3 x i64] [i64 1152921504606846976, i64 -5891719735021828593, i64 138664725026], [3 x i64] [i64 0, i64 3332969632922829472, i64 34680609233], [3 x i64] [i64 0, i64 -2911683930349223936, i64 209180680645], [3 x i64] [i64 0, i64 -2652421145722093568, i64 197842157297], [3 x i64] [i64 0, i64 -7875269759275630592, i64 241856211961], [3 x i64] [i64 0, i64 -1767229646161575936, i64 249573080770], [3 x i64] [i64 0, i64 -1521090774144385024, i64 194904198288], [3 x i64] [i64 0, i64 -1729382256910270464, i64 144917541503], [3 x i64] [i64 0, i64 0, i64 127906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 6172559441576707976, i64 56110319, i64 0], [3 x i64] [i64 -3363414335154821624, i64 56110319334615117, i64 0], [3 x i64] [i64 -8433617240160322580, i64 -9111358689681644209, i64 3041746], [3 x i64] [i64 5817156823499936061, i64 -5208915667514753003, i64 210506072255], [3 x i64] [i64 5282692560913632718, i64 -2779257205873022753, i64 191717624115], [3 x i64] [i64 -8194437039483785254, i64 -464419030116617303, i64 51849336164], [3 x i64] [i64 -464862790461881927, i64 -1287626446792172427, i64 100974823793], [3 x i64] [i64 -6757453913976168323, i64 8336208968408929657, i64 113930197630], [3 x i64] [i64 5530668968487988249, i64 -5679653500330401415, i64 126451906793], [3 x i64] [i64 -8362978332887604592, i64 -3710674071297304907, i64 233692105366], [3 x i64] [i64 2798423656816843533, i64 -8749447098364990860, i64 150798843955], [3 x i64] [i64 7614494481582904797, i64 7291706381199103298, i64 51525691522], [3 x i64] [i64 -635425573626127921, i64 -348197475928726548, i64 130395284194], [3 x i64] [i64 -6805276661509222583, i64 132913902678533478, i64 226981124177], [3 x i64] [i64 -713151048413210971, i64 1879347741692007580, i64 81007205277], [3 x i64] [i64 3689424000190644835, i64 4056624629214083684, i64 157101879645], [3 x i64] [i64 -3480109928192823110, i64 -3733516381666756117, i64 93219910061], [3 x i64] [i64 -4275062132147481507, i64 7366415124022528526, i64 173797605671], [3 x i64] [i64 8130575762882608170, i64 825770353378039393, i64 39399334164], [3 x i64] [i64 5234550794400656856, i64 -8202720129314193821, i64 20044765100], [3 x i64] [i64 3020576149360486378, i64 -4144085778996000449, i64 172555329650], [3 x i64] [i64 3038675756589057221, i64 -4200090907502688799, i64 114775348659], [3 x i64] [i64 -2976483886588673247, i64 -6042257815575260514, i64 179772312615], [3 x i64] [i64 3497929414841828746, i64 8887442218637942533, i64 39672448547], [3 x i64] [i64 -8510903436848536311, i64 1186724038081863005, i64 35481789208], [3 x i64] [i64 3647355485153741471, i64 211331772484951576, i64 24064332439], [3 x i64] [i64 766100215038272793, i64 6311919513247413649, i64 151011456318], [3 x i64] [i64 -2318656599492750865, i64 8131780018703965703, i64 62342169842], [3 x i64] [i64 -2230112341075820319, i64 2262544347226725725, i64 242440824678], [3 x i64] [i64 -4686523200929554281, i64 -3128555323829029033, i64 102122652774], [3 x i64] [i64 3826276262374222087, i64 1073117094162650652, i64 102830400676], [3 x i64] [i64 -3508711327870370611, i64 4447950380665871747, i64 164058173794], [3 x i64] [i64 -3967484078700042751, i64 5373227185066463609, i64 98241123873], [3 x i64] [i64 2372033248156102437, i64 6739731406934274193, i64 33291283229], [3 x i64] [i64 792005346826701645, i64 -6117931456708312172, i64 29365361571], [3 x i64] [i64 -2167819545777759057, i64 3246111484407310759, i64 163668346271], [3 x i64] [i64 -1004227650170611472, i64 3250825415176839770, i64 159175972056], [3 x i64] [i64 13844184233048446, i64 -2300473533708689274, i64 216176227598], [3 x i64] [i64 -4960550203228769259, i64 -2759970698283634786, i64 14875291079], [3 x i64] [i64 -6515428894524902879, i64 -6525952167915671390, i64 199850381688], [3 x i64] [i64 -1954181868122066211, i64 1853290561644080707, i64 120646227424], [3 x i64] [i64 -6317756856029170762, i64 -6289054932203392540, i64 224100467082], [3 x i64] [i64 -7878620259520413440, i64 -346425234846989070, i64 138659069648], [3 x i64] [i64 -1439160554592010240, i64 7171257882533475139, i64 208981220250], [3 x i64] [i64 143791533903052800, i64 -3969193200694512154, i64 154388754668], [3 x i64] [i64 -6048029837916897280, i64 8109481182495403274, i64 236784829605], [3 x i64] [i64 -8786786755790503936, i64 -3881348354371887651, i64 165439615855], [3 x i64] [i64 -9034220852505214976, i64 1860318978161305991, i64 111789591684], [3 x i64] [i64 4611686018427387904, i64 -2178097798557965998, i64 132100848093], [3 x i64] [i64 0, i64 -4687724734874032512, i64 221881925081], [3 x i64] [i64 0, i64 -1442960897698889728, i64 217745877932], [3 x i64] [i64 0, i64 -89254533401673728, i64 172921776932], [3 x i64] [i64 0, i64 905481790074912768, i64 36995161502], [3 x i64] [i64 0, i64 3638882110636294144, i64 158049086266], [3 x i64] [i64 0, i64 9011702854368362496, i64 58197264194], [3 x i64] [i64 0, i64 -6917529027641081856, i64 66488525390], [3 x i64] [i64 0, i64 0, i64 78625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 3237900842885170729, i64 856, i64 0], [3 x i64] [i64 7515893506498066595, i64 856175526956, i64 0], [3 x i64] [i64 7300206309181072546, i64 7625299565768063067, i64 46], [3 x i64] [i64 5999737279837044, i64 -4557722304644356911, i64 46413368317], [3 x i64] [i64 7556839307242450651, i64 -3948573381396537218, i64 253752925378], [3 x i64] [i64 -5500709032065910973, i64 1541631360972245751, i64 194785947408], [3 x i64] [i64 -2560866431356810951, i64 -8542785190788752499, i64 16083572003], [3 x i64] [i64 -7675925725463462048, i64 -2702595525921489040, i64 35536894686], [3 x i64] [i64 -6811328570109999872, i64 -510682272387839616, i64 222853492002], [3 x i64] [i64 6248053924100826098, i64 -8460349995385121006, i64 34972315858], [3 x i64] [i64 -1552573270979691618, i64 -4597182825606121247, i64 210541363507], [3 x i64] [i64 6143589029651889899, i64 -6304365265755696686, i64 51750786219], [3 x i64] [i64 -6634656371871665456, i64 2513847703931031444, i64 171658239674], [3 x i64] [i64 7306705080150829180, i64 1752183758129038045, i64 186136275957], [3 x i64] [i64 1485332570280714274, i64 -2621910731488995076, i64 245094986071], [3 x i64] [i64 -404141770413920982, i64 8168747198299470695, i64 87857865934], [3 x i64] [i64 -5049714184452477247, i64 -1031944233560194138, i64 206442828672], [3 x i64] [i64 -8498639204096140128, i64 83147520704167789, i64 128944058191], [3 x i64] [i64 -7610677832538905084, i64 2383542703041471269, i64 79004507436], [3 x i64] [i64 -116169292475092227, i64 -2905791348160293817, i64 44129212108], [3 x i64] [i64 666297360208433062, i64 6949835416232048690, i64 204842476735], [3 x i64] [i64 5035352224889324309, i64 -3047875136124184076, i64 191376751332], [3 x i64] [i64 1341745796439923765, i64 -3735828088441295537, i64 228834774357], [3 x i64] [i64 6846932182653803785, i64 -8781039236836215879, i64 85797480353], [3 x i64] [i64 6727685027257825533, i64 2528789298740305993, i64 161523978909], [3 x i64] [i64 2168538874806877737, i64 -7883829398021825352, i64 157137085942], [3 x i64] [i64 -751807973032580172, i64 -775085773612714505, i64 246572616751], [3 x i64] [i64 2163944241059563294, i64 356471401631698552, i64 47957982516], [3 x i64] [i64 6727780864524301558, i64 7450677157218003204, i64 52019324353], [3 x i64] [i64 8599551977795002615, i64 317174560787152643, i64 193403902018], [3 x i64] [i64 -3018479265902692525, i64 7251937674440720374, i64 66017194067], [3 x i64] [i64 2126771385339683557, i64 1252631516699038247, i64 83393128329], [3 x i64] [i64 -3352427511626578672, i64 -7628734304848707749, i64 137067905290], [3 x i64] [i64 8111300598225956802, i64 -6116629878759389220, i64 10586445484], [3 x i64] [i64 -8965528873145291312, i64 -2620062435448382794, i64 172668416829], [3 x i64] [i64 -1610069945086126908, i64 -4206593995210339991, i64 61857966130], [3 x i64] [i64 7087243115299722740, i64 -7721371957467426195, i64 50771960082], [3 x i64] [i64 2343560867338408810, i64 8434925524647833627, i64 18581423587], [3 x i64] [i64 3431385749090422286, i64 -1312841405189203375, i64 227457258228], [3 x i64] [i64 3504545517469224582, i64 -3352748025728185806, i64 244928830724], [3 x i64] [i64 3333759805712094227, i64 6187974166976813153, i64 4818247165], [3 x i64] [i64 3595183476205994775, i64 -4500599365989291751, i64 253335450751], [3 x i64] [i64 -4255177441139630313, i64 9138079832881862582, i64 127756022019], [3 x i64] [i64 -5529316402351456054, i64 6600697628576225568, i64 3495376300], [3 x i64] [i64 3883793922738316288, i64 8137099536646556597, i64 172357824535], [3 x i64] [i64 7857281689266421760, i64 -4276888530255647910, i64 23441113049], [3 x i64] [i64 -2459662422223355904, i64 3706403268650100765, i64 217768149408], [3 x i64] [i64 -1619181917310025728, i64 -3709811806831569352, i64 160200924523], [3 x i64] [i64 7012737938513461248, i64 -441948948570595612, i64 107798890698], [3 x i64] [i64 7385903388887613440, i64 9068489270661002501, i64 202976041899], [3 x i64] [i64 0, i64 7758835715193269217, i64 171491603788], [3 x i64] [i64 0, i64 -1502796262574290432, i64 76420607326], [3 x i64] [i64 0, i64 6745843108403216384, i64 94918533251], [3 x i64] [i64 0, i64 -6108514419640107008, i64 131365692887], [3 x i64] [i64 0, i64 -4088568004026040320, i64 215668856769], [3 x i64] [i64 0, i64 7083775185760813056, i64 193778358284], [3 x i64] [i64 0, i64 5350276357316149248, i64 12384012222], [3 x i64] [i64 0, i64 -9223372036854775808, i64 190290039062], [3 x i64] [i64 0, i64 0, i64 22500000000], [3 x i64] [i64 -4310956059866775429, i64 13064201, i64 0], [3 x i64] [i64 -5162421155541957171, i64 13064201766302603, i64 0], [3 x i64] [i64 7264587765474046287, i64 -3747627385248926004, i64 708211], [3 x i64] [i64 -2270261853931182875, i64 6684126021499623499, i64 115796840712], [3 x i64] [i64 5401983818872095469, i64 -5832137994017043110, i64 8362347197], [3 x i64] [i64 -7237886626858501695, i64 -3088473797026550127, i64 189683839165], [3 x i64] [i64 -4652054065428515977, i64 -369617882756142621, i64 189832573499], [3 x i64] [i64 -3926961332716248545, i64 7864121581925945659, i64 59979962974], [3 x i64] [i64 -7560885486664762493, i64 3518026639210514839, i64 94426314885], [3 x i64] [i64 8710500938899914621, i64 4698310163811252280, i64 133190712606], [3 x i64] [i64 1284182587483102819, i64 6101155398200416338, i64 30254695904], [3 x i64] [i64 -8100669591578049586, i64 -2397565493349518275, i64 224330744296], [3 x i64] [i64 -9016939387454305042, i64 3167464649127375997, i64 232870027714], [3 x i64] [i64 6412022633845121254, i64 -5667820138228561712, i64 194171708602], [3 x i64] [i64 8892351297529018260, i64 -6571190161096571237, i64 186692746854], [3 x i64] [i64 -4348583967726491019, i64 -7817983224357854559, i64 102643775067], [3 x i64] [i64 -4652911043970077276, i64 3408944711673234310, i64 91576186280], [3 x i64] [i64 -2079090307712574572, i64 2102091496050506178, i64 168184799263], [3 x i64] [i64 -7761955730375779274, i64 6254611118630245760, i64 31113954608], [3 x i64] [i64 -5174062855004406271, i64 2647941151989776368, i64 48339063148], [3 x i64] [i64 -7353175458211722368, i64 8855437735410157458, i64 108143545177], [3 x i64] [i64 -5958523308571793492, i64 -8262473470577371513, i64 89480054241], [3 x i64] [i64 3727114642519696453, i64 -6367660911173924452, i64 225552090415], [3 x i64] [i64 -6896878698014494102, i64 5952952868716156729, i64 47654808410], [3 x i64] [i64 -7153934918800768387, i64 -6487837035893699296, i64 90322710221], [3 x i64] [i64 -722839211872240618, i64 -8345181936387853990, i64 205648293649], [3 x i64] [i64 -3569069685522400741, i64 -4813216662430293289, i64 17547606780], [3 x i64] [i64 -6267782123603817308, i64 -1891116680207782888, i64 252739075001], [3 x i64] [i64 4540604068069253114, i64 6359650463500280706, i64 185897482359], [3 x i64] [i64 -4614265351556191748, i64 8093923611102181967, i64 119344757342], [3 x i64] [i64 1308046668730371491, i64 2848827352928635726, i64 94438772478], [3 x i64] [i64 -46213050164794816, i64 4686723431961561511, i64 254154435240], [3 x i64] [i64 -8656920615088085077, i64 6245554925867652609, i64 168254067786], [3 x i64] [i64 1924870562610267306, i64 -919337252917035583, i64 74338572210], [3 x i64] [i64 5290016144582400923, i64 -6326777239055859406, i64 178950162627], [3 x i64] [i64 -3283860410535492539, i64 -6840241227831623555, i64 195657024718], [3 x i64] [i64 8078086116520046390, i64 424311496652297090, i64 206629189780], [3 x i64] [i64 -2715336741536360993, i64 5977664048034127173, i64 148023001972], [3 x i64] [i64 5346389182763011056, i64 6702712461535947028, i64 116324049817], [3 x i64] [i64 6368422217216252401, i64 -7062394219654531598, i64 153363354770], [3 x i64] [i64 2961453088119116188, i64 3782955013294836188, i64 146617146842], [3 x i64] [i64 -7514602382099381091, i64 3531805968821207061, i64 218205074402], [3 x i64] [i64 -7412727882347769063, i64 3867566898657193228, i64 226191459585], [3 x i64] [i64 5455325785621453219, i64 -5758009436284479536, i64 1209661221], [3 x i64] [i64 7735615202566149352, i64 -10761309254931925, i64 37687857682], [3 x i64] [i64 7502396497775759360, i64 4728836163964677692, i64 18999416628], [3 x i64] [i64 1601286435751591936, i64 2120012917348838977, i64 52256350722], [3 x i64] [i64 -6997360915137953792, i64 -8589778607884871785, i64 2114926130], [3 x i64] [i64 -5402799478019194880, i64 -7229546402648302800, i64 50534347168], [3 x i64] [i64 7773494431818186752, i64 3840562972677739189, i64 160608085504], [3 x i64] [i64 -8502796096475496448, i64 -1342377094784292999, i64 208197335], [3 x i64] [i64 0, i64 -2268866853867558172, i64 215927229591], [3 x i64] [i64 0, i64 7338522384267208704, i64 151877004481], [3 x i64] [i64 0, i64 -7511503615097307136, i64 193397822095], [3 x i64] [i64 0, i64 1732868046462124032, i64 143592800573], [3 x i64] [i64 0, i64 557965042578882560, i64 61093938965], [3 x i64] [i64 0, i64 -7992059751234011136, i64 21030247345], [3 x i64] [i64 0, i64 -4539628424389459968, i64 177566749572], [3 x i64] [i64 0, i64 0, i64 132753906250], [3 x i64] [i64 0, i64 0, i64 74000000000], [3 x i64] [i64 6343817245135589714, i64 199, i64 0], [3 x i64] [i64 -897420998049035531, i64 199343899021, i64 0], [3 x i64] [i64 3948641822109421754, i64 -3570285788853717066, i64 10], [3 x i64] [i64 1750739713693534543, i64 -7996039146727286418, i64 10806454419], [3 x i64] [i64 962163898128633415, i64 5385653213018257806, i64 147566533849], [3 x i64] [i64 7967320249386531212, i64 -5711174403829404127, i64 217291956845], [3 x i64] [i64 3018466665533383224, i64 3619762560577729456, i64 109690396615], [3 x i64] [i64 -3369878341854606144, i64 -7323295947085467347, i64 199196227721], [3 x i64] [i64 691187172844604400, i64 4072715118852885633, i64 137603003331], [3 x i64] [i64 -5172251260338559275, i64 -207656842288724333, i64 195220782328], [3 x i64] [i64 6364168818499152300, i64 423431461216085297, i64 248988742900], [3 x i64] [i64 -847363286307637458, i64 -9085767357189391574, i64 244022954265], [3 x i64] [i64 3782323149461692814, i64 -6790816956446342696, i64 25507459564], [3 x i64] [i64 -3976580631267314150, i64 2646622721938364948, i64 236631869075], [3 x i64] [i64 476109872130437939, i64 4496462484548171852, i64 147143473705], [3 x i64] [i64 -2116195229036195916, i64 -5306485553906201553, i64 41243753719], [3 x i64] [i64 -4357585112245812053, i64 -5356979740388923846, i64 247712334841], [3 x i64] [i64 -5061233280634752811, i64 6926286827289840501, i64 249709597546], [3 x i64] [i64 1549401308746959012, i64 4985580225290866218, i64 106375474761], [3 x i64] [i64 4607384943843027435, i64 -7967953236349761923, i64 73270268845], [3 x i64] [i64 5157353797716093483, i64 -8405552106253859402, i64 173568056389], [3 x i64] [i64 -7599915291038001487, i64 5035461258013813797, i64 69544334107], [3 x i64] [i64 -8530886722890420085, i64 -4237984412150301866, i64 27272972901], [3 x i64] [i64 1673544973504317923, i64 -6099471910467792776, i64 101770258404], [3 x i64] [i64 -3665757782086765922, i64 3372534174410277614, i64 228669346965], [3 x i64] [i64 8168111319515466401, i64 -1220039886434838632, i64 149182825443], [3 x i64] [i64 -2100983685849817134, i64 4250480179449852121, i64 227933861505], [3 x i64] [i64 3177475373321281805, i64 4303723537755414374, i64 129230418992], [3 x i64] [i64 2558676822419554038, i64 8680503847344854165, i64 48233305320], [3 x i64] [i64 8813474062662382873, i64 8817608623911079652, i64 232470571056], [3 x i64] [i64 5426294560236228430, i64 5692030448698539450, i64 48478003521], [3 x i64] [i64 -8527566599581218576, i64 -1537907759022781807, i64 65308565588], [3 x i64] [i64 6197383943089627371, i64 6073762347067727240, i64 84916629853], [3 x i64] [i64 -4773504758842127619, i64 -7515677381124445416, i64 93329259316], [3 x i64] [i64 -9137159974740827670, i64 -3980152709648012020, i64 52592574312], [3 x i64] [i64 4647101757759615504, i64 4958077340960173341, i64 104784235489], [3 x i64] [i64 1405809295505096753, i64 4076890037156765715, i64 225268777911], [3 x i64] [i64 -7114039994135692504, i64 -4362770927100372558, i64 183221008651], [3 x i64] [i64 2960072434514044308, i64 2565183738039805295, i64 11763493714], [3 x i64] [i64 3887266602785432801, i64 1482420938751351224, i64 82139058889], [3 x i64] [i64 -3901197989021702062, i64 2151089495335413944, i64 201080362200], [3 x i64] [i64 4617763804182385321, i64 3738604531753220913, i64 216116610795], [3 x i64] [i64 7857823815580249095, i64 -4251057558873545851, i64 235202670157], [3 x i64] [i64 -7507417337161186818, i64 -637910157477754646, i64 77769549707], [3 x i64] [i64 -6184731627142599663, i64 1302384553035657354, i64 139965418821], [3 x i64] [i64 -5891719735021828593, i64 1672033517974833698, i64 69070602408], [3 x i64] [i64 3332969632922829472, i64 -6772818540781889071, i64 168090641118], [3 x i64] [i64 -2911683930349223936, i64 3905334232240480709, i64 222632844771], [3 x i64] [i64 -2652421145722093568, i64 -1035656753442078991, i64 227211708592], [3 x i64] [i64 -7875269759275630592, i64 -1873438842645844999, i64 176943856934], [3 x i64] [i64 -1767229646161575936, i64 -2965640837672403262, i64 38898440676], [3 x i64] [i64 -1521090774144385024, i64 907440704754420880, i64 228839232288], [3 x i64] [i64 -1729382256910270464, i64 3224970785139077759, i64 32049192459], [3 x i64] [i64 0, i64 -7885917563974943472, i64 11174826016], [3 x i64] [i64 0, i64 4700940027512659968, i64 32572503552], [3 x i64] [i64 0, i64 -8713049390207467520, i64 254838469], [3 x i64] [i64 0, i64 1995535635724632064, i64 197527664646], [3 x i64] [i64 0, i64 -7816910847464177664, i64 6108178203], [3 x i64] [i64 0, i64 -2717359425164673024, i64 27576244413], [3 x i64] [i64 0, i64 7205759403792793600, i64 189852691650], [3 x i64] [i64 0, i64 0, i64 194390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 -9111358689681644209, i64 3041746, i64 0], [3 x i64] [i64 -5208915667514753003, i64 3041746506072255, i64 0], [3 x i64] [i64 -2779257205873022753, i64 7535526066623007027, i64 164893], [3 x i64] [i64 -464419030116617303, i64 -7144597155300240028, i64 29408501686], [3 x i64] [i64 -1287626446792172427, i64 2480833299122194801, i64 182612690612], [3 x i64] [i64 8336208968408929657, i64 -6933517868120221058, i64 180134486242], [3 x i64] [i64 -5679653500330401415, i64 4073957068281936105, i64 226624133243], [3 x i64] [i64 -3710674071297304907, i64 3729887061093812886, i64 123220849655], [3 x i64] [i64 -8749447098364990860, i64 -4829832293970100173, i64 247202197582], [3 x i64] [i64 7291706381199103298, i64 -5407690791513773950, i64 78738174266], [3 x i64] [i64 -348197475928726548, i64 -3955987960499133726, i64 58706848494], [3 x i64] [i64 132913902678533478, i64 -1014257960731994031, i64 238785545462], [3 x i64] [i64 1879347741692007580, i64 -4137923248365511779, i64 246945016965], [3 x i64] [i64 4056624629214083684, i64 4190949538817536349, i64 133775682731], [3 x i64] [i64 -3733516381666756117, i64 -4830191570898587219, i64 171227191829], [3 x i64] [i64 7366415124022528526, i64 4898145803694965031, i64 21738154790], [3 x i64] [i64 825770353378039393, i64 1399036321001644308, i64 38265529016], [3 x i64] [i64 -8202720129314193821, i64 -1276412945465813076, i64 184075841910], [3 x i64] [i64 -4144085778996000449, i64 -7805422685504184206, i64 118930805515], [3 x i64] [i64 -4200090907502688799, i64 6648873641312572851, i64 11576867188], [3 x i64] [i64 -6042257815575260514, i64 5988456964560374823, i64 116360436162], [3 x i64] [i64 8887442218637942533, i64 -8474150315361204701, i64 194324634902], [3 x i64] [i64 1186724038081863005, i64 -1737075151836732648, i64 22540615390], [3 x i64] [i64 211331772484951576, i64 6094829131503407767, i64 222905832967], [3 x i64] [i64 6311919513247413649, i64 4892016478899926334, i64 7330401349], [3 x i64] [i64 8131780018703965703, i64 -5295886829630520078, i64 69265196744], [3 x i64] [i64 2262544347226725725, i64 -5462800678390765722, i64 200712909399], [3 x i64] [i64 -3128555323829029033, i64 -3105099489094794138, i64 87703860981], [3 x i64] [i64 1073117094162650652, i64 7507635124856644772, i64 245831672219], [3 x i64] [i64 4447950380665871747, i64 -6827088706625007262, i64 155406989715], [3 x i64] [i64 5373227185066463609, i64 -6893627121230768607, i64 147629902779], [3 x i64] [i64 6739731406934274193, i64 -1054594059476358371, i64 187626295724], [3 x i64] [i64 -6117931456708312172, i64 8877887560294980515, i64 172942830341], [3 x i64] [i64 3246111484407310759, i64 -42563453793942113, i64 5481271248], [3 x i64] [i64 3250825415176839770, i64 -8367330978421369640, i64 208997692630], [3 x i64] [i64 -2300473533708689274, i64 -4343941107170446066, i64 214546406078], [3 x i64] [i64 -2759970698283634786, i64 -5112778047573660217, i64 190764514480], [3 x i64] [i64 -6525952167915671390, i64 -6101775403536035464, i64 176722835746], [3 x i64] [i64 1853290561644080707, i64 -7869736253904824864, i64 34669222092], [3 x i64] [i64 -6289054932203392540, i64 -3109702719678463606, i64 204573380742], [3 x i64] [i64 -346425234846989070, i64 -4113136788094878000, i64 134831422677], [3 x i64] [i64 7171257882533475139, i64 -1275146510489855078, i64 213777026407], [3 x i64] [i64 -3969193200694512154, i64 2849642930482147564, i64 103930874169], [3 x i64] [i64 8109481182495403274, i64 -3655495649730116443, i64 57154479452], [3 x i64] [i64 -3881348354371887651, i64 -4564372709133241489, i64 92801835183], [3 x i64] [i64 1860318978161305991, i64 -6710748264768222076, i64 175752564859], [3 x i64] [i64 -2178097798557965998, i64 -7069747399370278435, i64 123636209607], [3 x i64] [i64 -4687724734874032512, i64 -8597106016541508135, i64 199616748225], [3 x i64] [i64 -1442960897698889728, i64 -205223844430189652, i64 193533949948], [3 x i64] [i64 -89254533401673728, i64 1865852368526961444, i64 252988874793], [3 x i64] [i64 905481790074912768, i64 -7845256704433103458, i64 41101148059], [3 x i64] [i64 3638882110636294144, i64 -2446812763396789446, i64 155574707781], [3 x i64] [i64 9011702854368362496, i64 5773775867713013570, i64 69867358014], [3 x i64] [i64 -6917529027641081856, i64 -720504209727004082, i64 62312997016], [3 x i64] [i64 0, i64 -8735427377821234624, i64 152960941388], [3 x i64] [i64 0, i64 -574741452985827328, i64 76526451532], [3 x i64] [i64 0, i64 7429694208660733952, i64 76968843203], [3 x i64] [i64 0, i64 1782821038871019520, i64 195402764530], [3 x i64] [i64 0, i64 3225250234313474048, i64 242096646922], [3 x i64] [i64 0, i64 -8437493901878624256, i64 10174841165], [3 x i64] [i64 0, i64 1152921504606846976, i64 77542602539], [3 x i64] [i64 0, i64 0, i64 43062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 7625299565768063067, i64 46, i64 0], [3 x i64] [i64 -4557722304644356911, i64 46413368317, i64 0], [3 x i64] [i64 -3948573381396537218, i64 -8926863903375729470, i64 2], [3 x i64] [i64 1541631360972245751, i64 2285186318012886800, i64 2516073738], [3 x i64] [i64 -8542785190788752499, i64 -8740323122307279581, i64 10123880198], [3 x i64] [i64 -2702595525921489040, i64 2369632031840402142, i64 6526186134], [3 x i64] [i64 -510682272387839616, i64 -2847620175730152158, i64 150128458009], [3 x i64] [i64 -8460349995385121006, i64 -867167489685638958, i64 25845630200], [3 x i64] [i64 -4597182825606121247, i64 3480927339588501811, i64 248952990756], [3 x i64] [i64 -6304365265755696686, i64 3547346616671294635, i64 36188701449], [3 x i64] [i64 2513847703931031444, i64 7705317123868384954, i64 9192302045], [3 x i64] [i64 1752183758129038045, i64 4969425237478353909, i64 221417706078], [3 x i64] [i64 -2621910731488995076, i64 -1403497373577334441, i64 94269393081], [3 x i64] [i64 8168747198299470695, i64 -1392955710926052146, i64 185923916254], [3 x i64] [i64 -1031944233560194138, i64 -7343755845255326848, i64 222924487719], [3 x i64] [i64 83147520704167789, i64 -1502438685907865777, i64 39601894197], [3 x i64] [i64 2383542703041471269, i64 -6721601096250352340, i64 53918552635], [3 x i64] [i64 -2905791348160293817, i64 8175984171998533324, i64 59635621274], [3 x i64] [i64 6949835416232048690, i64 1372352885142856895, i64 154443220990], [3 x i64] [i64 -3047875136124184076, i64 -471650607206663452, i64 254074395398], [3 x i64] [i64 -3735828088441295537, i64 6467823391459085653, i64 6974431769], [3 x i64] [i64 -8781039236836215879, i64 -7127357190562666591, i64 25350621408], [3 x i64] [i64 2528789298740305993, i64 9141999262922068637, i64 224613625192], [3 x i64] [i64 -7883829398021825352, i64 1587330393383478774, i64 104495588773], [3 x i64] [i64 -775085773612714505, i64 884187548095712303, i64 165086049353], [3 x i64] [i64 356471401631698552, i64 488841225726377268, i64 73047931903], [3 x i64] [i64 7450677157218003204, i64 -984119874303695423, i64 255026500135], [3 x i64] [i64 317174560787152643, i64 -5263066494593968062, i64 39946650754], [3 x i64] [i64 7251937674440720374, i64 -6801728254792273837, i64 130714688593], [3 x i64] [i64 1252631516699038247, i64 8760523002035971977, i64 81631277572], [3 x i64] [i64 -7628734304848707749, i64 -8377926395218083574, i64 4474908903], [3 x i64] [i64 -6116629878759389220, i64 1273658177787418284, i64 231545831700], [3 x i64] [i64 -2620062435448382794, i64 3100019384328057661, i64 20069045148], [3 x i64] [i64 -4206593995210339991, i64 -8083680505620092878, i64 156168052387], [3 x i64] [i64 -7721371957467426195, i64 -5415987702228147950, i64 163561782801], [3 x i64] [i64 8434925524647833627, i64 6538878900684195299, i64 17706398718], [3 x i64] [i64 -1312841405189203375, i64 8984884716779098868, i64 254354473335], [3 x i64] [i64 -3352748025728185806, i64 8728727397070363908, i64 119487071576], [3 x i64] [i64 6187974166976813153, i64 6398650562917867005, i64 88473185260], [3 x i64] [i64 -4500599365989291751, i64 1190873176164938879, i64 236346871542], [3 x i64] [i64 9138079832881862582, i64 4383628525805121795, i64 246064557364], [3 x i64] [i64 6600697628576225568, i64 -8257369373975431764, i64 52237636978], [3 x i64] [i64 8137099536646556597, i64 5276291920541626391, i64 114552367109], [3 x i64] [i64 -4276888530255647910, i64 2692252373800386521, i64 5286028358], [3 x i64] [i64 3706403268650100765, i64 -6868059078540377696, i64 70145947293], [3 x i64] [i64 -3709811806831569352, i64 5799408022254132587, i64 157627681771], [3 x i64] [i64 -441948948570595612, i64 -2898174235997206326, i64 235314386538], [3 x i64] [i64 9068489270661002501, i64 -2683713609386648661, i64 106842889659], [3 x i64] [i64 7758835715193269217, i64 -5188994327128296116, i64 187854515593], [3 x i64] [i64 -1502796262574290432, i64 -2294274064520843938, i64 137718704053], [3 x i64] [i64 6745843108403216384, i64 -4639953225215647613, i64 181875627153], [3 x i64] [i64 -6108514419640107008, i64 -6465517550443600425, i64 145748467631], [3 x i64] [i64 -4088568004026040320, i64 5133628726077003713, i64 175649503591], [3 x i64] [i64 7083775185760813056, i64 -2262788331798718452, i64 103278294570], [3 x i64] [i64 5350276357316149248, i64 -4806318519378180162, i64 42877333998], [3 x i64] [i64 -9223372036854775808, i64 -338623166841515754, i64 238739448950], [3 x i64] [i64 0, i64 6324011669895037184, i64 118981643201], [3 x i64] [i64 0, i64 -8002306384193781760, i64 193342825359], [3 x i64] [i64 0, i64 -6122031530043768832, i64 143566194101], [3 x i64] [i64 0, i64 -4517802122145693696, i64 181668124005], [3 x i64] [i64 0, i64 3975288688270639104, i64 101755089456], [3 x i64] [i64 0, i64 -7304838595594944512, i64 48215500831], [3 x i64] [i64 0, i64 4611686018427387904, i64 31604003906], [3 x i64] [i64 0, i64 0, i64 66250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 -3747627385248926004, i64 708211, i64 0], [3 x i64] [i64 6684126021499623499, i64 708211796840712, i64 0], [3 x i64] [i64 -5832137994017043110, i64 4398362855256705725, i64 38392], [3 x i64] [i64 -3088473797026550127, i64 2812083125569302717, i64 248238435728], [3 x i64] [i64 -369617882756142621, i64 -5578234930736451013, i64 144152443331], [3 x i64] [i64 7864121581925945659, i64 8726243776748165726, i64 195697603278], [3 x i64] [i64 3518026639210514839, i64 358304413426858117, i64 206473050623], [3 x i64] [i64 4698310163811252280, i64 3180720351566429470, i64 255019423721], [3 x i64] [i64 6101155398200416338, i64 -4392925833309452832, i64 233172427195], [3 x i64] [i64 -2397565493349518275, i64 7340140541492429288, i64 187761859013], [3 x i64] [i64 3167464649127375997, i64 1323571167904965058, i64 197397909816], [3 x i64] [i64 -5667820138228561712, i64 -3982892336126155590, i64 56071750936], [3 x i64] [i64 -6571190161096571237, i64 -3323959254793503130, i64 24784086973], [3 x i64] [i64 -7817983224357854559, i64 -4888769452332042661, i64 189819807807], [3 x i64] [i64 3408944711673234310, i64 -921571999145675352, i64 63734979276], [3 x i64] [i64 2102091496050506178, i64 -3297863390635335649, i64 204950041481], [3 x i64] [i64 6254611118630245760, i64 6744828147558597936, i64 137821222467], [3 x i64] [i64 2647941151989776368, i64 -8647453294061579924, i64 67365637866], [3 x i64] [i64 8855437735410157458, i64 -7275853869810873511, i64 234531220617], [3 x i64] [i64 -8262473470577371513, i64 7068779781287527905, i64 137605575171], [3 x i64] [i64 -6367660911173924452, i64 -3972002151204010705, i64 3383199319], [3 x i64] [i64 5952952868716156729, i64 -1339681393304360102, i64 87784677331], [3 x i64] [i64 -6487837035893699296, i64 2712598571300237005, i64 211927375726], [3 x i64] [i64 -8345181936387853990, i64 3767556054903418641, i64 110147050263], [3 x i64] [i64 -4813216662430293289, i64 -288504392003273988, i64 23204239622], [3 x i64] [i64 -1891116680207782888, i64 -7915091361581220935, i64 6984360145], [3 x i64] [i64 6359650463500280706, i64 -8898348746775431049, i64 209570922037], [3 x i64] [i64 8093923611102181967, i64 -2571096223411832226, i64 53517619547], [3 x i64] [i64 2848827352928635726, i64 8215825295203192574, i64 91860620594], [3 x i64] [i64 4686723431961561511, i64 -5699433165449008472, i64 50445380781], [3 x i64] [i64 6245554925867652609, i64 77706528053613642, i64 173691033109], [3 x i64] [i64 -919337252917035583, i64 6024737704056756146, i64 21004212479], [3 x i64] [i64 -6326777239055859406, i64 6819452388570089667, i64 255326601685], [3 x i64] [i64 -6840241227831623555, i64 -4750817298336365362, i64 213369683254], [3 x i64] [i64 424311496652297090, i64 3746531715392682132, i64 54742457678], [3 x i64] [i64 5977664048034127173, i64 4717376233154528116, i64 78203099891], [3 x i64] [i64 6702712461535947028, i64 385190957950313369, i64 243255729478], [3 x i64] [i64 -7062394219654531598, i64 -6058369763060935534, i64 70020881243], [3 x i64] [i64 3782955013294836188, i64 1078067332084407770, i64 91671575117], [3 x i64] [i64 3531805968821207061, i64 3257295319358714850, i64 77058442147], [3 x i64] [i64 3867566898657193228, i64 1545453099660723457, i64 163176578333], [3 x i64] [i64 -5758009436284479536, i64 7495477664653506341, i64 29083779180], [3 x i64] [i64 -10761309254931925, i64 7225503732673614354, i64 108406330658], [3 x i64] [i64 4728836163964677692, i64 3935478326103643956, i64 34391695342], [3 x i64] [i64 2120012917348838977, i64 -8364503390966865406, i64 238213342707], [3 x i64] [i64 -8589778607884871785, i64 -7608031368141654478, i64 243546559362], [3 x i64] [i64 -7229546402648302800, i64 2142546572501643680, i64 130587567793], [3 x i64] [i64 3840562972677739189, i64 7893042119150331392, i64 177116147682], [3 x i64] [i64 -1342377094784292999, i64 -6361932431458249001, i64 226427882670], [3 x i64] [i64 -2268866853867558172, i64 -3129509591136596841, i64 174655118951], [3 x i64] [i64 7338522384267208704, i64 2283226355108359361, i64 103830348945], [3 x i64] [i64 -7511503615097307136, i64 -5087018921133829489, i64 145123773948], [3 x i64] [i64 1732868046462124032, i64 -5320193062217957059, i64 252724232151], [3 x i64] [i64 557965042578882560, i64 3598021288691861269, i64 215711591756], [3 x i64] [i64 -7992059751234011136, i64 -1984122277812888655, i64 76195049124], [3 x i64] [i64 -4539628424389459968, i64 -3764631316744924284, i64 164892440515], [3 x i64] [i64 0, i64 7174112100896070218, i64 195795918927], [3 x i64] [i64 0, i64 5023109019590616064, i64 79388909396], [3 x i64] [i64 0, i64 -7681521050623410176, i64 84272303285], [3 x i64] [i64 0, i64 8228137177297453056, i64 181583583909], [3 x i64] [i64 0, i64 2891199497780592640, i64 165446048210], [3 x i64] [i64 0, i64 -3151886420461748224, i64 210156732238], [3 x i64] [i64 0, i64 -4143311657180856320, i64 78829135894], [3 x i64] [i64 0, i64 0, i64 22775390625], [3 x i64] [i64 0, i64 0, i64 161000000000], [3 x i64] [i64 -3570285788853717066, i64 10, i64 0], [3 x i64] [i64 -7996039146727286418, i64 10806454419, i64 0], [3 x i64] [i64 5385653213018257806, i64 -7640289654143017767, i64 0], [3 x i64] [i64 -5711174403829404127, i64 -1328518981091057043, i64 585819067], [3 x i64] [i64 3619762560577729456, i64 -5061005198367744057, i64 187927980841], [3 x i64] [i64 -7323295947085467347, i64 8272682717439277193, i64 41725642358], [3 x i64] [i64 4072715118852885633, i64 -5044307590340201533, i64 118448463028], [3 x i64] [i64 -207656842288724333, i64 -7500415170467939080, i64 180726547537], [3 x i64] [i64 423431461216085297, i64 -2180935150282820364, i64 81593401678], [3 x i64] [i64 -9085767357189391574, i64 -7366369613838366439, i64 78881771268], [3 x i64] [i64 -6790816956446342696, i64 1240761893433831916, i64 4600668303], [3 x i64] [i64 2646622721938364948, i64 367264070493390483, i64 143067261837], [3 x i64] [i64 4496462484548171852, i64 2863675693461092905, i64 141019909425], [3 x i64] [i64 -5306485553906201553, i64 7511929581752138999, i64 49155240170], [3 x i64] [i64 -5356979740388923846, i64 -7292186283715705863, i64 234407222518], [3 x i64] [i64 6926286827289840501, i64 8325416539745948522, i64 246604689789], [3 x i64] [i64 4985580225290866218, i64 -701614199029698999, i64 125451321734], [3 x i64] [i64 -7967953236349761923, i64 1074820986392253357, i64 134961965418], [3 x i64] [i64 -8405552106253859402, i64 7820952682162838597, i64 106058266162], [3 x i64] [i64 5035461258013813797, i64 8215518006273528603, i64 50423974694], [3 x i64] [i64 -4237984412150301866, i64 -8766317282619651483, i64 38445364123], [3 x i64] [i64 -6099471910467792776, i64 -2318248350104754204, i64 155524776987], [3 x i64] [i64 3372534174410277614, i64 2264789053583348885, i64 27874327505], [3 x i64] [i64 -1220039886434838632, i64 -7271285585023253533, i64 209122774460], [3 x i64] [i64 4250480179449852121, i64 -7419966263297263999, i64 188605822818], [3 x i64] [i64 4303723537755414374, i64 -2246854038813952976, i64 98597762822], [3 x i64] [i64 8680503847344854165, i64 9094320719494763752, i64 6878197798], [3 x i64] [i64 8817608623911079652, i64 1250835564687222832, i64 38493004114], [3 x i64] [i64 5692030448698539450, i64 -3084277431250214591, i64 82067807931], [3 x i64] [i64 -1537907759022781807, i64 7831109835595423828, i64 187832800985], [3 x i64] [i64 6073762347067727240, i64 -3020506789374529187, i64 217424525314], [3 x i64] [i64 -7515677381124445416, i64 -2810435712254117068, i64 2836257998], [3 x i64] [i64 -3980152709648012020, i64 -4479570197764571288, i64 206847645974], [3 x i64] [i64 4958077340960173341, i64 -200764150113727519, i64 22757162012], [3 x i64] [i64 4076890037156765715, i64 -7111689594034273353, i64 28989116553], [3 x i64] [i64 -4362770927100372558, i64 -7281404191079089909, i64 137614474534], [3 x i64] [i64 2565183738039805295, i64 -2502306665410155694, i64 38605274287], [3 x i64] [i64 1482420938751351224, i64 -2640327724932230455, i64 175864349683], [3 x i64] [i64 2151089495335413944, i64 4201030477408556248, i64 243856867547], [3 x i64] [i64 3738604531753220913, i64 -8961269131154962709, i64 219227738318], [3 x i64] [i64 -4251057558873545851, i64 -207986426046321075, i64 206514208626], [3 x i64] [i64 -637910157477754646, i64 4642199687824746379, i64 114988725033], [3 x i64] [i64 1302384553035657354, i64 6134575894869364037, i64 41251654149], [3 x i64] [i64 1672033517974833698, i64 -6922535526588235608, i64 5332556025], [3 x i64] [i64 -6772818540781889071, i64 2734683241527878366, i64 249624728597], [3 x i64] [i64 3905334232240480709, i64 -7817520617530876445, i64 21148247475], [3 x i64] [i64 -1035656753442078991, i64 2788042336985254064, i64 179576211358], [3 x i64] [i64 -1873438842645844999, i64 -1161245315643409114, i64 158151140077], [3 x i64] [i64 -2965640837672403262, i64 5525538192421886436, i64 237937048765], [3 x i64] [i64 907440704754420880, i64 -7032418570665749728, i64 189299540025], [3 x i64] [i64 3224970785139077759, i64 7246608114685173259, i64 57618771825], [3 x i64] [i64 -7885917563974943472, i64 1007884269852184608, i64 113392839413], [3 x i64] [i64 4700940027512659968, i64 -4623026197199522304, i64 245054637515], [3 x i64] [i64 -8713049390207467520, i64 -5959333305470122299, i64 203749385247], [3 x i64] [i64 1995535635724632064, i64 3361062421598631942, i64 31676943894], [3 x i64] [i64 -7816910847464177664, i64 -593406694621223141, i64 22182203558], [3 x i64] [i64 -2717359425164673024, i64 -6895183036217681731, i64 166967831358], [3 x i64] [i64 7205759403792793600, i64 -6965866077074346814, i64 62626211378], [3 x i64] [i64 0, i64 5527488381934471912, i64 50622379643], [3 x i64] [i64 0, i64 -7303305669301825536, i64 123299645745], [3 x i64] [i64 0, i64 6472279730688098304, i64 49604087006], [3 x i64] [i64 0, i64 4561816853579563008, i64 222350862987], [3 x i64] [i64 0, i64 2888714464062865408, i64 139247296587], [3 x i64] [i64 0, i64 -2188467943925350400, i64 75156597524], [3 x i64] [i64 0, i64 720575940379279360, i64 20881362915], [3 x i64] [i64 0, i64 0, i64 227039062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 7535526066623007027, i64 164893, i64 0], [3 x i64] [i64 -7144597155300240028, i64 164893408501686, i64 0], [3 x i64] [i64 2480833299122194801, i64 -2036773203069204812, i64 8938], [3 x i64] [i64 -6933517868120221058, i64 7721907286269370594, i64 234889586303], [3 x i64] [i64 4073957068281936105, i64 -4146000175827396485, i64 127418605432], [3 x i64] [i64 3729887061093812886, i64 2068482633821123575, i64 120775244880], [3 x i64] [i64 -4829832293970100173, i64 4922882895416406094, i64 80112132668], [3 x i64] [i64 -5407690791513773950, i64 -9129111198086123206, i64 60266870016], [3 x i64] [i64 -3955987960499133726, i64 5693844901999766254, i64 505109890], [3 x i64] [i64 -1014257960731994031, i64 -6877259173447449354, i64 130308663950], [3 x i64] [i64 -4137923248365511779, i64 3138170119352085637, i64 142627183033], [3 x i64] [i64 4190949538817536349, i64 950584692575235243, i64 185170120543], [3 x i64] [i64 -4830191570898587219, i64 8136430299747162645, i64 95051531299], [3 x i64] [i64 4898145803694965031, i64 6698711700804594470, i64 35441076770], [3 x i64] [i64 1399036321001644308, i64 -1045552502705249608, i64 34363137888], [3 x i64] [i64 -1276412945465813076, i64 4721732028538188150, i64 96943320485], [3 x i64] [i64 -7805422685504184206, i64 2984214103553086219, i64 165255965606], [3 x i64] [i64 6648873641312572851, i64 -5318068871703889548, i64 166161774570], [3 x i64] [i64 5988456964560374823, i64 -3808231076038878782, i64 234711706908], [3 x i64] [i64 -8474150315361204701, i64 -5504658407939859178, i64 28793555379], [3 x i64] [i64 -1737075151836732648, i64 -4315609716590346530, i64 179701591869], [3 x i64] [i64 6094829131503407767, i64 8921946894736102919, i64 61766050328], [3 x i64] [i64 4892016478899926334, i64 5601522560505809989, i64 24483659710], [3 x i64] [i64 -5295886829630520078, i64 8602606493507716808, i64 190303659146], [3 x i64] [i64 -5462800678390765722, i64 8576789731078566487, i64 138466348232], [3 x i64] [i64 -3105099489094794138, i64 -565625934866893067, i64 200464948702], [3 x i64] [i64 7507635124856644772, i64 -6822371399276846693, i64 222969337356], [3 x i64] [i64 -6827088706625007262, i64 6826284072848095635, i64 12630158505], [3 x i64] [i64 -6893627121230768607, i64 1646466632033733563, i64 169370053601], [3 x i64] [i64 -1054594059476358371, i64 -575662416649252436, i64 225089255134], [3 x i64] [i64 8877887560294980515, i64 -2535850949032006907, i64 222968793277], [3 x i64] [i64 -42563453793942113, i64 -7415526614258970672, i64 189862531244], [3 x i64] [i64 -8367330978421369640, i64 -4891756683672308522, i64 172598003496], [3 x i64] [i64 -4343941107170446066, i64 -3420029482805863746, i64 40734817338], [3 x i64] [i64 -5112778047573660217, i64 4406379654994689200, i64 58814599830], [3 x i64] [i64 -6101775403536035464, i64 -4850414980847601374, i64 150238870319], [3 x i64] [i64 -7869736253904824864, i64 284812388227373260, i64 47737058477], [3 x i64] [i64 -3109702719678463606, i64 -9161664914317242234, i64 173015439710], [3 x i64] [i64 -4113136788094878000, i64 -3400635931756839723, i64 94503345149], [3 x i64] [i64 -1275146510489855078, i64 -4651377163764593305, i64 253815651156], [3 x i64] [i64 2849642930482147564, i64 -5536823432529491655, i64 84747848338], [3 x i64] [i64 -3655495649730116443, i64 5333762939889788252, i64 146699848200], [3 x i64] [i64 -4564372709133241489, i64 6411331390005944495, i64 8289143868], [3 x i64] [i64 -6710748264768222076, i64 1447104583224217723, i64 60347558971], [3 x i64] [i64 -7069747399370278435, i64 -6506694847541618745, i64 59078447696], [3 x i64] [i64 -8597106016541508135, i64 -8674453290119079231, i64 80647271365], [3 x i64] [i64 -205223844430189652, i64 -2094754495878023172, i64 197529756944], [3 x i64] [i64 1865852368526961444, i64 4376738725895725097, i64 16886443131], [3 x i64] [i64 -7845256704433103458, i64 -4595467775969738853, i64 123237263481], [3 x i64] [i64 -2446812763396789446, i64 -5804747870239218107, i64 121750879192], [3 x i64] [i64 5773775867713013570, i64 7707081716407945022, i64 216685323987], [3 x i64] [i64 -720504209727004082, i64 417638323657040024, i64 211417801737], [3 x i64] [i64 -8735427377821234624, i64 -2008696366017102516, i64 9022640218], [3 x i64] [i64 -574741452985827328, i64 -3596635966666245300, i64 90891108351], [3 x i64] [i64 7429694208660733952, i64 -8023453265804830781, i64 255805025973], [3 x i64] [i64 1782821038871019520, i64 -1495581763407212302, i64 181565047726], [3 x i64] [i64 3225250234313474048, i64 2752437506572397322, i64 174918924350], [3 x i64] [i64 -8437493901878624256, i64 3925815842962784589, i64 62149209936], [3 x i64] [i64 1152921504606846976, i64 5274166674003605291, i64 80212818903], [3 x i64] [i64 0, i64 5538963350863452832, i64 215285913148], [3 x i64] [i64 0, i64 -1546072439270522880, i64 60300267804], [3 x i64] [i64 0, i64 2326997710751662080, i64 28916187245], [3 x i64] [i64 0, i64 -6119017912083677184, i64 109126146798], [3 x i64] [i64 0, i64 5756455743825903616, i64 238668287374], [3 x i64] [i64 0, i64 3018537650245074944, i64 142312058091], [3 x i64] [i64 0, i64 -1729382256910270464, i64 235163635253], [3 x i64] [i64 0, i64 0, i64 53906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 2285186318012886800, i64 2516073738, i64 0], [3 x i64] [i64 -8740323122307279581, i64 2516073738123880198, i64 0], [3 x i64] [i64 2369632031840402142, i64 -6449318314416819562, i64 136396630], [3 x i64] [i64 -2847620175730152158, i64 -6955591412439156455, i64 86650381753], [3 x i64] [i64 -867167489685638958, i64 -265680815474670344, i64 185622936633], [3 x i64] [i64 3480927339588501811, i64 2466921813123869732, i64 57985597414], [3 x i64] [i64 3547346616671294635, i64 8430880678232179465, i64 230133732099], [3 x i64] [i64 7705317123868384954, i64 6738034873677997533, i64 3457038957], [3 x i64] [i64 4969425237478353909, i64 7678250951042929246, i64 109365269602], [3 x i64] [i64 -1403497373577334441, i64 1853560606315563193, i64 98416238818], [3 x i64] [i64 -1392955710926052146, i64 -3504067480299646498, i64 226100481721], [3 x i64] [i64 -7343755845255326848, i64 4909892170837638183, i64 185810044121], [3 x i64] [i64 -1502438685907865777, i64 -1575594705397419211, i64 217266165787], [3 x i64] [i64 -6721601096250352340, i64 -2350613484375780805, i64 27914586839], [3 x i64] [i64 8175984171998533324, i64 -5934264886077727334, i64 215872572987], [3 x i64] [i64 1372352885142856895, i64 -1466439093168994306, i64 59678302855], [3 x i64] [i64 -471650607206663452, i64 8640919162749295366, i64 135920504177], [3 x i64] [i64 6467823391459085653, i64 7862382415464063513, i64 113468425166], [3 x i64] [i64 -7127357190562666591, i64 -3912586170699626272, i64 206426220604], [3 x i64] [i64 9141999262922068637, i64 -5819279519494443672, i64 60787898278], [3 x i64] [i64 1587330393383478774, i64 2456849734836299173, i64 166684536225], [3 x i64] [i64 884187548095712303, i64 -18491876011723703, i64 161133186090], [3 x i64] [i64 488841225726377268, i64 7244734215936736255, i64 42998997553], [3 x i64] [i64 -984119874303695423, i64 -3690569023204781529, i64 49392737828], [3 x i64] [i64 -5263066494593968062, i64 6764116534566945922, i64 36799933852], [3 x i64] [i64 -6801728254792273837, i64 1588822142405565521, i64 156366683492], [3 x i64] [i64 8760523002035971977, i64 -1393478448865709564, i64 100086130220], [3 x i64] [i64 -8377926395218083574, i64 -1449852481949552409, i64 44924459381], [3 x i64] [i64 1273658177787418284, i64 8565556232370585876, i64 117921403339], [3 x i64] [i64 3100019384328057661, i64 -3981783714563664996, i64 203464339733], [3 x i64] [i64 -8083680505620092878, i64 5813189542048784035, i64 21784147072], [3 x i64] [i64 -5415987702228147950, i64 -8707503046827524591, i64 128315133636], [3 x i64] [i64 6538878900684195299, i64 -271675538034248706, i64 196527965313], [3 x i64] [i64 8984884716779098868, i64 -7884046861647789705, i64 129985272439], [3 x i64] [i64 8728727397070363908, i64 4264834835660801368, i64 119572604963], [3 x i64] [i64 6398650562917867005, i64 -5427677630019425300, i64 35231197159], [3 x i64] [i64 1190873176164938879, i64 1828040177823321846, i64 231705765006], [3 x i64] [i64 4383628525805121795, i64 -7206374243332575948, i64 142099098256], [3 x i64] [i64 -8257369373975431764, i64 8886938465302549874, i64 144609341669], [3 x i64] [i64 5276291920541626391, i64 -8461503760119863291, i64 229481761899], [3 x i64] [i64 2692252373800386521, i64 722909126956573766, i64 107541300962], [3 x i64] [i64 -6868059078540377696, i64 5493363474638452381, i64 226039188982], [3 x i64] [i64 5799408022254132587, i64 -6036208794496431125, i64 246297795830], [3 x i64] [i64 -2898174235997206326, i64 -7903635155342682518, i64 246672776465], [3 x i64] [i64 -2683713609386648661, i64 -5492835057184727621, i64 17571543079], [3 x i64] [i64 -5188994327128296116, i64 -1940801927836963447, i64 39702232814], [3 x i64] [i64 -2294274064520843938, i64 -6018149693317535819, i64 238894788916], [3 x i64] [i64 -4639953225215647613, i64 7528259605829768337, i64 52673755451], [3 x i64] [i64 -6465517550443600425, i64 -299296473666740305, i64 59408107770], [3 x i64] [i64 5133628726077003713, i64 -6425674642593367705, i64 250983775105], [3 x i64] [i64 -2262788331798718452, i64 -6626759004043889110, i64 129651663479], [3 x i64] [i64 -4806318519378180162, i64 -8044866959641398802, i64 119640762674], [3 x i64] [i64 -338623166841515754, i64 4611631138117837942, i64 50563886888], [3 x i64] [i64 6324011669895037184, i64 -1245930675102299199, i64 40249997024], [3 x i64] [i64 -8002306384193781760, i64 -4346277936155892849, i64 224932457962], [3 x i64] [i64 -6122031530043768832, i64 -558967304884042315, i64 234764387800], [3 x i64] [i64 -4517802122145693696, i64 -5814087215739464347, i64 216969698321], [3 x i64] [i64 3975288688270639104, i64 8923681664054686256, i64 17684817700], [3 x i64] [i64 -7304838595594944512, i64 6213926103737837599, i64 36483753752], [3 x i64] [i64 4611686018427387904, i64 1233118281776157762, i64 24336857609], [3 x i64] [i64 0, i64 30716279628678784, i64 9066847476], [3 x i64] [i64 0, i64 -2671009422811004928, i64 244001665132], [3 x i64] [i64 0, i64 976806005729918976, i64 108855204289], [3 x i64] [i64 0, i64 -5986645220429660160, i64 193052952759], [3 x i64] [i64 0, i64 5635665595421687808, i64 183675463312], [3 x i64] [i64 0, i64 1805943450575568896, i64 144305510044], [3 x i64] [i64 0, i64 -6917529027641081856, i64 156097900390], [3 x i64] [i64 0, i64 0, i64 102625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 4398362855256705725, i64 38392, i64 0], [3 x i64] [i64 2812083125569302717, i64 38392238435728, i64 0], [3 x i64] [i64 -5578234930736451013, i64 4564018338575530435, i64 2081], [3 x i64] [i64 8726243776748165726, i64 -1893306827258039602, i64 33247415929], [3 x i64] [i64 358304413426858117, i64 4339777136957372927, i64 121897363631], [3 x i64] [i64 3180720351566429470, i64 -7280707154896919, i64 175235259789], [3 x i64] [i64 -4392925833309452832, i64 1370067356680643003, i64 141999605312], [3 x i64] [i64 7340140541492429288, i64 4210124040914115013, i64 64074271500], [3 x i64] [i64 1323571167904965058, i64 -7754518447566941896, i64 12228231281], [3 x i64] [i64 -3982892336126155590, i64 -6853887399814167272, i64 113579626712], [3 x i64] [i64 -3323959254793503130, i64 -8162264842482145347, i64 216628450019], [3 x i64] [i64 -4888769452332042661, i64 4961071383534266431, i64 227557522736], [3 x i64] [i64 -921571999145675352, i64 -7486132522263864628, i64 48268940218], [3 x i64] [i64 -3297863390635335649, i64 -3830347350593932407, i64 186594175942], [3 x i64] [i64 6744828147558597936, i64 1025604265437492803, i64 198792356454], [3 x i64] [i64 -8647453294061579924, i64 -6735155618817372438, i64 102055598118], [3 x i64] [i64 -7275853869810873511, i64 5580373263251565705, i64 38634886482], [3 x i64] [i64 7068779781287527905, i64 -4337409420676402685, i64 82302512640], [3 x i64] [i64 -3972002151204010705, i64 2899414033769399895, i64 764868564], [3 x i64] [i64 -1339681393304360102, i64 -5213286838816743469, i64 212157177549], [3 x i64] [i64 2712598571300237005, i64 3287946691509034862, i64 205717387154], [3 x i64] [i64 3767556054903418641, i64 5488480288717445911, i64 146178239947], [3 x i64] [i64 -288504392003273988, i64 -6759511019835188986, i64 203297531112], [3 x i64] [i64 -7915091361581220935, i64 6783772100089274577, i64 232633566173], [3 x i64] [i64 -8898348746775431049, i64 7898291058728402485, i64 221367749022], [3 x i64] [i64 -2571096223411832226, i64 4423684977486598491, i64 158428167216], [3 x i64] [i64 8215825295203192574, i64 2750833684599526706, i64 48239808443], [3 x i64] [i64 -5699433165449008472, i64 -2777054243220525907, i64 187149122992], [3 x i64] [i64 77706528053613642, i64 -3329436799494597099, i64 176849455587], [3 x i64] [i64 6024737704056756146, i64 8148639818575698175, i64 227819510869], [3 x i64] [i64 6819452388570089667, i64 -5440259647630556715, i64 85441738649], [3 x i64] [i64 -4750817298336365362, i64 -8159248015864038090, i64 153705082933], [3 x i64] [i64 3746531715392682132, i64 -4286868040743019186, i64 53557686278], [3 x i64] [i64 4717376233154528116, i64 -2704531877244003597, i64 6767608417], [3 x i64] [i64 385190957950313369, i64 2892220461917134150, i64 97853387033], [3 x i64] [i64 -6058369763060935534, i64 7487151560715393883, i64 25156787585], [3 x i64] [i64 1078067332084407770, i64 7245756744165177933, i64 129405879299], [3 x i64] [i64 3257295319358714850, i64 3067122860671533987, i64 3392793260], [3 x i64] [i64 1545453099660723457, i64 8135043905834122525, i64 172166269063], [3 x i64] [i64 7495477664653506341, i64 -3716724704788529044, i64 135441001613], [3 x i64] [i64 7225503732673614354, i64 495969939682055458, i64 141798515950], [3 x i64] [i64 3935478326103643956, i64 5617761407265775598, i64 238026886584], [3 x i64] [i64 -8364503390966865406, i64 2087044847072781811, i64 184304539456], [3 x i64] [i64 -7608031368141654478, i64 -2517069841648348286, i64 64113138927], [3 x i64] [i64 2142546572501643680, i64 8658086469608285873, i64 239863549370], [3 x i64] [i64 7893042119150331392, i64 -76872282929238046, i64 186469355807], [3 x i64] [i64 -6361932431458249001, i64 3545648451947416750, i64 31995832745], [3 x i64] [i64 -3129509591136596841, i64 -5099367280941621657, i64 169192209987], [3 x i64] [i64 2283226355108359361, i64 -3964579613871348591, i64 67723562745], [3 x i64] [i64 -5087018921133829489, i64 8899577765623565820, i64 249785079708], [3 x i64] [i64 -5320193062217957059, i64 7095320096604405719, i64 156482447077], [3 x i64] [i64 3598021288691861269, i64 2968593824439315788, i64 229384638073], [3 x i64] [i64 -1984122277812888655, i64 -5825335750096965980, i64 121160927793], [3 x i64] [i64 -3764631316744924284, i64 3954422936414648259, i64 49684207916], [3 x i64] [i64 7174112100896070218, i64 -1303013986131861425, i64 44214369696], [3 x i64] [i64 5023109019590616064, i64 5033045529399041876, i64 160929363470], [3 x i64] [i64 -7681521050623410176, i64 -2589095551715029835, i64 14272841944], [3 x i64] [i64 8228137177297453056, i64 -1791170587210442075, i64 216859644848], [3 x i64] [i64 2891199497780592640, i64 -1794589634519475758, i64 176902900447], [3 x i64] [i64 -3151886420461748224, i64 -429793473545420978, i64 223902715100], [3 x i64] [i64 -4143311657180856320, i64 2086292996072613910, i64 220976700849], [3 x i64] [i64 0, i64 -1122281488514752095, i64 177113098169], [3 x i64] [i64 0, i64 -7367592610524624384, i64 185939160998], [3 x i64] [i64 0, i64 5239846817488961536, i64 166600602004], [3 x i64] [i64 0, i64 2778806963520143360, i64 148284052665], [3 x i64] [i64 0, i64 6240890740138835968, i64 185150639427], [3 x i64] [i64 0, i64 -1196092729159843840, i64 67338319364], [3 x i64] [i64 0, i64 4197354852709302272, i64 4935159683], [3 x i64] [i64 0, i64 -9223372036854775808, i64 131227539062], [3 x i64] [i64 0, i64 0, i64 118500000000], [3 x i64] [i64 -1328518981091057043, i64 585819067, i64 0], [3 x i64] [i64 -5061005198367744057, i64 585819067927980841, i64 0], [3 x i64] [i64 8272682717439277193, i64 5654803392547571318, i64 31757315], [3 x i64] [i64 -5044307590340201533, i64 2931628102185393332, i64 3306547506], [3 x i64] [i64 -7500415170467939080, i64 -2482046455729339311, i64 50158923877], [3 x i64] [i64 -2180935150282820364, i64 450380868305846606, i64 101865447992], [3 x i64] [i64 -7366369613838366439, i64 -3815610542894985468, i64 56024415195], [3 x i64] [i64 1240761893433831916, i64 31969822783742095, i64 219793155338], [3 x i64] [i64 367264070493390483, i64 -8009475044323808371, i64 10001733087], [3 x i64] [i64 2863675693461092905, i64 -3250597577332159183, i64 223565805487], [3 x i64] [i64 7511929581752138999, i64 4409099735137480938, i64 175823784752], [3 x i64] [i64 -7292186283715705863, i64 -7801756158806303498, i64 48239017775], [3 x i64] [i64 8325416539745948522, i64 3154431617534062973, i64 47577065951], [3 x i64] [i64 -701614199029698999, i64 -6744687742461591162, i64 223171002080], [3 x i64] [i64 1074820986392253357, i64 -2871429007744292502, i64 224634369744], [3 x i64] [i64 7820952682162838597, i64 -7686996464229501390, i64 208844339521], [3 x i64] [i64 8215518006273528603, i64 -5908507419748807898, i64 65583287086], [3 x i64] [i64 -8766317282619651483, i64 -588801409731546213, i64 46679699170], [3 x i64] [i64 -2318248350104754204, i64 -7003739918958738405, i64 226968081011], [3 x i64] [i64 2264789053583348885, i64 4004313188770806737, i64 115620326498], [3 x i64] [i64 -7271285585023253533, i64 -1311871118885368388, i64 98217074252], [3 x i64] [i64 -7419966263297263999, i64 2659553912986171234, i64 76928883324], [3 x i64] [i64 -2246854038813952976, i64 -8944889772740413690, i64 124144174706], [3 x i64] [i64 9094320719494763752, i64 -3918574107408533466, i64 114515096553], [3 x i64] [i64 1250835564687222832, i64 -274652077193649838, i64 233787573671], [3 x i64] [i64 -3084277431250214591, i64 1133541705604751035, i64 167985111081], [3 x i64] [i64 7831109835595423828, i64 -166394085720910119, i64 41061449418], [3 x i64] [i64 -3020506789374529187, i64 -8510728198997215230, i64 202990979758], [3 x i64] [i64 -2810435712254117068, i64 -2570023673968862002, i64 174538632499], [3 x i64] [i64 -4479570197764571288, i64 8618117825152456982, i64 51860678737], [3 x i64] [i64 -200764150113727519, i64 8085525680745921564, i64 81467189103], [3 x i64] [i64 -7111689594034273353, i64 8072355444669730953, i64 111438317225], [3 x i64] [i64 -7281404191079089909, i64 -9051713568942703322, i64 169437603265], [3 x i64] [i64 -2502306665410155694, i64 3537903114058185903, i64 193509305624], [3 x i64] [i64 -2640327724932230455, i64 2126094743961928691, i64 24191790112], [3 x i64] [i64 4201030477408556248, i64 289185362555601115, i64 32115255827], [3 x i64] [i64 -8961269131154962709, i64 -1536806572259422002, i64 19015676769], [3 x i64] [i64 -207986426046321075, i64 -3997102013349052558, i64 97916689548], [3 x i64] [i64 4642199687824746379, i64 -6012925165211307223, i64 140783316665], [3 x i64] [i64 6134575894869364037, i64 -6562300039131543035, i64 185674038673], [3 x i64] [i64 -6922535526588235608, i64 988625838444140793, i64 145644257002], [3 x i64] [i64 2734683241527878366, i64 1675370907158909973, i64 234053593514], [3 x i64] [i64 -7817520617530876445, i64 -2526557798392617549, i64 170090822038], [3 x i64] [i64 2788042336985254064, i64 5600921198503757726, i64 150863035027], [3 x i64] [i64 -1161245315643409114, i64 -7989386911933209875, i64 147303626546], [3 x i64] [i64 5525538192421886436, i64 -6221387307933811523, i64 50566894467], [3 x i64] [i64 -7032418570665749728, i64 4486633318598164537, i64 131662737918], [3 x i64] [i64 7246608114685173259, i64 -8144257470830170255, i64 254243220879], [3 x i64] [i64 1007884269852184608, i64 -2910315462408312075, i64 143558498917], [3 x i64] [i64 -4623026197199522304, i64 -6420617427754089013, i64 101842231482], [3 x i64] [i64 -5959333305470122299, i64 -3568775932567428065, i64 186651937631], [3 x i64] [i64 3361062421598631942, i64 734560801645383190, i64 95806536269], [3 x i64] [i64 -593406694621223141, i64 -2797800928798469978, i64 77039820620], [3 x i64] [i64 -6895183036217681731, i64 -4782561211706315970, i64 76848330907], [3 x i64] [i64 -6965866077074346814, i64 3895127525902132786, i64 155740736837], [3 x i64] [i64 5527488381934471912, i64 5249187334214137467, i64 69211155286], [3 x i64] [i64 -7303305669301825536, i64 -7804484010350524111, i64 86284559015], [3 x i64] [i64 6472279730688098304, i64 783598951897779422, i64 167576918074], [3 x i64] [i64 4561816853579563008, i64 5538576558607624843, i64 58042478984], [3 x i64] [i64 2888714464062865408, i64 -2472162886144942005, i64 136300246836], [3 x i64] [i64 -2188467943925350400, i64 7474269406918257428, i64 52865983781], [3 x i64] [i64 720575940379279360, i64 8045286838779138019, i64 37405180956], [3 x i64] [i64 0, i64 8184246376556341732, i64 28436135873], [3 x i64] [i64 0, i64 1493267152679331840, i64 193443668885], [3 x i64] [i64 0, i64 -8267669262486732800, i64 149080950174], [3 x i64] [i64 0, i64 3892499202005008384, i64 158551808751], [3 x i64] [i64 0, i64 -8105570857784442880, i64 239211012804], [3 x i64] [i64 0, i64 6230307872002015232, i64 196560596123], [3 x i64] [i64 0, i64 -9151314442816847872, i64 155337745666], [3 x i64] [i64 0, i64 0, i64 2503906250], [3 x i64] [i64 0, i64 0, i64 202000000000], [3 x i64] [i64 -2036773203069204812, i64 8938, i64 0], [3 x i64] [i64 7721907286269370594, i64 8938889586303, i64 0], [3 x i64] [i64 -4146000175827396485, i64 -7781289445713928328, i64 484], [3 x i64] [i64 2068482633821123575, i64 -1643206180941988784, i64 228578175453], [3 x i64] [i64 4922882895416406094, i64 8099123106849104444, i64 221910921614], [3 x i64] [i64 -9129111198086123206, i64 7077413686679401728, i64 142439054343], [3 x i64] [i64 5693844901999766254, i64 -4910107715337101950, i64 7383667364], [3 x i64] [i64 -6877259173447449354, i64 7280632235418610318, i64 164733822527], [3 x i64] [i64 3138170119352085637, i64 6187823673116858809, i64 63394683864], [3 x i64] [i64 950584692575235243, i64 8624343686231740255, i64 216335442593], [3 x i64] [i64 8136430299747162645, i64 806211610822132771, i64 161467526608], [3 x i64] [i64 6698711700804594470, i64 -58665840507360734, i64 208043704818], [3 x i64] [i64 -1045552502705249608, i64 7628864426595573600, i64 242996819718], [3 x i64] [i64 4721732028538188150, i64 4530799784343874981, i64 6413561569], [3 x i64] [i64 2984214103553086219, i64 8561580552078486438, i64 225245615148], [3 x i64] [i64 -5318068871703889548, i64 -5097629122487552022, i64 44464124211], [3 x i64] [i64 -3808231076038878782, i64 -8417599335200559844, i64 51723656971], [3 x i64] [i64 -5504658407939859178, i64 -5844836875793282637, i64 11543681025], [3 x i64] [i64 -4315609716590346530, i64 1329580921391066941, i64 1683150758], [3 x i64] [i64 8921946894736102919, i64 3198179786356761112, i64 166072076726], [3 x i64] [i64 5601522560505809989, i64 -7039990660074897474, i64 182173373673], [3 x i64] [i64 8602606493507716808, i64 -7314931113184369526, i64 233618361341], [3 x i64] [i64 8576789731078566487, i64 -4147107320064324408, i64 253603456789], [3 x i64] [i64 -565625934866893067, i64 -5482629389065888290, i64 21775184861], [3 x i64] [i64 -6822371399276846693, i64 5019257593846306316, i64 221702786065], [3 x i64] [i64 6826284072848095635, i64 6929086798159998121, i64 17272094499], [3 x i64] [i64 1646466632033733563, i64 -86978306775847967, i64 35375626547], [3 x i64] [i64 -575662416649252436, i64 -8453667838957488418, i64 51995284896], [3 x i64] [i64 -2535850949032006907, i64 3257189215046584509, i64 160541725748], [3 x i64] [i64 -7415526614258970672, i64 2905234736672690348, i64 52176572581], [3 x i64] [i64 -4891756683672308522, i64 -6381758771629881560, i64 165157493090], [3 x i64] [i64 -3420029482805863746, i64 -4131648008766751686, i64 98654044163], [3 x i64] [i64 4406379654994689200, i64 -6502773030157577578, i64 3776022912], [3 x i64] [i64 -4850414980847601374, i64 -5973970921589621969, i64 128647483967], [3 x i64] [i64 284812388227373260, i64 7791259796982183085, i64 63676150387], [3 x i64] [i64 -9161664914317242234, i64 -1579914631658464930, i64 115422365039], [3 x i64] [i64 -3400635931756839723, i64 3702498393844653053, i64 111914352656], [3 x i64] [i64 -4651377163764593305, i64 2057239613841701716, i64 16200712840], [3 x i64] [i64 -5536823432529491655, i64 -1244774096971265390, i64 136111523182], [3 x i64] [i64 5333762939889788252, i64 -175177568266089976, i64 110932520660], [3 x i64] [i64 6411331390005944495, i64 -78234958292431812, i64 212990503604], [3 x i64] [i64 1447104583224217723, i64 7613923684154518587, i64 180995758874], [3 x i64] [i64 -6506694847541618745, i64 -461938988994686384, i64 26412751629], [3 x i64] [i64 -8674453290119079231, i64 4220802739051410373, i64 13974958237], [3 x i64] [i64 -2094754495878023172, i64 -634285030898735856, i64 157228810174], [3 x i64] [i64 4376738725895725097, i64 -7817217984044946309, i64 190965615339], [3 x i64] [i64 -4595467775969738853, i64 -1009300805893003143, i64 235576227763], [3 x i64] [i64 -5804747870239218107, i64 -5940372180008502312, i64 179945285693], [3 x i64] [i64 7707081716407945022, i64 -2709522533706520877, i64 61677971778], [3 x i64] [i64 417638323657040024, i64 2358380859011605513, i64 66853116489], [3 x i64] [i64 -2008696366017102516, i64 -8403771359872511910, i64 73127848082], [3 x i64] [i64 -3596635966666245300, i64 -5022346800939909121, i64 146544430641], [3 x i64] [i64 -8023453265804830781, i64 6867102315755663029, i64 49727738034], [3 x i64] [i64 -1495581763407212302, i64 8690748404825506734, i64 178372266362], [3 x i64] [i64 2752437506572397322, i64 956229930815387710, i64 122471126415], [3 x i64] [i64 3925815842962784589, i64 7734449506297687888, i64 143051837328], [3 x i64] [i64 5274166674003605291, i64 -2114559112025703465, i64 144419285347], [3 x i64] [i64 5538963350863452832, i64 -2865966256096782788, i64 99885369520], [3 x i64] [i64 -1546072439270522880, i64 -1042498801764855524, i64 176844635657], [3 x i64] [i64 2326997710751662080, i64 -5245323913215082387, i64 9943486026], [3 x i64] [i64 -6119017912083677184, i64 -1935026416585483538, i64 74715650420], [3 x i64] [i64 5756455743825903616, i64 -4315451581592957554, i64 116895102007], [3 x i64] [i64 3018537650245074944, i64 -17608041843675925, i64 55766058900], [3 x i64] [i64 -1729382256910270464, i64 2563978348305862197, i64 148999045466], [3 x i64] [i64 0, i64 -4206769681562068720, i64 90138993544], [3 x i64] [i64 0, i64 -7282542677610553344, i64 136771950558], [3 x i64] [i64 0, i64 7116971104932986880, i64 222605212570], [3 x i64] [i64 0, i64 -6009114210842181632, i64 154385811776], [3 x i64] [i64 0, i64 -1944850252070649856, i64 64674245265], [3 x i64] [i64 0, i64 -7797419804838592512, i64 145894569456], [3 x i64] [i64 0, i64 7205759403792793600, i64 240577301025], [3 x i64] [i64 0, i64 0, i64 33390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 -6449318314416819562, i64 136396630, i64 0], [3 x i64] [i64 -6955591412439156455, i64 136396630650381753, i64 0], [3 x i64] [i64 -265680815474670344, i64 3016823727048309817, i64 7394076], [3 x i64] [i64 2466921813123869732, i64 -1040770881064927258, i64 28163542341], [3 x i64] [i64 8430880678232179465, i64 8937219978302591747, i64 69943579697], [3 x i64] [i64 6738034873677997533, i64 -3268280876885329299, i64 49484487665], [3 x i64] [i64 7678250951042929246, i64 -6467339446249221022, i64 241822826138], [3 x i64] [i64 1853560606315563193, i64 2006448052689740002, i64 154649404826], [3 x i64] [i64 -3504067480299646498, i64 -2116278752846311751, i64 154108769766], [3 x i64] [i64 4909892170837638183, i64 -1310535189751905063, i64 230885276298], [3 x i64] [i64 -1575594705397419211, i64 140455118208931867, i64 138928955745], [3 x i64] [i64 -2350613484375780805, i64 3964972929179372247, i64 97007614087], [3 x i64] [i64 -5934264886077727334, i64 3378050330022776379, i64 135214941613], [3 x i64] [i64 -1466439093168994306, i64 6065353437512901255, i64 173183124475], [3 x i64] [i64 8640919162749295366, i64 -5677991013854851727, i64 251328803468], [3 x i64] [i64 7862382415464063513, i64 6848720690951013326, i64 140692195490], [3 x i64] [i64 -3912586170699626272, i64 -7493516015124076484, i64 162371269892], [3 x i64] [i64 -5819279519494443672, i64 -2907616221626255450, i64 4593775682], [3 x i64] [i64 2456849734836299173, i64 -3911890425973953119, i64 66842377808], [3 x i64] [i64 -18491876011723703, i64 1506909603576368170, i64 80787935995], [3 x i64] [i64 7244734215936736255, i64 5475702579938239025, i64 251081689733], [3 x i64] [i64 -3690569023204781529, i64 -6406996699723768284, i64 133296838431], [3 x i64] [i64 6764116534566945922, i64 -874344935948653156, i64 31652676012], [3 x i64] [i64 1588822142405565521, i64 869552790852091236, i64 172952601666], [3 x i64] [i64 -1393478448865709564, i64 4549585778048181804, i64 66047138551], [3 x i64] [i64 -1449852481949552409, i64 4121918231767210357, i64 247246633539], [3 x i64] [i64 8565556232370585876, i64 1558397953312543179, i64 67223449635], [3 x i64] [i64 -3981783714563664996, i64 6067524298738069781, i64 35084480922], [3 x i64] [i64 5813189542048784035, i64 5811095224555517056, i64 154328921151], [3 x i64] [i64 -8707503046827524591, i64 6440894514158997188, i64 63315020103], [3 x i64] [i64 -271675538034248706, i64 4612748874388784257, i64 71349161591], [3 x i64] [i64 -7884046861647789705, i64 -8538642642959738249, i64 119250057617], [3 x i64] [i64 4264834835660801368, i64 -3296726082797361117, i64 145537119254], [3 x i64] [i64 -5427677630019425300, i64 -976317809019492377, i64 22821284120], [3 x i64] [i64 1828040177823321846, i64 -8831582976857643890, i64 24947073705], [3 x i64] [i64 -7206374243332575948, i64 -9218811941585409392, i64 169521238927], [3 x i64] [i64 8886938465302549874, i64 4794113194321211621, i64 143500247203], [3 x i64] [i64 -8461503760119863291, i64 391512698859146347, i64 163259889397], [3 x i64] [i64 722909126956573766, i64 -1237085195640895774, i64 245021223945], [3 x i64] [i64 5493363474638452381, i64 3077364726606876150, i64 9932937477], [3 x i64] [i64 -6036208794496431125, i64 1952989567673965814, i64 5166824276], [3 x i64] [i64 -7903635155342682518, i64 -7273883396786365167, i64 84105871776], [3 x i64] [i64 -5492835057184727621, i64 -1108665528924604377, i64 160605681990], [3 x i64] [i64 -1940801927836963447, i64 4593380466519703278, i64 70939899121], [3 x i64] [i64 -6018149693317535819, i64 786884753602720052, i64 241249007654], [3 x i64] [i64 7528259605829768337, i64 -597868251241531077, i64 38042657107], [3 x i64] [i64 -299296473666740305, i64 2899664567187130618, i64 83967589497], [3 x i64] [i64 -6425674642593367705, i64 2973178834961857409, i64 121157191131], [3 x i64] [i64 -6626759004043889110, i64 -7329290932532714889, i64 219161176347], [3 x i64] [i64 -8044866959641398802, i64 7535238370146462002, i64 27602678342], [3 x i64] [i64 4611631138117837942, i64 -8200568606418686168, i64 70408486090], [3 x i64] [i64 -1245930675102299199, i64 1203128834127050464, i64 202555446285], [3 x i64] [i64 -4346277936155892849, i64 -3928695114630631958, i64 13065221744], [3 x i64] [i64 -558967304884042315, i64 1553474987376920024, i64 112787025011], [3 x i64] [i64 -5814087215739464347, i64 -3490171692878603247, i64 115084214047], [3 x i64] [i64 8923681664054686256, i64 7594162606042048292, i64 31810797413], [3 x i64] [i64 6213926103737837599, i64 -3985447926420740328, i64 101411680379], [3 x i64] [i64 1233118281776157762, i64 -141316345578063351, i64 123783948434], [3 x i64] [i64 30716279628678784, i64 -8193535134361641740, i64 146992339225], [3 x i64] [i64 -2671009422811004928, i64 6446028915490812012, i64 25555827570], [3 x i64] [i64 976806005729918976, i64 -5460680396752119359, i64 114349439927], [3 x i64] [i64 -5986645220429660160, i64 -8677029375736788809, i64 183703975922], [3 x i64] [i64 5635665595421687808, i64 97429465146664592, i64 242529617295], [3 x i64] [i64 1805943450575568896, i64 -2051172345501755748, i64 143005281661], [3 x i64] [i64 -6917529027641081856, i64 6331668478323650406, i64 125888805724], [3 x i64] [i64 0, i64 -316832227415344576, i64 92343240435], [3 x i64] [i64 0, i64 -8556649508833427456, i64 243982824490], [3 x i64] [i64 0, i64 -6155887416721801216, i64 42536143100], [3 x i64] [i64 0, i64 8498454992640802816, i64 252666288674], [3 x i64] [i64 0, i64 5341660584200896512, i64 34460702168], [3 x i64] [i64 0, i64 -9158069842257903616, i64 216289572000], [3 x i64] [i64 0, i64 1152921504606846976, i64 160503540039], [3 x i64] [i64 0, i64 0, i64 71062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 4564018338575530435, i64 2081, i64 0], [3 x i64] [i64 -1893306827258039602, i64 2081247415929, i64 0], [3 x i64] [i64 4339777136957372927, i64 -3234664399281968977, i64 112], [3 x i64] [i64 -7280707154896919, i64 -8266935946895303283, i64 112824648491], [3 x i64] [i64 1370067356680643003, i64 6066766544199222848, i64 43551848504], [3 x i64] [i64 4210124040914115013, i64 6625308131806923532, i64 56328880073], [3 x i64] [i64 -7754518447566941896, i64 9122786786400665713, i64 201359158673], [3 x i64] [i64 -6853887399814167272, i64 -6513863295070400296, i64 145494547262], [3 x i64] [i64 -8162264842482145347, i64 3884040911779255011, i64 62646882763], [3 x i64] [i64 4961071383534266431, i64 -5004926558072193744, i64 203210554279], [3 x i64] [i64 -7486132522263864628, i64 -6818166217687198790, i64 167728682387], [3 x i64] [i64 -3830347350593932407, i64 -5150087148189307962, i64 147630386468], [3 x i64] [i64 1025604265437492803, i64 5020720704545399398, i64 36720813216], [3 x i64] [i64 -6735155618817372438, i64 -4324770467210536922, i64 160272173814], [3 x i64] [i64 5580373263251565705, i64 3642481034345420114, i64 246765553723], [3 x i64] [i64 -4337409420676402685, i64 -8601207835139854848, i64 59197459292], [3 x i64] [i64 2899414033769399895, i64 -791340501513865260, i64 92533727588], [3 x i64] [i64 -5213286838816743469, i64 8377495365136654029, i64 100957101345], [3 x i64] [i64 3287946691509034862, i64 -4733061424100526190, i64 33454144933], [3 x i64] [i64 5488480288717445911, i64 1367709905452854731, i64 165743420226], [3 x i64] [i64 -6759511019835188986, i64 -8465276371982342936, i64 66074143702], [3 x i64] [i64 6783772100089274577, i64 6277920117543306205, i64 214541096448], [3 x i64] [i64 7898291058728402485, i64 -9102632613290849890, i64 340326731], [3 x i64] [i64 4423684977486598491, i64 4918507011364617264, i64 75506545297], [3 x i64] [i64 2750833684599526706, i64 6554777203830755259, i64 145266632799], [3 x i64] [i64 -2777054243220525907, i64 4198262173120265648, i64 95355335184], [3 x i64] [i64 -3329436799494597099, i64 8080325935698446819, i64 16227588248], [3 x i64] [i64 8148639818575698175, i64 -5649110199509459883, i64 152438035346], [3 x i64] [i64 -5440259647630556715, i64 8376502502208665497, i64 146693761122], [3 x i64] [i64 -8159248015864038090, i64 -8554770686916202443, i64 98454091110], [3 x i64] [i64 -4286868040743019186, i64 -3569313794705756154, i64 102536244951], [3 x i64] [i64 -2704531877244003597, i64 8759933935842067041, i64 215806507111], [3 x i64] [i64 2892220461917134150, i64 3753418510388703513, i64 103474876970], [3 x i64] [i64 7487151560715393883, i64 2961383332545305985, i64 42203473225], [3 x i64] [i64 7245756744165177933, i64 2497674184068629507, i64 73160536912], [3 x i64] [i64 3067122860671533987, i64 -3202200002967246164, i64 80135399188], [3 x i64] [i64 8135043905834122525, i64 45953573565810823, i64 20826408390], [3 x i64] [i64 -3716724704788529044, i64 3960077421351906445, i64 198002491148], [3 x i64] [i64 495969939682055458, i64 3173330011013883118, i64 12214676227], [3 x i64] [i64 5617761407265775598, i64 -7420477854163792456, i64 3172026564], [3 x i64] [i64 2087044847072781811, i64 8886757764964685632, i64 196597735089], [3 x i64] [i64 -2517069841648348286, i64 -4494421943791461137, i64 177481752103], [3 x i64] [i64 8658086469608285873, i64 4127250666614902202, i64 39756356898], [3 x i64] [i64 -76872282929238046, i64 -796785569644244705, i64 34223738706], [3 x i64] [i64 3545648451947416750, i64 -5177438714707334743, i64 82956806167], [3 x i64] [i64 -5099367280941621657, i64 -2210150639877603773, i64 23719330484], [3 x i64] [i64 -3964579613871348591, i64 -4865813677027127559, i64 180880187493], [3 x i64] [i64 8899577765623565820, i64 421976357197961116, i64 101736223712], [3 x i64] [i64 7095320096604405719, i64 2962130818798626533, i64 224022875384], [3 x i64] [i64 2968593824439315788, i64 8234383947306356345, i64 248160577433], [3 x i64] [i64 -5825335750096965980, i64 4380469931801381425, i64 153446386848], [3 x i64] [i64 3954422936414648259, i64 -3166856604682495700, i64 160237465750], [3 x i64] [i64 -1303013986131861425, i64 8534542821713755552, i64 150828324359], [3 x i64] [i64 5033045529399041876, i64 7814613482565088782, i64 7462658493], [3 x i64] [i64 -2589095551715029835, i64 -4674789669004228392, i64 189423631045], [3 x i64] [i64 -1791170587210442075, i64 4568173274762548144, i64 197746579144], [3 x i64] [i64 -1794589634519475758, i64 8105292616250821343, i64 200247641169], [3 x i64] [i64 -429793473545420978, i64 2923678426777275612, i64 81439388793], [3 x i64] [i64 2086292996072613910, i64 1808633176918384049, i64 121158492925], [3 x i64] [i64 -1122281488514752095, i64 -328101464249112647, i64 253098046200], [3 x i64] [i64 -7367592610524624384, i64 -308579897845190746, i64 248982213583], [3 x i64] [i64 5239846817488961536, i64 4031433690465792404, i64 207983271850], [3 x i64] [i64 2778806963520143360, i64 5012226396942308537, i64 170218544458], [3 x i64] [i64 6240890740138835968, i64 7889712298793536835, i64 74271713337], [3 x i64] [i64 -1196092729159843840, i64 -4945981677165922812, i64 57427702160], [3 x i64] [i64 4197354852709302272, i64 501020624068841347, i64 144731877796], [3 x i64] [i64 -9223372036854775808, i64 8370653768288261750, i64 164027160382], [3 x i64] [i64 0, i64 647579990023635200, i64 62453774050], [3 x i64] [i64 0, i64 -7340174766528397312, i64 226035105381], [3 x i64] [i64 0, i64 -7649282459816689664, i64 101602088328], [3 x i64] [i64 0, i64 -819513398260662272, i64 136585331566], [3 x i64] [i64 0, i64 -6249008365767229440, i64 110955574089], [3 x i64] [i64 0, i64 -5575456338684674048, i64 73661240577], [3 x i64] [i64 0, i64 4611686018427387904, i64 1697753906], [3 x i64] [i64 0, i64 0, i64 50250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 5654803392547571318, i64 31757315, i64 0], [3 x i64] [i64 2931628102185393332, i64 31757315306547506, i64 0], [3 x i64] [i64 -2482046455729339311, i64 -8994940499197530011, i64 1721567], [3 x i64] [i64 450380868305846606, i64 8662766454758138424, i64 223512383298], [3 x i64] [i64 -3815610542894985468, i64 9207992007314947035, i64 66469609510], [3 x i64] [i64 31969822783742095, i64 -1328141212418349814, i64 38499166246], [3 x i64] [i64 -8009475044323808371, i64 -7260183467963951649, i64 38928001320], [3 x i64] [i64 -3250597577332159183, i64 -7941194252176754769, i64 40606424665], [3 x i64] [i64 4409099735137480938, i64 -313076543220872400, i64 89569506996], [3 x i64] [i64 -7801756158806303498, i64 -7668608302465220817, i64 180983028086], [3 x i64] [i64 3154431617534062973, i64 -1358758296675784225, i64 118584283910], [3 x i64] [i64 -6744687742461591162, i64 2639185991757283040, i64 6926341565], [3 x i64] [i64 -2871429007744292502, i64 5401720287293896400, i64 189143070559], [3 x i64] [i64 -7686996464229501390, i64 -8630248681075656383, i64 95292827843], [3 x i64] [i64 -5908507419748807898, i64 -8404692573619516626, i64 195532153281], [3 x i64] [i64 -588801409731546213, i64 -6817054535853166878, i64 193544380702], [3 x i64] [i64 -7003739918958738405, i64 2099086731766010483, i64 30630446733], [3 x i64] [i64 4004313188770806737, i64 -4781206175193093022, i64 141113791719], [3 x i64] [i64 -1311871118885368388, i64 -2071072009040060852, i64 231740810293], [3 x i64] [i64 2659553912986171234, i64 7770550512184564348, i64 53887726961], [3 x i64] [i64 -8944889772740413690, i64 6197048880720627314, i64 113421242387], [3 x i64] [i64 -3918574107408533466, i64 -483149955186445335, i64 19335942692], [3 x i64] [i64 -274652077193649838, i64 8255454642407818663, i64 36973808388], [3 x i64] [i64 1133541705604751035, i64 -1702542116160053207, i64 4447529092], [3 x i64] [i64 -166394085720910119, i64 -1004238656506691894, i64 132907705006], [3 x i64] [i64 -8510728198997215230, i64 6383975767786687150, i64 174945560113], [3 x i64] [i64 -2570023673968862002, i64 -3201301108711215821, i64 49346076019], [3 x i64] [i64 8618117825152456982, i64 2910016124519524433, i64 115826457119], [3 x i64] [i64 8085525680745921564, i64 3847913871169988463, i64 31157752290], [3 x i64] [i64 8072355444669730953, i64 -1236292561119492439, i64 226208595828], [3 x i64] [i64 -9051713568942703322, i64 -547335163718097471, i64 116932980445], [3 x i64] [i64 3537903114058185903, i64 5920601932753251608, i64 221970328901], [3 x i64] [i64 2126094743961928691, i64 -1924962178600571872, i64 69320956473], [3 x i64] [i64 289185362555601115, i64 3697493405554698771, i64 57895647591], [3 x i64] [i64 -1536806572259422002, i64 2816108280295732065, i64 103200441519], [3 x i64] [i64 -3997102013349052558, i64 -4195665301653152628, i64 175152661535], [3 x i64] [i64 -6012925165211307223, i64 4543066550096031417, i64 31772552528], [3 x i64] [i64 -6562300039131543035, i64 3099369389734296977, i64 80246280131], [3 x i64] [i64 988625838444140793, i64 5243484113636490986, i64 195168017151], [3 x i64] [i64 1675370907158909973, i64 6823370511605197226, i64 255284249843], [3 x i64] [i64 -2526557798392617549, i64 -7050453796084909674, i64 243369895656], [3 x i64] [i64 5600921198503757726, i64 -2512382665271985517, i64 232617794133], [3 x i64] [i64 -7989386911933209875, i64 -3507471842774419662, i64 85863803462], [3 x i64] [i64 -6221387307933811523, i64 7500666177940329347, i64 70809859570], [3 x i64] [i64 4486633318598164537, i64 4806714453065462270, i64 242406611928], [3 x i64] [i64 -8144257470830170255, i64 -6888892826441110129, i64 216260572512], [3 x i64] [i64 -2910315462408312075, i64 -7791220916502734235, i64 96626552371], [3 x i64] [i64 -6420617427754089013, i64 -3677143897218670406, i64 51577637067], [3 x i64] [i64 -3568775932567428065, i64 -1758248532783756449, i64 203800661629], [3 x i64] [i64 734560801645383190, i64 909793965395524173, i64 125904685156], [3 x i64] [i64 -2797800928798469978, i64 -5722153123947847860, i64 100049320029], [3 x i64] [i64 -4782561211706315970, i64 -7636004416394725221, i64 93689801457], [3 x i64] [i64 3895127525902132786, i64 2431218615388671301, i64 241586051371], [3 x i64] [i64 5249187334214137467, i64 4235001167959059286, i64 43131796625], [3 x i64] [i64 -7804484010350524111, i64 6253317787396334247, i64 145229579873], [3 x i64] [i64 783598951897779422, i64 -8912218510639179718, i64 97338993036], [3 x i64] [i64 5538576558607624843, i64 8392783992374030728, i64 140516867666], [3 x i64] [i64 -2472162886144942005, i64 -2090487054477904076, i64 82454973731], [3 x i64] [i64 7474269406918257428, i64 -5550410072188459739, i64 35886674469], [3 x i64] [i64 8045286838779138019, i64 1427636373320877084, i64 37699111667], [3 x i64] [i64 8184246376556341732, i64 -2329988342414508095, i64 243077392322], [3 x i64] [i64 1493267152679331840, i64 -2501110162545564779, i64 194873691078], [3 x i64] [i64 -8267669262486732800, i64 7510154241072743838, i64 198864414546], [3 x i64] [i64 3892499202005008384, i64 3571560509790395119, i64 82407126277], [3 x i64] [i64 -8105570857784442880, i64 3576991649007035076, i64 5193614683], [3 x i64] [i64 6230307872002015232, i64 -2936782180958819173, i64 91193909105], [3 x i64] [i64 -9151314442816847872, i64 -656952714356202238, i64 113840796718], [3 x i64] [i64 0, i64 -115516742629813302, i64 46964386521], [3 x i64] [i64 0, i64 -3060031190609075200, i64 217993737824], [3 x i64] [i64 0, i64 -4364282018680799232, i64 96834115376], [3 x i64] [i64 0, i64 -5527700944944365568, i64 48763411797], [3 x i64] [i64 0, i64 6125373368465096704, i64 85700342731], [3 x i64] [i64 0, i64 -6110751375644164096, i64 203332057155], [3 x i64] [i64 0, i64 2774217370460225536, i64 67668735504], [3 x i64] [i64 0, i64 0, i64 16150390625], [3 x i64] [i64 0, i64 0, i64 97000000000], [3 x i64] [i64 -7781289445713928328, i64 484, i64 0], [3 x i64] [i64 -1643206180941988784, i64 484578175453, i64 0], [3 x i64] [i64 8099123106849104444, i64 4962829537462579598, i64 26], [3 x i64] [i64 7077413686679401728, i64 5711259460785241095, i64 26269035528], [3 x i64] [i64 -4910107715337101950, i64 -4600849466504654172, i64 8309607995], [3 x i64] [i64 7280632235418610318, i64 -6330111017072548289, i64 59750587450], [3 x i64] [i64 6187823673116858809, i64 2965791047992089560, i64 58656843994], [3 x i64] [i64 8624343686231740255, i64 -2424746622393589087, i64 218160775854], [3 x i64] [i64 806211610822132771, i64 3942052271663803856, i64 174868554222], [3 x i64] [i64 -58665840507360734, i64 -2776867658927111694, i64 238213699081], [3 x i64] [i64 7628864426595573600, i64 -7852328158303406330, i64 9849465702], [3 x i64] [i64 4530799784343874981, i64 -7656923520677630239, i64 102574324437], [3 x i64] [i64 8561580552078486438, i64 3989990218583987244, i64 213584917344], [3 x i64] [i64 -5097629122487552022, i64 2937341169808224563, i64 96216297803], [3 x i64] [i64 -8417599335200559844, i64 -2179307515125014773, i64 75159233583], [3 x i64] [i64 -5844836875793282637, i64 -2225163710894925823, i64 47881859502], [3 x i64] [i64 1329580921391066941, i64 -8751306471389341786, i64 174879373633], [3 x i64] [i64 3198179786356761112, i64 -7716990916915836490, i64 65525590725], [3 x i64] [i64 -7039990660074897474, i64 2609241432056861929, i64 197581661084], [3 x i64] [i64 -7314931113184369526, i64 8462663743997037565, i64 156141447261], [3 x i64] [i64 -4147107320064324408, i64 -3453321929801357547, i64 93458761920], [3 x i64] [i64 -5482629389065888290, i64 1307443894537745373, i64 192812795043], [3 x i64] [i64 5019257593846306316, i64 -8429486634289722351, i64 163070876675], [3 x i64] [i64 6929086798159998121, i64 -1691972063738773725, i64 3543036613], [3 x i64] [i64 -86978306775847967, i64 -6724171042106689229, i64 197908278010], [3 x i64] [i64 -8453667838957488418, i64 7363764277467092384, i64 250635481957], [3 x i64] [i64 3257189215046584509, i64 6733958494847390772, i64 101399190461], [3 x i64] [i64 2905234736672690348, i64 8799796600227451045, i64 189365048621], [3 x i64] [i64 -6381758771629881560, i64 -7934720878967301790, i64 45477037929], [3 x i64] [i64 -4131648008766751686, i64 4572542132337197059, i64 105569857919], [3 x i64] [i64 -6502773030157577578, i64 -5846243617952134784, i64 127247878005], [3 x i64] [i64 -5973970921589621969, i64 7873789864743195199, i64 117683074498], [3 x i64] [i64 7791259796982183085, i64 -2721892397383880077, i64 194426839003], [3 x i64] [i64 -1579914631658464930, i64 8748017220462413167, i64 219852445917], [3 x i64] [i64 3702498393844653053, i64 -4274154550949085168, i64 221474230963], [3 x i64] [i64 2057239613841701716, i64 -8926198482220137848, i64 179768297617], [3 x i64] [i64 -1244774096971265390, i64 -5958192985316981394, i64 145516109810], [3 x i64] [i64 -175177568266089976, i64 1135798823651241684, i64 242677005711], [3 x i64] [i64 -78234958292431812, i64 -7278018463589389644, i64 143061571777], [3 x i64] [i64 7613923684154518587, i64 -8866639124991042790, i64 193605457828], [3 x i64] [i64 -461938988994686384, i64 -1808021356799812851, i64 164519338529], [3 x i64] [i64 4220802739051410373, i64 -2714020061361278819, i64 33901986965], [3 x i64] [i64 -634285030898735856, i64 -6177021883688337474, i64 149852872677], [3 x i64] [i64 -7817217984044946309, i64 -5336088157397579029, i64 229665142972], [3 x i64] [i64 -1009300805893003143, i64 6618112997062866867, i64 188710730081], [3 x i64] [i64 -5940372180008502312, i64 8457936459015989309, i64 97358768624], [3 x i64] [i64 -2709522533706520877, i64 3329167139937134914, i64 240458505654], [3 x i64] [i64 2358380859011605513, i64 5245511557216705097, i64 182180474512], [3 x i64] [i64 -8403771359872511910, i64 5655931353280440466, i64 144284359751], [3 x i64] [i64 -5022346800939909121, i64 604622132328697393, i64 71306608653], [3 x i64] [i64 6867102315755663029, i64 8673282619234652338, i64 13032776631], [3 x i64] [i64 8690748404825506734, i64 -1517266640651105926, i64 183470179592], [3 x i64] [i64 956229930815387710, i64 -7409791664456002161, i64 8917748810], [3 x i64] [i64 7734449506297687888, i64 -247351883539165296, i64 74598314388], [3 x i64] [i64 -2114559112025703465, i64 -8763627981829215901, i64 148986591027], [3 x i64] [i64 -2865966256096782788, i64 2993913337608915120, i64 51524922775], [3 x i64] [i64 -1042498801764855524, i64 4490779842162392585, i64 151162300367], [3 x i64] [i64 -5245323913215082387, i64 946849923353644618, i64 207243445663], [3 x i64] [i64 -1935026416585483538, i64 3613491058474899828, i64 159051328837], [3 x i64] [i64 -4315451581592957554, i64 -3822689874705140681, i64 69195887742], [3 x i64] [i64 -17608041843675925, i64 -6358273801717643372, i64 126792771566], [3 x i64] [i64 2563978348305862197, i64 -8374763145984540326, i64 238655317286], [3 x i64] [i64 -4206769681562068720, i64 2833441711428854664, i64 38546003180], [3 x i64] [i64 -7282542677610553344, i64 -791171661845211170, i64 236153601182], [3 x i64] [i64 7116971104932986880, i64 4997642792058747802, i64 158957110498], [3 x i64] [i64 -6009114210842181632, i64 -6957543286073816768, i64 226270922758], [3 x i64] [i64 -1944850252070649856, i64 -5463157847280014703, i64 6622830822], [3 x i64] [i64 -7797419804838592512, i64 -6135593304984488464, i64 230703841619], [3 x i64] [i64 7205759403792793600, i64 8530052476845967905, i64 83667388820], [3 x i64] [i64 0, i64 6282736361499820264, i64 148462415071], [3 x i64] [i64 0, i64 -7109579307780468736, i64 223340587820], [3 x i64] [i64 0, i64 8343856200414134272, i64 44614588933], [3 x i64] [i64 0, i64 -557413696553353216, i64 5452321350], [3 x i64] [i64 0, i64 -716030009554239488, i64 70969782542], [3 x i64] [i64 0, i64 7449235258647511040, i64 14961183935], [3 x i64] [i64 0, i64 -8502796096475496448, i64 191403823852], [3 x i64] [i64 0, i64 0, i64 236539062500], [3 x i64] [i64 0, i64 0, i64 228000000000], [3 x i64] [i64 3016823727048309817, i64 7394076, i64 0], [3 x i64] [i64 -1040770881064927258, i64 7394076163542341, i64 0], [3 x i64] [i64 8937219978302591747, i64 -6050498952468868047, i64 400833], [3 x i64] [i64 -3268280876885329299, i64 -8197747425112663055, i64 193672001794], [3 x i64] [i64 -6467339446249221022, i64 -7189248969995616614, i64 2555599221], [3 x i64] [i64 2006448052689740002, i64 7555396579247433114, i64 117610270032], [3 x i64] [i64 -2116278752846311751, i64 4805022328730367462, i64 80409578869], [3 x i64] [i64 -1310535189751905063, i64 7056637817080232586, i64 117260480782], [3 x i64] [i64 140455118208931867, i64 -7635332589891116703, i64 14382541102], [3 x i64] [i64 3964972929179372247, i64 -1484337369214306169, i64 46586087790], [3 x i64] [i64 3378050330022776379, i64 -372226754592356947, i64 110919533909], [3 x i64] [i64 6065353437512901255, i64 3702019776117654523, i64 85979821547], [3 x i64] [i64 -5677991013854851727, i64 3551977551381082764, i64 235200686894], [3 x i64] [i64 6848720690951013326, i64 -2004135087773546334, i64 46192553088], [3 x i64] [i64 -7493516015124076484, i64 3580046275479139588, i64 128891355619], [3 x i64] [i64 -2907616221626255450, i64 8737412692712715330, i64 227194074697], [3 x i64] [i64 -3911890425973953119, i64 3082033243045084752, i64 73473656091], [3 x i64] [i64 1506909603576368170, i64 -2045720316868422917, i64 27167077356], [3 x i64] [i64 5475702579938239025, i64 7520296082779572869, i64 236889101279], [3 x i64] [i64 -6406996699723768284, i64 -8592639307557087457, i64 223407676067], [3 x i64] [i64 -874344935948653156, i64 -4277555271061241428, i64 163534192089], [3 x i64] [i64 869552790852091236, i64 2018609909210367042, i64 217768113264], [3 x i64] [i64 4549585778048181804, i64 8270271948267674359, i64 112109429062], [3 x i64] [i64 4121918231767210357, i64 -6126405470814979517, i64 70448332340], [3 x i64] [i64 1558397953312543179, i64 -908207387719471069, i64 52667886893], [3 x i64] [i64 6067524298738069781, i64 -2612829456752791142, i64 45950765978], [3 x i64] [i64 5811095224555517056, i64 6137696141415969855, i64 154858358231], [3 x i64] [i64 6440894514158997188, i64 -8689253605290112697, i64 215332725174], [3 x i64] [i64 4612748874388784257, i64 3566639201356598903, i64 182528954618], [3 x i64] [i64 -8538642642959738249, i64 -8685844037935597167, i64 250193347898], [3 x i64] [i64 -3296726082797361117, i64 3873778773990716438, i64 58529139451], [3 x i64] [i64 -976317809019492377, i64 2295668377270167832, i64 251209997968], [3 x i64] [i64 -8831582976857643890, i64 1791721710912807593, i64 144124448432], [3 x i64] [i64 -9218811941585409392, i64 -7875735066786868337, i64 176097129428], [3 x i64] [i64 4794113194321211621, i64 -8605952140931366749, i64 212573055546], [3 x i64] [i64 391512698859146347, i64 -6921279117148277003, i64 58533470399], [3 x i64] [i64 -1237085195640895774, i64 4435781488897895433, i64 191624796707], [3 x i64] [i64 3077364726606876150, i64 6395563367070996741, i64 35240464196], [3 x i64] [i64 1952989567673965814, i64 -2908053278573888684, i64 68346704184], [3 x i64] [i64 -7273883396786365167, i64 -2152185260146179680, i64 56842354115], [3 x i64] [i64 -1108665528924604377, i64 4942096228426070342, i64 195883329803], [3 x i64] [i64 4593380466519703278, i64 6910116424372647153, i64 11267911573], [3 x i64] [i64 786884753602720052, i64 -523343403948722138, i64 149374598161], [3 x i64] [i64 -597868251241531077, i64 4134686917293039955, i64 17971629497], [3 x i64] [i64 2899664567187130618, i64 -1589641610593452935, i64 185224141826], [3 x i64] [i64 2973178834961857409, i64 -7082422564934384165, i64 2913825355], [3 x i64] [i64 -7329290932532714889, i64 7966947780972783899, i64 75616061103], [3 x i64] [i64 7535238370146462002, i64 -7185688377782865338, i64 175431889104], [3 x i64] [i64 -8200568606418686168, i64 -9219703636355957558, i64 208610463052], [3 x i64] [i64 1203128834127050464, i64 7185344074282882061, i64 76500198864], [3 x i64] [i64 -3928695114630631958, i64 -4248887925098973584, i64 208389518282], [3 x i64] [i64 1553474987376920024, i64 885688687260429427, i64 202769667324], [3 x i64] [i64 -3490171692878603247, i64 -1038927913329246433, i64 252048013279], [3 x i64] [i64 7594162606042048292, i64 -634015369903194267, i64 223943679604], [3 x i64] [i64 -3985447926420740328, i64 -1326545881745231749, i64 116965629957], [3 x i64] [i64 -141316345578063351, i64 -6354792025334142830, i64 5928087803], [3 x i64] [i64 -8193535134361641740, i64 405056939269888281, i64 251655506034], [3 x i64] [i64 6446028915490812012, i64 -5961303394257142926, i64 114021958180], [3 x i64] [i64 -5460680396752119359, i64 8394369900823444407, i64 36676837095], [3 x i64] [i64 -8677029375736788809, i64 2877421667354294258, i64 231455059704], [3 x i64] [i64 97429465146664592, i64 2676980714750756239, i64 248155985341], [3 x i64] [i64 -2051172345501755748, i64 6119309228579057021, i64 189145119415], [3 x i64] [i64 6331668478323650406, i64 -243487927176217764, i64 183331728417], [3 x i64] [i64 -316832227415344576, i64 351919978865493747, i64 33986800493], [3 x i64] [i64 -8556649508833427456, i64 5190010931882390570, i64 109019077620], [3 x i64] [i64 -6155887416721801216, i64 6982466386088036604, i64 244281351056], [3 x i64] [i64 8498454992640802816, i64 4707293888784996898, i64 144378520261], [3 x i64] [i64 5341660584200896512, i64 690306801165964760, i64 197255182913], [3 x i64] [i64 -9158069842257903616, i64 -5989973112430594912, i64 65037421606], [3 x i64] [i64 1152921504606846976, i64 -1500651584415487673, i64 38675282906], [3 x i64] [i64 0, i64 -7348339899843366240, i64 218918649514], [3 x i64] [i64 0, i64 -3294673107856244736, i64 170601645695], [3 x i64] [i64 0, i64 -1076652711669137408, i64 127821395412], [3 x i64] [i64 0, i64 -8304805521538416640, i64 212941634539], [3 x i64] [i64 0, i64 -7859755517063725056, i64 235549795590], [3 x i64] [i64 0, i64 -6276891980647628800, i64 6573921799], [3 x i64] [i64 0, i64 -1729382256910270464, i64 7659729003], [3 x i64] [i64 0, i64 0, i64 107906250000], [3 x i64] [i64 0, i64 0, i64 16000000000], [3 x i64] [i64 -3234664399281968977, i64 112, i64 0], [3 x i64] [i64 -8266935946895303283, i64 112824648491, i64 0], [3 x i64] [i64 6066766544199222848, i64 2144184049294538808, i64 6], [3 x i64] [i64 6625308131806923532, i64 4108002197393276873, i64 6116236450], [3 x i64] [i64 9122786786400665713, i64 6446230217393892753, i64 162222695245], [3 x i64] [i64 -6513863295070400296, i64 5571068025259989822, i64 77349450840], [3 x i64] [i64 3884040911779255011, i64 -3641931404837023285, i64 88302008202], [3 x i64] [i64 -5004926558072193744, i64 -1076815585147028569, i64 138802570502], [3 x i64] [i64 -6818166217687198790, i64 2967474173531035027, i64 6941625710], [3 x i64] [i64 -5150087148189307962, i64 5291425437992807716, i64 110160867097], [3 x i64] [i64 5020720704545399398, i64 -4227196879970163552, i64 25286848747], [3 x i64] [i64 -4324770467210536922, i64 -726430426551334154, i64 235770843197], [3 x i64] [i64 3642481034345420114, i64 -6111893445418973125, i64 61960620127], [3 x i64] [i64 -8601207835139854848, i64 7818499847417334620, i64 95668673592], [3 x i64] [i64 -791340501513865260, i64 136007040922198372, i64 56423841726], [3 x i64] [i64 8377495365136654029, i64 8523477092112604449, i64 190007372956], [3 x i64] [i64 -4733061424100526190, i64 367934822655966629, i64 156462058619], [3 x i64] [i64 1367709905452854731, i64 -5481756386654821566, i64 123019945786], [3 x i64] [i64 -8465276371982342936, i64 -3179708061288666154, i64 58702833390], [3 x i64] [i64 6277920117543306205, i64 -7303843808958786048, i64 238827627680], [3 x i64] [i64 -9102632613290849890, i64 -4766562525931833013, i64 160604057833], [3 x i64] [i64 4918507011364617264, i64 -5444821147948125551, i64 233741604127], [3 x i64] [i64 6554777203830755259, i64 2397730045956515935, i64 31704835654], [3 x i64] [i64 4198262173120265648, i64 4482395522588406288, i64 70129981206], [3 x i64] [i64 8080325935698446819, i64 3255525722490493080, i64 22242991148], [3 x i64] [i64 -5649110199509459883, i64 836222287193822098, i64 44176482403], [3 x i64] [i64 8376502502208665497, i64 420898743993182306, i64 99045331701], [3 x i64] [i64 -8554770686916202443, i64 -6794094100352977562, i64 245022816966], [3 x i64] [i64 -3569313794705756154, i64 -3388341347047641385, i64 198631691420], [3 x i64] [i64 8759933935842067041, i64 -8846609578501212057, i64 156816317647], [3 x i64] [i64 3753418510388703513, i64 -3820400749720546774, i64 207520424333], [3 x i64] [i64 2961383332545305985, i64 6813981265331086665, i64 141792895660], [3 x i64] [i64 2497674184068629507, i64 -8164998784919063728, i64 172369386664], [3 x i64] [i64 -3202200002967246164, i64 -876914726633789676, i64 168557374528], [3 x i64] [i64 45953573565810823, i64 7654580675237889478, i64 64952462357], [3 x i64] [i64 3960077421351906445, i64 -2251905424023339252, i64 21414955649], [3 x i64] [i64 3173330011013883118, i64 6495102772252453635, i64 129877923962], [3 x i64] [i64 -7420477854163792456, i64 -3511584220889790268, i64 122352100226], [3 x i64] [i64 8886757764964685632, i64 -1064864210267971919, i64 130809636637], [3 x i64] [i64 -4494421943791461137, i64 9062335510435372583, i64 29942273595], [3 x i64] [i64 4127250666614902202, i64 7569219009130126626, i64 59491270192], [3 x i64] [i64 -796785569644244705, i64 -5794619905533358254, i64 48410328184], [3 x i64] [i64 -5177438714707334743, i64 8940200224697247767, i64 120685873025], [3 x i64] [i64 -2210150639877603773, i64 5600570701927432884, i64 129484649225], [3 x i64] [i64 -4865813677027127559, i64 2018432801986093157, i64 9303607546], [3 x i64] [i64 421976357197961116, i64 8235849749361824736, i64 250109419461], [3 x i64] [i64 2962130818798626533, i64 -8741646785727181576, i64 197446466309], [3 x i64] [i64 8234383947306356345, i64 3517483139049842585, i64 5526114378], [3 x i64] [i64 4380469931801381425, i64 958281614186777760, i64 74190683143], [3 x i64] [i64 -3166856604682495700, i64 7336473432636108950, i64 7051948550], [3 x i64] [i64 8534542821713755552, i64 -5491360153532787193, i64 6397711021], [3 x i64] [i64 7814613482565088782, i64 -7711274947428277827, i64 173702312769], [3 x i64] [i64 -4674789669004228392, i64 8637888232514730693, i64 65581970947], [3 x i64] [i64 4568173274762548144, i64 6806336737533581000, i64 3468260859], [3 x i64] [i64 8105292616250821343, i64 -2304174400837221295, i64 251368972253], [3 x i64] [i64 2923678426777275612, i64 8141285259947963513, i64 221875090455], [3 x i64] [i64 1808633176918384049, i64 5220241098754220797, i64 23441339958], [3 x i64] [i64 -328101464249112647, i64 154438799943119608, i64 54282989837], [3 x i64] [i64 -308579897845190746, i64 2226876628677628879, i64 13008372144], [3 x i64] [i64 4031433690465792404, i64 -1227186992488194134, i64 176120719223], [3 x i64] [i64 5012226396942308537, i64 -3045236925548536502, i64 119933474059], [3 x i64] [i64 7889712298793536835, i64 8842629766613985337, i64 11834917375], [3 x i64] [i64 -4945981677165922812, i64 3180100571546071440, i64 255479359920], [3 x i64] [i64 501020624068841347, i64 7740848704392475044, i64 176172393597], [3 x i64] [i64 8370653768288261750, i64 2014314126623495998, i64 125419632249], [3 x i64] [i64 647579990023635200, i64 -7237178057202665758, i64 121109196187], [3 x i64] [i64 -7340174766528397312, i64 7117166613733441125, i64 155607671791], [3 x i64] [i64 -7649282459816689664, i64 4197646860931880328, i64 239385822375], [3 x i64] [i64 -819513398260662272, i64 5487263271238026094, i64 167227554892], [3 x i64] [i64 -6249008365767229440, i64 -298667848415988919, i64 76297465137], [3 x i64] [i64 -5575456338684674048, i64 9127276943027950849, i64 49983809183], [3 x i64] [i64 4611686018427387904, i64 -8755047948330226894, i64 159494790674], [3 x i64] [i64 0, i64 -5344381811221846400, i64 18525387899], [3 x i64] [i64 0, i64 8929385439893192704, i64 123710280481], [3 x i64] [i64 0, i64 -6555390662965985280, i64 33484062954], [3 x i64] [i64 0, i64 1587423090877399040, i64 234644631560], [3 x i64] [i64 0, i64 3489137423026225152, i64 8086054378], [3 x i64] [i64 0, i64 -5399815953217224704, i64 234189146518], [3 x i64] [i64 0, i64 -6917529027641081856, i64 150707275390], [3 x i64] [i64 0, i64 0, i64 126625000000], [3 x i64] [i64 0, i64 0, i64 64000000000], [3 x i64] [i64 -8994940499197530011, i64 1721567, i64 0], [3 x i64] [i64 8662766454758138424, i64 1721567512383298, i64 0], [3 x i64] [i64 9207992007314947035, i64 6674960280855494694, i64 93326], [3 x i64] [i64 -1328141212418349814, i64 -2067898292226054106, i64 142361850321], [3 x i64] [i64 -7260183467963951649, i64 -839836322752747224, i64 209887899008], [3 x i64] [i64 -7941194252176754769, i64 -5221134914469044647, i64 128954472381], [3 x i64] [i64 -313076543220872400, i64 2668084873338435252, i64 189716961709], [3 x i64] [i64 -7668608302465220817, i64 -3643929768433690250, i64 173144637170], [3 x i64] [i64 -1358758296675784225, i64 8005510553372365574, i64 242802462171], [3 x i64] [i64 2639185991757283040, i64 -5698243930436037187, i64 219433979596], [3 x i64] [i64 5401720287293896400, i64 -8053010168140515489, i64 204691097577], [3 x i64] [i64 -8630248681075656383, i64 603389089974790339, i64 233563445444], [3 x i64] [i64 -8404692573619516626, i64 2033494532597735873, i64 196032709788], [3 x i64] [i64 -6817054535853166878, i64 9204796763694620958, i64 156110235959], [3 x i64] [i64 2099086731766010483, i64 7826260310402107021, i64 55498993032], [3 x i64] [i64 -4781206175193093022, i64 -8324053872024382233, i64 136424262421], [3 x i64] [i64 -2071072009040060852, i64 7438455564568110133, i64 21548752135], [3 x i64] [i64 7770550512184564348, i64 2805412574380520817, i64 7403239484], [3 x i64] [i64 6197048880720627314, i64 7250965427231182867, i64 60152081720], [3 x i64] [i64 -483149955186445335, i64 8136242944826085924, i64 56393075623], [3 x i64] [i64 8255454642407818663, i64 -3089552425753539836, i64 167441066613], [3 x i64] [i64 -1702542116160053207, i64 7369614426695395460, i64 117832515027], [3 x i64] [i64 -1004238656506691894, i64 -7559786528567024978, i64 211399507598], [3 x i64] [i64 6383975767786687150, i64 2030047207417538097, i64 142590183151], [3 x i64] [i64 -3201301108711215821, i64 -6889650245207237261, i64 239110049079], [3 x i64] [i64 2910016124519524433, i64 -3245681534045423073, i64 55626511311], [3 x i64] [i64 3847913871169988463, i64 8846936323343880674, i64 207824051251], [3 x i64] [i64 -1236292561119492439, i64 1485291750116245364, i64 51479593379], [3 x i64] [i64 -547335163718097471, i64 2076024439668322013, i64 163080517827], [3 x i64] [i64 5920601932753251608, i64 7029497773682748741, i64 195112541510], [3 x i64] [i64 -1924962178600571872, i64 -2113210152040801735, i64 70381069837], [3 x i64] [i64 3697493405554698771, i64 2065057316131928423, i64 13885442648], [3 x i64] [i64 2816108280295732065, i64 7800502648925570223, i64 88111946981], [3 x i64] [i64 -4195665301653152628, i64 -1435124106615749601, i64 229422866095], [3 x i64] [i64 4543066550096031417, i64 5368819344429198672, i64 175922201766], [3 x i64] [i64 3099369389734296977, i64 -2847864706955276349, i64 166291044279], [3 x i64] [i64 5243484113636490986, i64 -2052850587673715969, i64 183845616944], [3 x i64] [i64 6823370511605197226, i64 -6404697868612631309, i64 48888714746], [3 x i64] [i64 -7050453796084909674, i64 -3009673645701077272, i64 250652800632], [3 x i64] [i64 -2512382665271985517, i64 -4742174910504904107, i64 120836845264], [3 x i64] [i64 -3507471842774419662, i64 -254260322852558266, i64 208742926182], [3 x i64] [i64 7500666177940329347, i64 5152535865317963250, i64 102986216520], [3 x i64] [i64 4806714453065462270, i64 -934129989775696936, i64 72279319528], [3 x i64] [i64 -6888892826441110129, i64 -3964825723105938080, i64 232949360711], [3 x i64] [i64 -7791220916502734235, i64 -2322324363745546701, i64 71785066366], [3 x i64] [i64 -3677143897218670406, i64 -358732507273738037, i64 126874106543], [3 x i64] [i64 -1758248532783756449, i64 -3437881693010702723, i64 175980553071], [3 x i64] [i64 909793965395524173, i64 -286245429097723804, i64 111813632059], [3 x i64] [i64 -5722153123947847860, i64 3604680497457231965, i64 59984482604], [3 x i64] [i64 -7636004416394725221, i64 5957615565551495921, i64 44195410121], [3 x i64] [i64 2431218615388671301, i64 -918289038747985621, i64 201322962986], [3 x i64] [i64 4235001167959059286, i64 8503772325120113809, i64 42950219451], [3 x i64] [i64 6253317787396334247, i64 8501492578048509537, i64 187460990421], [3 x i64] [i64 -8912218510639179718, i64 2296237701094386060, i64 213460866836], [3 x i64] [i64 8392783992374030728, i64 3753593040591076946, i64 20124479295], [3 x i64] [i64 -2090487054477904076, i64 8518075399775653155, i64 63203482686], [3 x i64] [i64 -5550410072188459739, i64 -5688888397749997019, i64 62461765792], [3 x i64] [i64 1427636373320877084, i64 121631169379748595, i64 160691604742], [3 x i64] [i64 -2329988342414508095, i64 -1767681579130378302, i64 6006593638], [3 x i64] [i64 -2501110162545564779, i64 -7706831328965653562, i64 102904173789], [3 x i64] [i64 7510154241072743838, i64 -9079403395933264046, i64 221582211836], [3 x i64] [i64 3571560509790395119, i64 -6219422560914836219, i64 252507804555], [3 x i64] [i64 3576991649007035076, i64 7241061891859170651, i64 139662844427], [3 x i64] [i64 -2936782180958819173, i64 -5298172750630314127, i64 11392538751], [3 x i64] [i64 -656952714356202238, i64 -5936980639354538962, i64 127712785479], [3 x i64] [i64 -115516742629813302, i64 -6633975126749369639, i64 71678155634], [3 x i64] [i64 -3060031190609075200, i64 -4276385270156986784, i64 114640371487], [3 x i64] [i64 -4364282018680799232, i64 -266754548928915664, i64 31768176689], [3 x i64] [i64 -5527700944944365568, i64 -1355025095194796715, i64 49985539206], [3 x i64] [i64 6125373368465096704, i64 7394768384359232459, i64 134926543942], [3 x i64] [i64 -6110751375644164096, i64 6778628272692852803, i64 70400871197], [3 x i64] [i64 2774217370460225536, i64 -253409027834317296, i64 29367470174], [3 x i64] [i64 0, i64 1378519212560967521, i64 94986262669], [3 x i64] [i64 0, i64 4677732610631043584, i64 141074729676], [3 x i64] [i64 0, i64 -1150645482639065088, i64 204253580392], [3 x i64] [i64 0, i64 7343735382392963072, i64 104937623383], [3 x i64] [i64 0, i64 -3920747345255333888, i64 87398104692], [3 x i64] [i64 0, i64 -8755384703701221376, i64 116787455860], [3 x i64] [i64 0, i64 3044433348102455296, i64 116525369644], [3 x i64] [i64 0, i64 -9223372036854775808, i64 44165039062], [3 x i64] [i64 0, i64 0, i64 214500000000], [3 x i64] [i64 4962829537462579598, i64 26, i64 0], [3 x i64] [i64 5711259460785241095, i64 26269035528, i64 0], [3 x i64] [i64 -4600849466504654172, i64 7822291454600056379, i64 1], [3 x i64] [i64 -6330111017072548289, i64 8201586317771250746, i64 1424047269], [3 x i64] [i64 2965791047992089560, i64 3278889188817135834, i64 165444608885], [3 x i64] [i64 -2424746622393589087, i64 1710725240251040430, i64 117177748939], [3 x i64] [i64 3942052271663803856, i64 1850175733663425006, i64 203092738601], [3 x i64] [i64 -2776867658927111694, i64 9147599666163914249, i64 41100298227], [3 x i64] [i64 -7852328158303406330, i64 -8224858140065207450, i64 243495892371], [3 x i64] [i64 -7656923520677630239, i64 -3545264279972873515, i64 147554129546], [3 x i64] [i64 3989990218583987244, i64 5181831442059703136, i64 138807810838], [3 x i64] [i64 2937341169808224563, i64 6396246577759793483, i64 22280907645], [3 x i64] [i64 -2179307515125014773, i64 -4279514517244681169, i64 125346741221], [3 x i64] [i64 -2225163710894925823, i64 2969982933326311854, i64 229768007053], [3 x i64] [i64 -8751306471389341786, i64 7892677766222018881, i64 141161003097], [3 x i64] [i64 -7716990916915836490, i64 798698968922663621, i64 89427862919], [3 x i64] [i64 2609241432056861929, i64 -2519931964666092644, i64 135043297557], [3 x i64] [i64 8462663743997037565, i64 8663842590352697437, i64 21863394214], [3 x i64] [i64 -3453321929801357547, i64 -1353221047072880448, i64 166469667847], [3 x i64] [i64 1307443894537745373, i64 839764004742743203, i64 7926641740], [3 x i64] [i64 -8429486634289722351, i64 -1552100164411319293, i64 76045523697], [3 x i64] [i64 -1691972063738773725, i64 9066702926218949317, i64 241915860481], [3 x i64] [i64 -6724171042106689229, i64 9119392417260546810, i64 1491506950], [3 x i64] [i64 7363764277467092384, i64 -8723722977131236507, i64 6494363253], [3 x i64] [i64 6733958494847390772, i64 -3659279824958334019, i64 117527086029], [3 x i64] [i64 8799796600227451045, i64 3733434565920249133, i64 205801630043], [3 x i64] [i64 -7934720878967301790, i64 6643788868836820841, i64 91202389893], [3 x i64] [i64 4572542132337197059, i64 4729646697422664063, i64 133360160516], [3 x i64] [i64 -5846243617952134784, i64 4090144564201555829, i64 4256394661], [3 x i64] [i64 7873789864743195199, i64 2109480737093400002, i64 165221727181], [3 x i64] [i64 -2721892397383880077, i64 -1869589040340131877, i64 205114355179], [3 x i64] [i64 8748017220462413167, i64 745377248603805917, i64 235898649375], [3 x i64] [i64 -4274154550949085168, i64 -7141182607901551949, i64 31040406981], [3 x i64] [i64 -8926198482220137848, i64 2211245518782892177, i64 197612875715], [3 x i64] [i64 -5958192985316981394, i64 -4276648874459815950, i64 195119871859], [3 x i64] [i64 1135798823651241684, i64 -596770405593432689, i64 115768162399], [3 x i64] [i64 -7278018463589389644, i64 9020960204585720001, i64 95967649011], [3 x i64] [i64 -8866639124991042790, i64 -7639610070837700700, i64 243489027232], [3 x i64] [i64 -1808021356799812851, i64 3925122626254791201, i64 160585855908], [3 x i64] [i64 -2714020061361278819, i64 -1238280782396832619, i64 164212781323], [3 x i64] [i64 -6177021883688337474, i64 5145077219589447653, i64 11932872664], [3 x i64] [i64 -5336088157397579029, i64 -844346308674062148, i64 216278915194], [3 x i64] [i64 6618112997062866867, i64 -2024100811218798239, i64 122954227894], [3 x i64] [i64 8457936459015989309, i64 2902509461400906224, i64 182890273275], [3 x i64] [i64 3329167139937134914, i64 3422418805967265206, i64 251157345353], [3 x i64] [i64 5245511557216705097, i64 4228874576277237392, i64 73185529695], [3 x i64] [i64 5655931353280440466, i64 2553488530807495751, i64 95229247750], [3 x i64] [i64 604622132328697393, i64 -6900644896797065203, i64 6138424890], [3 x i64] [i64 8673282619234652338, i64 -7985953036175383625, i64 58625915290], [3 x i64] [i64 -1517266640651105926, i64 8127117908566000904, i64 154567080618], [3 x i64] [i64 -7409791664456002161, i64 -6905439615621264310, i64 170440571944], [3 x i64] [i64 -247351883539165296, i64 6249718665174839700, i64 40625655368], [3 x i64] [i64 -8763627981829215901, i64 -5344235660323260621, i64 72338797927], [3 x i64] [i64 2993913337608915120, i64 6274675218640661911, i64 103710288404], [3 x i64] [i64 4490779842162392585, i64 3404497118599817167, i64 20340150825], [3 x i64] [i64 946849923353644618, i64 -7188177979720989281, i64 41184558158], [3 x i64] [i64 3613491058474899828, i64 -1684151591207916219, i64 78610328090], [3 x i64] [i64 -3822689874705140681, i64 5550125446725071998, i64 26908701959], [3 x i64] [i64 -6358273801717643372, i64 6370033225258510318, i64 7300872903], [3 x i64] [i64 -8374763145984540326, i64 1503521728674735398, i64 199345320193], [3 x i64] [i64 2833441711428854664, i64 4250415082606384364, i64 1081506076], [3 x i64] [i64 -791171661845211170, i64 6020091901030562974, i64 28230415463], [3 x i64] [i64 4997642792058747802, i64 -2158521106558024478, i64 103326349835], [3 x i64] [i64 -6957543286073816768, i64 6377016228656203782, i64 11882986336], [3 x i64] [i64 -5463157847280014703, i64 8378856515587563750, i64 96345698742], [3 x i64] [i64 -6135593304984488464, i64 -2633862583508713133, i64 182454218721], [3 x i64] [i64 8530052476845967905, i64 4548570371183413652, i64 225857218023], [3 x i64] [i64 6282736361499820264, i64 -1715312578426131233, i64 231246578493], [3 x i64] [i64 -7109579307780468736, i64 -3709016444158416084, i64 61907012718], [3 x i64] [i64 8343856200414134272, i64 -6033021815605257723, i64 110798933815], [3 x i64] [i64 -557413696553353216, i64 800899742400762438, i64 55672949232], [3 x i64] [i64 -716030009554239488, i64 603197008376033550, i64 240043416862], [3 x i64] [i64 7449235258647511040, i64 6380777281587743935, i64 30032699375], [3 x i64] [i64 -8502796096475496448, i64 -8445303824691326228, i64 239345902629], [3 x i64] [i64 0, i64 5505914461980436708, i64 37542179162], [3 x i64] [i64 0, i64 1105464290051876864, i64 90298476221], [3 x i64] [i64 0, i64 4500443576769970176, i64 189059927339], [3 x i64] [i64 0, i64 2843045143185981440, i64 43243969535], [3 x i64] [i64 0, i64 660949699682893824, i64 255154121786], [3 x i64] [i64 0, i64 276549164618219520, i64 58035830155], [3 x i64] [i64 0, i64 4683743612465315840, i64 139014991760], [3 x i64] [i64 0, i64 0, i64 144253906250], [3 x i64] [i64 0, i64 0, i64 74000000000], [3 x i64] [i64 -6050498952468868047, i64 400833, i64 0], [3 x i64] [i64 -8197747425112663055, i64 400833672001794, i64 0], [3 x i64] [i64 -7189248969995616614, i64 4370024159708535157, i64 21729], [3 x i64] [i64 7555396579247433114, i64 7166684413908503888, i64 225236899484], [3 x i64] [i64 4805022328730367462, i64 -8229457790493864587, i64 156388506740], [3 x i64] [i64 7056637817080232586, i64 4767369911989629198, i64 116553880199], [3 x i64] [i64 -7635332589891116703, i64 -4038744859527468754, i64 135258439640], [3 x i64] [i64 -1484337369214306169, i64 8472271297615317358, i64 216781059202], [3 x i64] [i64 -372226754592356947, i64 6236024012584764757, i64 130459282747], [3 x i64] [i64 3702019776117654523, i64 1951826556984620523, i64 59338055539], [3 x i64] [i64 3551977551381082764, i64 -6089613522157720786, i64 115105808729], [3 x i64] [i64 -2004135087773546334, i64 8927758011099278464, i64 89669881389], [3 x i64] [i64 3580046275479139588, i64 -8246890024302411293, i64 45483974731], [3 x i64] [i64 8737412692712715330, i64 -551289046671002039, i64 75552935195], [3 x i64] [i64 3082033243045084752, i64 -1907543729989024485, i64 27970114560], [3 x i64] [i64 -2045720316868422917, i64 3536976106235802604, i64 896591847], [3 x i64] [i64 7520296082779572869, i64 -1466352428915960865, i64 231191739858], [3 x i64] [i64 -8592639307557087457, i64 -8356449757100467549, i64 210920508875], [3 x i64] [i64 -4277555271061241428, i64 -843286216443314727, i64 203546995950], [3 x i64] [i64 2018609909210367042, i64 -7281781330673683344, i64 238954285362], [3 x i64] [i64 8270271948267674359, i64 1585686890718568774, i64 50605253843], [3 x i64] [i64 -6126405470814979517, i64 -7564219373236896204, i64 211085960258], [3 x i64] [i64 -908207387719471069, i64 2194808754940947757, i64 66589942846], [3 x i64] [i64 -2612829456752791142, i64 274100791137209242, i64 62118980821], [3 x i64] [i64 6137696141415969855, i64 -6243339490728540713, i64 213014859033], [3 x i64] [i64 -8689253605290112697, i64 541940706340938166, i64 25661547888], [3 x i64] [i64 3566639201356598903, i64 -8141310057697718022, i64 112029378664], [3 x i64] [i64 -8685844037935597167, i64 7900783531944543546, i64 104558658697], [3 x i64] [i64 3873778773990716438, i64 8920818625012419323, i64 137428302333], [3 x i64] [i64 2295668377270167832, i64 -5914380738309103984, i64 253483598546], [3 x i64] [i64 1791721710912807593, i64 -4963236890784788816, i64 210679380777], [3 x i64] [i64 -7875735066786868337, i64 415911049779278804, i64 41730942389], [3 x i64] [i64 -8605952140931366749, i64 3441628281170127418, i64 181022546583], [3 x i64] [i64 -6921279117148277003, i64 -615932505525985089, i64 151186571042], [3 x i64] [i64 4435781488897895433, i64 -549448260532938205, i64 34966610231], [3 x i64] [i64 6395563367070996741, i64 2086148701331574596, i64 55970214350], [3 x i64] [i64 -2908053278573888684, i64 -5431176246830698184, i64 206113090347], [3 x i64] [i64 -2152185260146179680, i64 -5502212952121705021, i64 43705575345], [3 x i64] [i64 4942096228426070342, i64 3534180912913737995, i64 177701724438], [3 x i64] [i64 6910116424372647153, i64 3447584022400118677, i64 22191588331], [3 x i64] [i64 -523343403948722138, i64 6375676813770849297, i64 235186893904], [3 x i64] [i64 4134686917293039955, i64 -6866049992230351431, i64 80345626132], [3 x i64] [i64 -1589641610593452935, i64 1872134358882196482, i64 20627790684], [3 x i64] [i64 -7082422564934384165, i64 -844091233188613557, i64 92101488606], [3 x i64] [i64 7966947780972783899, i64 -8115703475993213265, i64 222954241722], [3 x i64] [i64 -7185688377782865338, i64 73785407041056976, i64 186560046833], [3 x i64] [i64 -9219703636355957558, i64 -1280534964541649588, i64 241003999914], [3 x i64] [i64 7185344074282882061, i64 8762475644006589904, i64 170930582060], [3 x i64] [i64 -4248887925098973584, i64 8839001228645872586, i64 44475014756], [3 x i64] [i64 885688687260429427, i64 -4888481289180441348, i64 100479163216], [3 x i64] [i64 -1038927913329246433, i64 5640853896420358111, i64 80734994898], [3 x i64] [i64 -634015369903194267, i64 8459930353450835572, i64 210305791302], [3 x i64] [i64 -1326545881745231749, i64 7643830211500171269, i64 70458613743], [3 x i64] [i64 -6354792025334142830, i64 1308629115231236347, i64 239414372866], [3 x i64] [i64 405056939269888281, i64 8957268500971669618, i64 2070940926], [3 x i64] [i64 -5961303394257142926, i64 7645679094277669412, i64 254485574498], [3 x i64] [i64 8394369900823444407, i64 3821107497040617191, i64 98414473094], [3 x i64] [i64 2877421667354294258, i64 8847137191985934072, i64 134207142652], [3 x i64] [i64 2676980714750756239, i64 3531126524756088253, i64 252479604268], [3 x i64] [i64 6119309228579057021, i64 8726915034124352183, i64 44191422752], [3 x i64] [i64 -243487927176217764, i64 -835607346541482975, i64 32473087011], [3 x i64] [i64 351919978865493747, i64 -429000800925291667, i64 35954701634], [3 x i64] [i64 5190010931882390570, i64 -333169066879935500, i64 66976743819], [3 x i64] [i64 6982466386088036604, i64 -5641193632030811248, i64 139981938868], [3 x i64] [i64 4707293888784996898, i64 8061966093393027781, i64 180694190280], [3 x i64] [i64 690306801165964760, i64 -6492150932155450815, i64 200437040057], [3 x i64] [i64 -5989973112430594912, i64 -4378087961350353882, i64 185648059792], [3 x i64] [i64 -1500651584415487673, i64 895878255770467290, i64 144762663376], [3 x i64] [i64 -7348339899843366240, i64 -8126837584197353814, i64 208048565657], [3 x i64] [i64 -3294673107856244736, i64 -3895601456915249537, i64 153559443251], [3 x i64] [i64 -1076652711669137408, i64 -2513562337970244140, i64 51788819021], [3 x i64] [i64 -8304805521538416640, i64 -6922216739310568469, i64 77863739512], [3 x i64] [i64 -7859755517063725056, i64 -6618731467483994874, i64 120624745878], [3 x i64] [i64 -6276891980647628800, i64 3556238869349799431, i64 150641197848], [3 x i64] [i64 -1729382256910270464, i64 7403090230513381483, i64 24192784095], [3 x i64] [i64 0, i64 -8274451219043928816, i64 223401322325], [3 x i64] [i64 0, i64 -7205997497343369216, i64 85551441100], [3 x i64] [i64 0, i64 -1424816246817292288, i64 204609362092], [3 x i64] [i64 0, i64 9046328496309141504, i64 172922760556], [3 x i64] [i64 0, i64 8038996803112140800, i64 108490402450], [3 x i64] [i64 0, i64 -1348265138444042240, i64 146435794889], [3 x i64] [i64 0, i64 7205759403792793600, i64 201926910400], [3 x i64] [i64 0, i64 0, i64 192390625000], [3 x i64] [i64 0, i64 0, i64 232000000000], [3 x i64] [i64 2144184049294538808, i64 6, i64 0], [3 x i64] [i64 4108002197393276873, i64 6116236450, i64 0], [3 x i64] [i64 6446230217393892753, i64 6116236450222695245, i64 0], [3 x i64] [i64 5571068025259989822, i64 6240972538554414168, i64 331561842], [3 x i64] [i64 -3641931404837023285, i64 4356262642990299018, i64 114338323799], [3 x i64] [i64 -1076815585147028569, i64 1335108558830511366, i64 87236153471], [3 x i64] [i64 2967474173531035027, i64 -11039150447604370, i64 127072376379], [3 x i64] [i64 5291425437992807716, i64 8395401931972636441, i64 59999401566], [3 x i64] [i64 -4227196879970163552, i64 -5964078127347093269, i64 94455115650], [3 x i64] [i64 -726430426551334154, i64 -2345501198420176835, i64 130676686676], [3 x i64] [i64 -6111893445418973125, i64 4708983440241068127, i64 84872850125], [3 x i64] [i64 7818499847417334620, i64 -3590077101168124872, i64 205255274503], [3 x i64] [i64 136007040922198372, i64 6938795288315789246, i64 7805381530], [3 x i64] [i64 8523477092112604449, i64 5556307628265073820, i64 154376152846], [3 x i64] [i64 367934822655966629, i64 1441404248927865979, i64 14301208040], [3 x i64] [i64 -5481756386654821566, i64 -1736365161355712710, i64 232078138680], [3 x i64] [i64 -3179708061288666154, i64 -156803936790239506, i64 56905871455], [3 x i64] [i64 -7303843808958786048, i64 -8229329928416893792, i64 95991499641], [3 x i64] [i64 -4766562525931833013, i64 -5985578247278595863, i64 121553887130], [3 x i64] [i64 -5444821147948125551, i64 662762458988270879, i64 154675521153], [3 x i64] [i64 2397730045956515935, i64 -1958197217314249146, i64 129035928424], [3 x i64] [i64 4482395522588406288, i64 2612816787977180950, i64 104893845916], [3 x i64] [i64 3255525722490493080, i64 -2000127694382097364, i64 156141641081], [3 x i64] [i64 836222287193822098, i64 7842178508581740643, i64 121891572860], [3 x i64] [i64 420898743993182306, i64 -3667714212340182283, i64 124425125348], [3 x i64] [i64 -6794094100352977562, i64 2697664446153849542, i64 228801172814], [3 x i64] [i64 -3388341347047641385, i64 -6311637629315902308, i64 78146240682], [3 x i64] [i64 -8846609578501212057, i64 -8896459032504361777, i64 170657845438], [3 x i64] [i64 -3820400749720546774, i64 8790318168586740109, i64 190517721989], [3 x i64] [i64 6813981265331086665, i64 -4408269856553704788, i64 133476524102], [3 x i64] [i64 -8164998784919063728, i64 4263144264274812072, i64 70761027212], [3 x i64] [i64 -876914726633789676, i64 -6506287740367836096, i64 140231105513], [3 x i64] [i64 7654580675237889478, i64 -2695633336877978603, i64 233647293434], [3 x i64] [i64 -2251905424023339252, i64 -62215368237233535, i64 250853869423], [3 x i64] [i64 6495102772252453635, i64 2393654818032310394, i64 111996627298], [3 x i64] [i64 -3511584220889790268, i64 -5634534251690925182, i64 98129760287], [3 x i64] [i64 -1064864210267971919, i64 3110778569433458461, i64 31694551286], [3 x i64] [i64 9062335510435372583, i64 2860264756226872891, i64 246168635644], [3 x i64] [i64 7569219009130126626, i64 2384146980060315184, i64 252155055263], [3 x i64] [i64 -5794619905533358254, i64 -4329314010829226888, i64 159129244866], [3 x i64] [i64 8940200224697247767, i64 3769610173216737153, i64 194765307417], [3 x i64] [i64 5600570701927432884, i64 -714769733476879607, i64 25204350976], [3 x i64] [i64 2018432801986093157, i64 1971479303384713466, i64 961252255], [3 x i64] [i64 8235849749361824736, i64 3449462959779012549, i64 159106874107], [3 x i64] [i64 -8741646785727181576, i64 -4703289221665785083, i64 251186995761], [3 x i64] [i64 3517483139049842585, i64 7417711187131879498, i64 49745034180], [3 x i64] [i64 958281614186777760, i64 3650992383501007879, i64 196402114929], [3 x i64] [i64 7336473432636108950, i64 -5607973731215592954, i64 113197920693], [3 x i64] [i64 -5491360153532787193, i64 -2421675827163213139, i64 181695991134], [3 x i64] [i64 -7711274947428277827, i64 6579965938260177729, i64 94868720690], [3 x i64] [i64 8637888232514730693, i64 4742939430174291459, i64 50356700668], [3 x i64] [i64 6806336737533581000, i64 -5384487216182102533, i64 252257115261], [3 x i64] [i64 -2304174400837221295, i64 2301174570202439645, i64 125708106363], [3 x i64] [i64 8141285259947963513, i64 7638687886069412887, i64 123124746923], [3 x i64] [i64 5220241098754220797, i64 936322449610274358, i64 171414094100], [3 x i64] [i64 154438799943119608, i64 -5520733529398267635, i64 20050758141], [3 x i64] [i64 2226876628677628879, i64 -5798889164719652432, i64 253700720435], [3 x i64] [i64 -1227186992488194134, i64 8862093163358513015, i64 51685641588], [3 x i64] [i64 -3045236925548536502, i64 444784343917630731, i64 116480415033], [3 x i64] [i64 8842629766613985337, i64 -7412791824496164353, i64 57024111807], [3 x i64] [i64 3180100571546071440, i64 -278110027346368080, i64 191598151749], [3 x i64] [i64 7740848704392475044, i64 3837904761417065597, i64 69984923625], [3 x i64] [i64 2014314126623495998, i64 111459007020906105, i64 233208053234], [3 x i64] [i64 -7237178057202665758, i64 -2254982116212757093, i64 242006042204], [3 x i64] [i64 7117166613733441125, i64 -8590493273369173009, i64 92877757174], [3 x i64] [i64 4197646860931880328, i64 -8954943971434445657, i64 246534308426], [3 x i64] [i64 5487263271238026094, i64 -7669415494755943348, i64 74514551514], [3 x i64] [i64 -298667848415988919, i64 -1022303445395772111, i64 218584240152], [3 x i64] [i64 9127276943027950849, i64 3285814872419755679, i64 24944580819], [3 x i64] [i64 -8755047948330226894, i64 2824823424107240978, i64 211178124381], [3 x i64] [i64 -5344381811221846400, i64 -6175036392995881861, i64 93153133984], [3 x i64] [i64 8929385439893192704, i64 6951481875178001185, i64 160665250606], [3 x i64] [i64 -6555390662965985280, i64 -8244221586705727254, i64 46376840587], [3 x i64] [i64 1587423090877399040, i64 4834668463880990728, i64 139553079852], [3 x i64] [i64 3489137423026225152, i64 -7575223086021646870, i64 44262087902], [3 x i64] [i64 -5399815953217224704, i64 -6389045279484229226, i64 222589346333], [3 x i64] [i64 -6917529027641081856, i64 7263351819222681214, i64 29653649161], [3 x i64] [i64 0, i64 1778055686910650944, i64 9393747091], [3 x i64] [i64 0, i64 -1338556953217564672, i64 147096388591], [3 x i64] [i64 0, i64 3067636961549221888, i64 239927436682], [3 x i64] [i64 0, i64 -1744602478545993728, i64 138166296932], [3 x i64] [i64 0, i64 2432053749942845440, i64 100905424910], [3 x i64] [i64 0, i64 -655273745782407168, i64 14131841897], [3 x i64] [i64 0, i64 1152921504606846976, i64 105964477539], [3 x i64] [i64 0, i64 0, i64 99062500000], [3 x i64] [i64 0, i64 0, i64 160000000000], [3 x i64] [i64 6674960280855494694, i64 93326, i64 0], [3 x i64] [i64 -2067898292226054106, i64 93326361850321, i64 0], [3 x i64] [i64 -839836322752747224, i64 4283581425266273664, i64 5059], [3 x i64] [i64 -5221134914469044647, i64 6725911039793895357, i64 195232213414], [3 x i64] [i64 2668084873338435252, i64 1188689198788975021, i64 166364612368], [3 x i64] [i64 -3643929768433690250, i64 -7621216637861789966, i64 16064438970], [3 x i64] [i64 8005510553372365574, i64 3917696829526085083, i64 186586853018], [3 x i64] [i64 -5698243930436037187, i64 -5799882899733164340, i64 154212378770], [3 x i64] [i64 -8053010168140515489, i64 -48168010525554711, i64 146685587717], [3 x i64] [i64 603389089974790339, i64 -1527492845223716668, i64 5997388806], [3 x i64] [i64 2033494532597735873, i64 -1150724485022366564, i64 6917194446], [3 x i64] [i64 9204796763694620958, i64 -6081442469196781257, i64 206937619100], [3 x i64] [i64 7826260310402107021, i64 2814271599679204744, i64 156670324343], [3 x i64] [i64 -8324053872024382233, i64 2154994415780170517, i64 119152561969], [3 x i64] [i64 7438455564568110133, i64 6717373824370072839, i64 49116822481], [3 x i64] [i64 2805412574380520817, i64 -5737588317908207556, i64 209364149564], [3 x i64] [i64 7250965427231182867, i64 826847911966403896, i64 60688964714], [3 x i64] [i64 8136242944826085924, i64 2277322703890025383, i64 106044823515], [3 x i64] [i64 -3089552425753539836, i64 2774508958389496437, i64 219123453911], [3 x i64] [i64 7369614426695395460, i64 245697774950120915, i64 215150406432], [3 x i64] [i64 -7559786528567024978, i64 1268929063431863950, i64 32013319303], [3 x i64] [i64 2030047207417538097, i64 6735665673159411439, i64 135068788782], [3 x i64] [i64 -6889650245207237261, i64 -3711972330712478409, i64 46365141167], [3 x i64] [i64 -3245681534045423073, i64 -4763456995751939121, i64 175798773576], [3 x i64] [i64 8846936323343880674, i64 -3076480332354724813, i64 72741772478], [3 x i64] [i64 1485291750116245364, i64 48035913070297507, i64 190833223667], [3 x i64] [i64 2076024439668322013, i64 1206547475966802115, i64 243002604032], [3 x i64] [i64 7029497773682748741, i64 -4934403687103783610, i64 65407069], [3 x i64] [i64 -2113210152040801735, i64 2325760467700278797, i64 93732505440], [3 x i64] [i64 2065057316131928423, i64 -7598633420861797800, i64 96126079727], [3 x i64] [i64 7800502648925570223, i64 -2600365112925250331, i64 239588077256], [3 x i64] [i64 -1435124106615749601, i64 -4324904149259706705, i64 200859033924], [3 x i64] [i64 5368819344429198672, i64 5147613424753296550, i64 68765546476], [3 x i64] [i64 -2847864706955276349, i64 -1629703590880741449, i64 236279052682], [3 x i64] [i64 -2052850587673715969, i64 5773528746119363888, i64 138911653591], [3 x i64] [i64 -6404697868612631309, i64 8716201595536184826, i64 215312983620], [3 x i64] [i64 -3009673645701077272, i64 5259122109038474872, i64 68472506235], [3 x i64] [i64 -4742174910504904107, i64 -3702203989479395632, i64 123285097580], [3 x i64] [i64 -254260322852558266, i64 -7727398595726915738, i64 108799303119], [3 x i64] [i64 5152535865317963250, i64 -4748706812398996408, i64 207581096882], [3 x i64] [i64 -934129989775696936, i64 -2305572440757574680, i64 178742572087], [3 x i64] [i64 -3964825723105938080, i64 -8385953898753742777, i64 55875014667], [3 x i64] [i64 -2322324363745546701, i64 4250043307981877118, i64 11545396528], [3 x i64] [i64 -358732507273738037, i64 7075646198054337199, i64 48230395309], [3 x i64] [i64 -3437881693010702723, i64 -305005689464020113, i64 173383571548], [3 x i64] [i64 -286245429097723804, i64 8174370508376809531, i64 92983465608], [3 x i64] [i64 3604680497457231965, i64 3581964982731575596, i64 136443133513], [3 x i64] [i64 5957615565551495921, i64 -3648234124987436855, i64 73194178710], [3 x i64] [i64 -918289038747985621, i64 -3732820738824429526, i64 150802228831], [3 x i64] [i64 8503772325120113809, i64 5042978054260414139, i64 95797643382], [3 x i64] [i64 8501492578048509537, i64 2052996319372883413, i64 118273380388], [3 x i64] [i64 2296237701094386060, i64 8825683007899981588, i64 36111293153], [3 x i64] [i64 3753593040591076946, i64 -8454547318330806465, i64 225478441234], [3 x i64] [i64 8518075399775653155, i64 -9145670656135881666, i64 18541678071], [3 x i64] [i64 -5688888397749997019, i64 5331614769144850592, i64 247504212200], [3 x i64] [i64 121631169379748595, i64 -4092734645399499514, i64 232289027415], [3 x i64] [i64 -1767681579130378302, i64 5581221063029119078, i64 87778132410], [3 x i64] [i64 -7706831328965653562, i64 1529260335339476189, i64 186302558600], [3 x i64] [i64 -9079403395933264046, i64 -1963682547760350468, i64 136082901368], [3 x i64] [i64 -6219422560914836219, i64 -4015526261376461941, i64 120893548555], [3 x i64] [i64 7241061891859170651, i64 3452349151135392267, i64 11782317885], [3 x i64] [i64 -5298172750630314127, i64 9075317899834447999, i64 61187152222], [3 x i64] [i64 -5936980639354538962, i64 2764331337978901575, i64 94491973969], [3 x i64] [i64 -6633975126749369639, i64 1942890683708857202, i64 81149854702], [3 x i64] [i64 -4276385270156986784, i64 165089169728028447, i64 238105324315], [3 x i64] [i64 -266754548928915664, i64 -3253123331838318543, i64 27008949501], [3 x i64] [i64 -1355025095194796715, i64 -3451743238515405690, i64 253823647830], [3 x i64] [i64 7394768384359232459, i64 1788823614552255558, i64 86812880624], [3 x i64] [i64 6778628272692852803, i64 8384901184618498845, i64 240096972322], [3 x i64] [i64 -253409027834317296, i64 405511217862281310, i64 34454546404], [3 x i64] [i64 1378519212560967521, i64 3111530463755196557, i64 228021982807], [3 x i64] [i64 4677732610631043584, i64 7893558450035460812, i64 87168676404], [3 x i64] [i64 -1150645482639065088, i64 156573858237402216, i64 52427910661], [3 x i64] [i64 7343735382392963072, i64 -2531420054290100393, i64 5008487885], [3 x i64] [i64 -3920747345255333888, i64 -2153381060930748812, i64 205862771443], [3 x i64] [i64 -8755384703701221376, i64 -4104638755418200204, i64 243883264978], [3 x i64] [i64 3044433348102455296, i64 3788398842525387052, i64 210777487087], [3 x i64] [i64 -9223372036854775808, i64 -4327979666661243946, i64 239205369512], [3 x i64] [i64 0, i64 2705021334614720768, i64 168765379752], [3 x i64] [i64 0, i64 7017988973805568000, i64 168146639500], [3 x i64] [i64 0, i64 -7490012020075397120, i64 140380445944], [3 x i64] [i64 0, i64 -3789226135162716160, i64 248593965634], [3 x i64] [i64 0, i64 -7177875788912394240, i64 66794585639], [3 x i64] [i64 0, i64 -3846074081774403584, i64 39610886573], [3 x i64] [i64 0, i64 4611686018427387904, i64 173791503906], [3 x i64] [i64 0, i64 0, i64 34250000000], [3 x i64] [i64 0, i64 0, i64 128000000000], [3 x i64] [i64 8201586317771250746, i64 1424047269, i64 0], [3 x i64] [i64 3278889188817135834, i64 1424047269444608885, i64 0], [3 x i64] [i64 1710725240251040430, i64 3001188830946823627, i64 77197757], [3 x i64] [i64 1850175733663425006, i64 -8714447141004164567, i64 189162694772], [3 x i64] [i64 9147599666163914249, i64 -2109208291030022157, i64 116527588873], [3 x i64] [i64 -8224858140065207450, i64 7969742269895046547, i64 9885659589], [3 x i64] [i64 -3545264279972873515, i64 2923592083903829642, i64 197432040594], [3 x i64] [i64 5181831442059703136, i64 8144196241160608534, i64 146158488244], [3 x i64] [i64 6396246577759793483, i64 -2015665615916127363, i64 180441497762], [3 x i64] [i64 -4279514517244681169, i64 202362949592775653, i64 162890730548], [3 x i64] [i64 2969982933326311854, i64 8835125248522947981, i64 52010970117], [3 x i64] [i64 7892677766222018881, i64 7959873808777345113, i64 5478953099], [3 x i64] [i64 798698968922663621, i64 -3516996951394425465, i64 139431505623], [3 x i64] [i64 -2519931964666092644, i64 4310328817360515349, i64 215809343213], [3 x i64] [i64 8663842590352697437, i64 7294899422760201126, i64 237233663393], [3 x i64] [i64 -1353221047072880448, i64 2047461597291187207, i64 161395457290], [3 x i64] [i64 839764004742743203, i64 -7504369604896033716, i64 10110993115], [3 x i64] [i64 -1552100164411319293, i64 -8081948670646117647, i64 219593187308], [3 x i64] [i64 9066702926218949317, i64 -6115884544918612479, i64 236561876684], [3 x i64] [i64 9119392417260546810, i64 8973160144879916806, i64 204668457234], [3 x i64] [i64 -8723722977131236507, i64 2895354388547509877, i64 18486435986], [3 x i64] [i64 -3659279824958334019, i64 -1679899301211995187, i64 146156957475], [3 x i64] [i64 3733434565920249133, i64 7442407174620948827, i64 35908932476], [3 x i64] [i64 6643788868836820841, i64 6683013428676659077, i64 124403453701], [3 x i64] [i64 4729646697422664063, i64 -1733040698637644028, i64 5362286883], [3 x i64] [i64 4090144564201555829, i64 8791044883080637861, i64 35906051675], [3 x i64] [i64 2109480737093400002, i64 602844107089214413, i64 91476563498], [3 x i64] [i64 -1869589040340131877, i64 -8691911792536670741, i64 42032680244], [3 x i64] [i64 745377248603805917, i64 -7858897295706047713, i64 52528810517], [3 x i64] [i64 -7141182607901551949, i64 -1240499900786604603, i64 21573968323], [3 x i64] [i64 2211245518782892177, i64 -6826115653010247741, i64 195932752365], [3 x i64] [i64 -4276648874459815950, i64 -582011705490213005, i64 237629955528], [3 x i64] [i64 -596770405593432689, i64 4146383014621345887, i64 200968449082], [3 x i64] [i64 9020960204585720001, i64 -7001038998666863373, i64 58224775873], [3 x i64] [i64 -7639610070837700700, i64 7369147888966546592, i64 193620472915], [3 x i64] [i64 3925122626254791201, i64 -8684267208618953820, i64 83399482307], [3 x i64] [i64 -1238280782396832619, i64 5507001428194242827, i64 195529224931], [3 x i64] [i64 5145077219589447653, i64 -7075272925344223272, i64 227298535145], [3 x i64] [i64 -844346308674062148, i64 3148788104946538618, i64 233616448686], [3 x i64] [i64 -2024100811218798239, i64 3762722308424507574, i64 174170696145], [3 x i64] [i64 2902509461400906224, i64 1156171244825745915, i64 209203977585], [3 x i64] [i64 3422418805967265206, i64 -4237822398841293751, i64 113062676168], [3 x i64] [i64 4228874576277237392, i64 7903080886897905503, i64 200770267187], [3 x i64] [i64 2553488530807495751, i64 6367240794154270982, i64 51428426873], [3 x i64] [i64 -6900644896797065203, i64 1623672396662369850, i64 121345168815], [3 x i64] [i64 -7985953036175383625, i64 -123512858327877222, i64 175088019456], [3 x i64] [i64 8127117908566000904, i64 -8604464230703007062, i64 993304354], [3 x i64] [i64 -6905439615621264310, i64 7376839231308610600, i64 34533551059], [3 x i64] [i64 6249718665174839700, i64 609751749293657672, i64 211399899256], [3 x i64] [i64 -5344235660323260621, i64 -8060286106848561817, i64 120033054708], [3 x i64] [i64 6274675218640661911, i64 -7286408052873401836, i64 244563051014], [3 x i64] [i64 3404497118599817167, i64 -499184139862142423, i64 6605003027], [3 x i64] [i64 -7188177979720989281, i64 -8216957071996847026, i64 19972939173], [3 x i64] [i64 -1684151591207916219, i64 -8005066983665931750, i64 165554557864], [3 x i64] [i64 5550125446725071998, i64 4996681336392922375, i64 168566044449], [3 x i64] [i64 6370033225258510318, i64 124497102381021895, i64 33270870638], [3 x i64] [i64 1503521728674735398, i64 8180812057779384577, i64 110006749001], [3 x i64] [i64 4250415082606384364, i64 5294232873532946716, i64 73443482710], [3 x i64] [i64 6020091901030562974, i64 2885620189169448039, i64 86287000939], [3 x i64] [i64 -2158521106558024478, i64 -1784217198701381109, i64 107156429783], [3 x i64] [i64 6377016228656203782, i64 -2783649041306879136, i64 215903277391], [3 x i64] [i64 8378856515587563750, i64 1824281504410546614, i64 79849098083], [3 x i64] [i64 -2633862583508713133, i64 -8940178564124741663, i64 99098894498], [3 x i64] [i64 4548570371183413652, i64 -1505607131364481561, i64 162515351948], [3 x i64] [i64 -1715312578426131233, i64 -2522628380003613891, i64 140918380873], [3 x i64] [i64 -3709016444158416084, i64 -9198936383302923154, i64 73863248041], [3 x i64] [i64 -6033021815605257723, i64 7993916633864834871, i64 169501324659], [3 x i64] [i64 800899742400762438, i64 1018504409177639408, i64 115433351089], [3 x i64] [i64 603197008376033550, i64 -6348943387075420898, i64 177055213234], [3 x i64] [i64 6380777281587743935, i64 6221488888422637551, i64 178655823089], [3 x i64] [i64 -8445303824691326228, i64 8229322865256080421, i64 241337267588], [3 x i64] [i64 5505914461980436708, i64 7927745108183101786, i64 132446112486], [3 x i64] [i64 1105464290051876864, i64 8488683721235326653, i64 230429763923], [3 x i64] [i64 4500443576769970176, i64 -7281227555538629333, i64 83460172466], [3 x i64] [i64 2843045143185981440, i64 5463648141113596927, i64 178605283863], [3 x i64] [i64 660949699682893824, i64 3958440403860778042, i64 23296184959], [3 x i64] [i64 276549164618219520, i64 5091534813990256011, i64 127214587484], [3 x i64] [i64 4683743612465315840, i64 6100166970623291280, i64 92276012655], [3 x i64] [i64 0, i64 1913011027739012426, i64 111330690714], [3 x i64] [i64 0, i64 -7135786423105330176, i64 154103704535], [3 x i64] [i64 0, i64 -2142926816700530688, i64 215613168242], [3 x i64] [i64 0, i64 9090406322154766336, i64 114883831704], [3 x i64] [i64 0, i64 3003279315069566976, i64 152492791914], [3 x i64] [i64 0, i64 -1863856927033786368, i64 106162808097], [3 x i64] [i64 0, i64 -8754997675608244224, i64 33898960113], [3 x i64] [i64 0, i64 0, i64 241525390625], [3 x i64] [i64 0, i64 0, i64 33000000000]]
@.str.2 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"0.0\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"0.000\00", align 1

; Function Attrs: nofree nosync nounwind
define i8* @d2s_short(double %0, i8* %1) local_unnamed_addr #0 {
alloca:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = bitcast double %0 to i64
  %5 = icmp slt i64 %4, 0
  %bit_and_tmp3.i = and i64 %4, 4503599627370495
  %rshift_tmp5.i = lshr i64 %4, 52
  %6 = trunc i64 %rshift_tmp5.i to i32
  %cast_tmp.i = and i32 %6, 2047
  %7 = icmp eq i32 %cast_tmp.i, 2047
  br i1 %7, label %then.i, label %bool_or_rhs.i

bool_or_rhs.i:                                    ; preds = %alloca
  %8 = icmp eq i32 %cast_tmp.i, 0
  %9 = icmp eq i64 %bit_and_tmp3.i, 0
  %bool_and_tmp.i = select i1 %8, i1 %9, i1 false
  br i1 %bool_and_tmp.i, label %endif.i.i, label %endif.i

then.i:                                           ; preds = %alloca
  %.not.i = icmp eq i64 %bit_and_tmp3.i, 0
  br i1 %.not.i, label %endif.i.i, label %then.i.i

then.i.i:                                         ; preds = %then.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %1, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

endif.i.i:                                        ; preds = %then.i, %bool_or_rhs.i
  br i1 %5, label %then4.i.i, label %endif7.i.i

then4.i.i:                                        ; preds = %endif.i.i
  store i8 45, i8* %1, align 1
  %10 = getelementptr i8, i8* %1, i64 1
  br label %endif7.i.i

endif7.i.i:                                       ; preds = %then4.i.i, %endif.i.i
  %.0.i.i = phi i8* [ %10, %then4.i.i ], [ %1, %endif.i.i ]
  br i1 %7, label %then9.i.i, label %else.i.i

then9.i.i:                                        ; preds = %endif7.i.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %.0.i.i, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

else.i.i:                                         ; preds = %endif7.i.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %.0.i.i, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i: ; preds = %else.i.i, %then9.i.i, %then.i.i
  %.0.sink.i.i = phi i8* [ %.0.i.i, %else.i.i ], [ %.0.i.i, %then9.i.i ], [ %1, %then.i.i ]
  %ptr_add_tmp15.i.i = getelementptr i8, i8* %.0.sink.i.i, i64 3
  br label %func.std.ryu.d2s_shortest..2.builtin.float64.0P.builtin.uint8.0P.builtin.uint8.exit

endif.i:                                          ; preds = %bool_or_rhs.i
  %bit_or_tmp.i.i = or i64 %bit_and_tmp3.i, 4503599627370496
  %11 = add nsw i32 %cast_tmp.i, -1076
  %12 = icmp ult i32 %11, -53
  br i1 %12, label %else.i, label %endif6.i.i

endif6.i.i:                                       ; preds = %endif.i
  %unary_minus_tmp.i.i = sub nuw nsw i32 1075, %cast_tmp.i
  %13 = zext i32 %unary_minus_tmp.i.i to i64
  %notmask.i.i = shl nsw i64 -1, %13
  %sub_tmp8.i.i = xor i64 %notmask.i.i, -1
  %bit_and_tmp.i.i = and i64 %bit_or_tmp.i.i, %sub_tmp8.i.i
  %.not.i.i = icmp eq i64 %bit_and_tmp.i.i, 0
  br i1 %.not.i.i, label %then17.i, label %else.i

then17.i:                                         ; preds = %endif6.i.i
  %rshift_tmp.i.i = lshr i64 %bit_or_tmp.i.i, %13
  %div_tmp.i.i = udiv i64 %rshift_tmp.i.i, 10
  %cast_tmp20.i = trunc i64 %rshift_tmp.i.i to i32
  %cast_tmp22.i = trunc i64 %div_tmp.i.i to i32
  %mul_tmp.neg.i = mul i32 %cast_tmp22.i, -10
  %sub_tmp.i = sub i32 0, %cast_tmp20.i
  %14 = icmp eq i32 %mul_tmp.neg.i, %sub_tmp.i
  br i1 %14, label %for.i, label %endif37.i

for.i:                                            ; preds = %then17.i, %for.i
  %.065.i = phi i64 [ %div_tmp.i45.i, %for.i ], [ %div_tmp.i.i, %then17.i ]
  %.sroa.10.164.i = phi i32 [ %15, %for.i ], [ 0, %then17.i ]
  %div_tmp.i45.i = udiv i64 %.065.i, 10
  %cast_tmp28.i = trunc i64 %.065.i to i32
  %cast_tmp30.i = trunc i64 %div_tmp.i45.i to i32
  %mul_tmp31.neg.i = mul i32 %cast_tmp30.i, -10
  %15 = add i32 %.sroa.10.164.i, 1
  %sub_tmp32.i = sub i32 0, %cast_tmp28.i
  %16 = icmp eq i32 %mul_tmp31.neg.i, %sub_tmp32.i
  br i1 %16, label %for.i, label %endif37.i

else.i:                                           ; preds = %endif6.i.i, %endif.i
  %sub_tmp4.i.i = add nsw i32 %cast_tmp.i, -1077
  %.0201.i.i = select i1 %8, i64 %bit_and_tmp3.i, i64 %bit_or_tmp.i.i
  %.0.i47.i = select i1 %8, i32 -1076, i32 %sub_tmp4.i.i
  %bit_and_tmp.i48.i = and i64 %.0201.i.i, 1
  %17 = icmp eq i64 %bit_and_tmp.i48.i, 0
  %mul_tmp.i.i = shl nuw nsw i64 %.0201.i.i, 2
  %18 = icmp ne i64 %bit_and_tmp3.i, 0
  %19 = icmp ult i32 %cast_tmp.i, 2
  %bool_or_tmp.i.i = select i1 %18, i1 true, i1 %19
  %cast_tmp.i.i = zext i1 %bool_or_tmp.i.i to i32
  %20 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  store i64 0, i64* %2, align 8
  %21 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  store i64 0, i64* %3, align 8
  %22 = icmp sgt i32 %.0.i47.i, -1
  br i1 %22, label %then12.i.i, label %else60.i.i

then12.i.i:                                       ; preds = %else.i
  %mul_tmp.i.i.i = mul nuw nsw i32 %.0.i47.i, 78913
  %rshift_tmp.i.i.i = lshr i32 %mul_tmp.i.i.i, 18
  %23 = icmp ugt i32 %.0.i47.i, 3
  %cast_tmp15.neg.i.i = sext i1 %23 to i32
  %sub_tmp16.i.i = add nsw i32 %rshift_tmp.i.i.i, %cast_tmp15.neg.i.i
  %24 = icmp ult i32 %sub_tmp16.i.i, 3529
  tail call void @llvm.assume(i1 %24) #8
  %mul_tmp.i238.i.i = mul nuw nsw i32 %sub_tmp16.i.i, 1217359
  %rshift_tmp.i239.i.i = lshr i32 %mul_tmp.i238.i.i, 19
  %sub_tmp19.i.i = sub nsw i32 125, %.0.i47.i
  %add_tmp22.i.i = add nsw i32 %sub_tmp19.i.i, %sub_tmp16.i.i
  %add_tmp24.i.i = add nsw i32 %add_tmp22.i.i, %rshift_tmp.i239.i.i
  %25 = zext i32 %sub_tmp16.i.i to i64
  %26 = getelementptr [342 x [2 x i64]], [342 x [2 x i64]]* @std.ryu.DOUBLE_POW5_INV_SPLIT, i64 0, i64 %25, i64 0
  %27 = call fastcc i64 @func.std.ryu.mulShiftAll64..6.builtin.uint64.0P.const.builtin.uint64.builtin.uint32.0P.builtin.uint64.0P.builtin.uint64.builtin.uint32.builtin.uint64(i64 %.0201.i.i, i64* %26, i32 %add_tmp24.i.i, i64* nonnull %2, i64* nonnull %3, i32 %cast_tmp.i.i) #8
  %28 = icmp ult i32 %sub_tmp16.i.i, 22
  br i1 %28, label %then30.i.i, label %endif98.i.i

then30.i.i:                                       ; preds = %then12.i.i
  %cast_tmp32.i.i = trunc i64 %mul_tmp.i.i to i32
  %div_tmp.i.i.i = udiv i64 %mul_tmp.i.i, 5
  %cast_tmp34.i.i = trunc i64 %div_tmp.i.i.i to i32
  %mul_tmp35.neg.i.i = mul i32 %cast_tmp34.i.i, -5
  %sub_tmp36.i.i = sub i32 0, %cast_tmp32.i.i
  %29 = icmp eq i32 %mul_tmp35.neg.i.i, %sub_tmp36.i.i
  br i1 %29, label %for_condition_check.i.i.i.i, label %else41.i.i

for_condition_check.i.i.i.i:                      ; preds = %then30.i.i, %for_condition_check.i.i.i.i
  %.014.i.i.i.i = phi i64 [ %mul_tmp.i.i.i.i, %for_condition_check.i.i.i.i ], [ %mul_tmp.i.i, %then30.i.i ]
  %.0.i.i.i.i = phi i32 [ %32, %for_condition_check.i.i.i.i ], [ 0, %then30.i.i ]
  %30 = icmp ne i64 %.014.i.i.i.i, 0
  tail call void @llvm.assume(i1 %30) #8
  %mul_tmp.i.i.i.i = mul i64 %.014.i.i.i.i, -3689348814741910323
  %31 = icmp ugt i64 %mul_tmp.i.i.i.i, 3689348814741910323
  %32 = add i32 %.0.i.i.i.i, 1
  br i1 %31, label %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i, label %for_condition_check.i.i.i.i

func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i: ; preds = %for_condition_check.i.i.i.i
  %33 = icmp uge i32 %.0.i.i.i.i, %sub_tmp16.i.i
  br label %endif98.i.i

else41.i.i:                                       ; preds = %then30.i.i
  br i1 %17, label %then43.i.i, label %else50.i.i

then43.i.i:                                       ; preds = %else41.i.i
  %sub_tmp45.i.i = add nsw i64 %mul_tmp.i.i, -1
  %cast_tmp47.neg.i.i = sext i1 %bool_or_tmp.i.i to i64
  %sub_tmp48.i.i = add nsw i64 %sub_tmp45.i.i, %cast_tmp47.neg.i.i
  br label %for_condition_check.i.i243.i.i

for_condition_check.i.i243.i.i:                   ; preds = %for_condition_check.i.i243.i.i, %then43.i.i
  %.014.i.i240.i.i = phi i64 [ %sub_tmp48.i.i, %then43.i.i ], [ %mul_tmp.i.i242.i.i, %for_condition_check.i.i243.i.i ]
  %.0.i.i241.i.i = phi i32 [ 0, %then43.i.i ], [ %36, %for_condition_check.i.i243.i.i ]
  %34 = icmp ne i64 %.014.i.i240.i.i, 0
  tail call void @llvm.assume(i1 %34) #8
  %mul_tmp.i.i242.i.i = mul i64 %.014.i.i240.i.i, -3689348814741910323
  %35 = icmp ugt i64 %mul_tmp.i.i242.i.i, 3689348814741910323
  %36 = add i32 %.0.i.i241.i.i, 1
  br i1 %35, label %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i, label %for_condition_check.i.i243.i.i

func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i: ; preds = %for_condition_check.i.i243.i.i
  %37 = icmp uge i32 %.0.i.i241.i.i, %sub_tmp16.i.i
  br label %endif98.i.i

else50.i.i:                                       ; preds = %else41.i.i
  %add_tmp52.i.i = or i64 %mul_tmp.i.i, 2
  br label %for_condition_check.i.i248.i.i

for_condition_check.i.i248.i.i:                   ; preds = %for_condition_check.i.i248.i.i, %else50.i.i
  %.014.i.i245.i.i = phi i64 [ %add_tmp52.i.i, %else50.i.i ], [ %mul_tmp.i.i247.i.i, %for_condition_check.i.i248.i.i ]
  %.0.i.i246.i.i = phi i32 [ 0, %else50.i.i ], [ %40, %for_condition_check.i.i248.i.i ]
  %38 = icmp ne i64 %.014.i.i245.i.i, 0
  tail call void @llvm.assume(i1 %38) #8
  %mul_tmp.i.i247.i.i = mul i64 %.014.i.i245.i.i, -3689348814741910323
  %39 = icmp ugt i64 %mul_tmp.i.i247.i.i, 3689348814741910323
  %40 = add i32 %.0.i.i246.i.i, 1
  br i1 %39, label %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i, label %for_condition_check.i.i248.i.i

func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i: ; preds = %for_condition_check.i.i248.i.i
  %41 = icmp uge i32 %.0.i.i246.i.i, %sub_tmp16.i.i
  %cast_tmp54.neg.i.i = sext i1 %41 to i64
  %load_tmp55.i.i = load i64, i64* %2, align 8
  %sub_tmp56.i.i = add i64 %load_tmp55.i.i, %cast_tmp54.neg.i.i
  store i64 %sub_tmp56.i.i, i64* %2, align 8
  br label %endif98.i.i

else60.i.i:                                       ; preds = %else.i
  %mul_tmp.i250.i.i = mul nsw i32 %.0.i47.i, -732923
  %rshift_tmp.i251.i.i = lshr i32 %mul_tmp.i250.i.i, 20
  %42 = icmp ne i32 %.0.i47.i, -1
  %cast_tmp65.neg.i.i = sext i1 %42 to i32
  %sub_tmp66.i.i = add nsw i32 %rshift_tmp.i251.i.i, %cast_tmp65.neg.i.i
  %add_tmp69.i.i = add nsw i32 %sub_tmp66.i.i, %.0.i47.i
  %sub_tmp73.i.i = sub nsw i32 0, %add_tmp69.i.i
  %43 = icmp ult i32 %sub_tmp73.i.i, 3529
  tail call void @llvm.assume(i1 %43) #8
  %mul_tmp.i252.i.i = mul nsw i32 %add_tmp69.i.i, -1217359
  %rshift_tmp.i253.i.i = lshr i32 %mul_tmp.i252.i.i, 19
  %sub_tmp75.neg.i.i = add nsw i32 %sub_tmp66.i.i, 124
  %sub_tmp78.i.i = sub nsw i32 %sub_tmp75.neg.i.i, %rshift_tmp.i253.i.i
  %44 = zext i32 %sub_tmp73.i.i to i64
  %45 = getelementptr [326 x [2 x i64]], [326 x [2 x i64]]* @std.ryu.DOUBLE_POW5_SPLIT, i64 0, i64 %44, i64 0
  %46 = call fastcc i64 @func.std.ryu.mulShiftAll64..6.builtin.uint64.0P.const.builtin.uint64.builtin.uint32.0P.builtin.uint64.0P.builtin.uint64.builtin.uint32.builtin.uint64(i64 %.0201.i.i, i64* %45, i32 %sub_tmp78.i.i, i64* nonnull %2, i64* nonnull %3, i32 %cast_tmp.i.i) #8
  %47 = icmp ult i32 %sub_tmp66.i.i, 2
  br i1 %47, label %then84.i.i, label %else91.i.i

then84.i.i:                                       ; preds = %else60.i.i
  br i1 %17, label %for_condition_check.preheader.i.i, label %else88.i.i

else88.i.i:                                       ; preds = %then84.i.i
  %load_tmp89.i.i = load i64, i64* %2, align 8
  %48 = add i64 %load_tmp89.i.i, -1
  store i64 %48, i64* %2, align 8
  br label %for_condition_check.preheader.i.i

else91.i.i:                                       ; preds = %else60.i.i
  %49 = icmp ult i32 %sub_tmp66.i.i, 63
  br i1 %49, label %then93.i.i, label %endif98.i.i

then93.i.i:                                       ; preds = %else91.i.i
  %50 = icmp ne i64 %.0201.i.i, 0
  tail call void @llvm.assume(i1 %50) #8
  %51 = zext i32 %sub_tmp66.i.i to i64
  %notmask.i.i.i = shl nsw i64 -1, %51
  %sub_tmp.i.i.i = xor i64 %notmask.i.i.i, -1
  %bit_and_tmp.i.i.i = and i64 %mul_tmp.i.i, %sub_tmp.i.i.i
  %52 = icmp eq i64 %bit_and_tmp.i.i.i, 0
  br label %endif98.i.i

endif98.i.i:                                      ; preds = %then93.i.i, %else91.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i, %then12.i.i
  %.3212.i.i = phi i1 [ false, %then12.i.i ], [ %33, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i ], [ %52, %then93.i.i ], [ false, %else91.i.i ]
  %.3207.i.i = phi i1 [ false, %then12.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ %37, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i ], [ false, %then93.i.i ], [ false, %else91.i.i ]
  %.0203.i.i = phi i32 [ %sub_tmp16.i.i, %then12.i.i ], [ %sub_tmp16.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ %sub_tmp16.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i ], [ %sub_tmp16.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i ], [ %add_tmp69.i.i, %then93.i.i ], [ %add_tmp69.i.i, %else91.i.i ]
  %.0202.i.i = phi i64 [ %27, %then12.i.i ], [ %27, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ %27, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit244.i.i ], [ %27, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit249.i.i ], [ %46, %then93.i.i ], [ %46, %else91.i.i ]
  %spec.select.i.i = select i1 %.3207.i.i, i1 true, i1 %.3212.i.i
  br i1 %spec.select.i.i, label %for_condition_check.preheader.i.i, label %else196.i.i

for_condition_check.preheader.i.i:                ; preds = %endif98.i.i, %else88.i.i, %then84.i.i
  %.0202340.i.i = phi i64 [ %.0202.i.i, %endif98.i.i ], [ %46, %else88.i.i ], [ %46, %then84.i.i ]
  %.0203339.i.i = phi i32 [ %.0203.i.i, %endif98.i.i ], [ %add_tmp69.i.i, %else88.i.i ], [ %add_tmp69.i.i, %then84.i.i ]
  %.3207337.i.i = phi i1 [ %.3207.i.i, %endif98.i.i ], [ false, %else88.i.i ], [ %bool_or_tmp.i.i, %then84.i.i ]
  %.3212336.i.i = phi i1 [ %.3212.i.i, %endif98.i.i ], [ true, %else88.i.i ], [ true, %then84.i.i ]
  %.promoted282.i.i = load i64, i64* %2, align 8
  %.promoted284.i.i = load i64, i64* %3, align 8
  %div_tmp.i255286.i.i = udiv i64 %.promoted282.i.i, 10
  %div_tmp.i256287.i.i = udiv i64 %.promoted284.i.i, 10
  %.not235288.i.i = icmp ugt i64 %div_tmp.i255286.i.i, %div_tmp.i256287.i.i
  br i1 %.not235288.i.i, label %endif110.i.i, label %then109.i.i

then109.i.i:                                      ; preds = %endif110.i.i, %for_condition_check.preheader.i.i
  %.promoted304.i.i = phi i64 [ %.promoted284.i.i, %for_condition_check.preheader.i.i ], [ %div_tmp.i256296.i.i, %endif110.i.i ]
  %.0221.lcssa.i.i = phi i8 [ 0, %for_condition_check.preheader.i.i ], [ %sub_tmp123.i.i, %endif110.i.i ]
  %.0215.lcssa.i.i = phi i32 [ 0, %for_condition_check.preheader.i.i ], [ %55, %endif110.i.i ]
  %.4213.lcssa.i.i = phi i1 [ %.3212336.i.i, %for_condition_check.preheader.i.i ], [ %bit_and_tmp129.i.i, %endif110.i.i ]
  %.4208.lcssa.i.i = phi i1 [ %.3207337.i.i, %for_condition_check.preheader.i.i ], [ %bit_and_tmp126.i.i, %endif110.i.i ]
  %.1.lcssa.i.i = phi i64 [ %.0202340.i.i, %for_condition_check.preheader.i.i ], [ %div_tmp.i257.i.i, %endif110.i.i ]
  br i1 %.4208.lcssa.i.i, label %for_condition_check138.preheader.i.i, label %endif169.i.i

for_condition_check138.preheader.i.i:             ; preds = %then109.i.i
  %div_tmp.i258308.i.i = udiv i64 %.promoted304.i.i, 10
  %cast_tmp144309.i.i = trunc i64 %.promoted304.i.i to i32
  %cast_tmp146310.i.i = trunc i64 %div_tmp.i258308.i.i to i32
  %mul_tmp147.neg311.i.i = mul i32 %cast_tmp146310.i.i, -10
  %sub_tmp148312.i.i = sub i32 0, %cast_tmp144309.i.i
  %.not236313.i.i = icmp eq i32 %mul_tmp147.neg311.i.i, %sub_tmp148312.i.i
  br i1 %.not236313.i.i, label %endif151.i.i, label %endif169.i.i

endif110.i.i:                                     ; preds = %for_condition_check.preheader.i.i, %endif110.i.i
  %div_tmp.i256296.i.i = phi i64 [ %div_tmp.i256.i.i, %endif110.i.i ], [ %div_tmp.i256287.i.i, %for_condition_check.preheader.i.i ]
  %div_tmp.i255295.i.i = phi i64 [ %div_tmp.i255.i.i, %endif110.i.i ], [ %div_tmp.i255286.i.i, %for_condition_check.preheader.i.i ]
  %.1294.i.i = phi i64 [ %div_tmp.i257.i.i, %endif110.i.i ], [ %.0202340.i.i, %for_condition_check.preheader.i.i ]
  %.4208293.i.i = phi i1 [ %bit_and_tmp126.i.i, %endif110.i.i ], [ %.3207337.i.i, %for_condition_check.preheader.i.i ]
  %.4213292.i.i = phi i1 [ %bit_and_tmp129.i.i, %endif110.i.i ], [ %.3212336.i.i, %for_condition_check.preheader.i.i ]
  %.0215291.i.i = phi i32 [ %55, %endif110.i.i ], [ 0, %for_condition_check.preheader.i.i ]
  %.0221290.i.i = phi i8 [ %sub_tmp123.i.i, %endif110.i.i ], [ 0, %for_condition_check.preheader.i.i ]
  %div_tmp.i256285289.i.i = phi i64 [ %div_tmp.i256296.i.i, %endif110.i.i ], [ %.promoted284.i.i, %for_condition_check.preheader.i.i ]
  %cast_tmp112.i.i = trunc i64 %div_tmp.i256285289.i.i to i32
  %cast_tmp114.i.i = trunc i64 %div_tmp.i256296.i.i to i32
  %mul_tmp115.neg.i.i = mul i32 %cast_tmp114.i.i, -10
  %div_tmp.i257.i.i = udiv i64 %.1294.i.i, 10
  %cast_tmp119.i.i = trunc i64 %.1294.i.i to i8
  %cast_tmp121.i.i = trunc i64 %div_tmp.i257.i.i to i8
  %mul_tmp122.neg.i.i = mul i8 %cast_tmp121.i.i, -10
  %sub_tmp123.i.i = add i8 %mul_tmp122.neg.i.i, %cast_tmp119.i.i
  %sub_tmp116.i.i = sub i32 0, %cast_tmp112.i.i
  %53 = icmp eq i32 %mul_tmp115.neg.i.i, %sub_tmp116.i.i
  %bit_and_tmp126.i.i = and i1 %.4208293.i.i, %53
  %54 = icmp eq i8 %.0221290.i.i, 0
  %bit_and_tmp129.i.i = and i1 %.4213292.i.i, %54
  %55 = add i32 %.0215291.i.i, 1
  %div_tmp.i255.i.i = udiv i64 %div_tmp.i255295.i.i, 10
  %div_tmp.i256.i.i = udiv i64 %div_tmp.i256296.i.i, 10
  %.not235.i.i = icmp ugt i64 %div_tmp.i255.i.i, %div_tmp.i256.i.i
  br i1 %.not235.i.i, label %endif110.i.i, label %then109.i.i

endif151.i.i:                                     ; preds = %for_condition_check138.preheader.i.i, %endif151.i.i
  %div_tmp.i258319.i.i = phi i64 [ %div_tmp.i258.i.i, %endif151.i.i ], [ %div_tmp.i258308.i.i, %for_condition_check138.preheader.i.i ]
  %.2318.i.i = phi i64 [ %div_tmp.i260.i.i, %endif151.i.i ], [ %.1.lcssa.i.i, %for_condition_check138.preheader.i.i ]
  %.5214317.i.i = phi i1 [ %bit_and_tmp162.i.i, %endif151.i.i ], [ %.4213.lcssa.i.i, %for_condition_check138.preheader.i.i ]
  %.1216316.i.i = phi i32 [ %57, %endif151.i.i ], [ %.0215.lcssa.i.i, %for_condition_check138.preheader.i.i ]
  %.1222315.i.i = phi i8 [ %sub_tmp159.i.i, %endif151.i.i ], [ %.0221.lcssa.i.i, %for_condition_check138.preheader.i.i ]
  %div_tmp.i260.i.i = udiv i64 %.2318.i.i, 10
  %cast_tmp155.i.i = trunc i64 %.2318.i.i to i8
  %cast_tmp157.i.i = trunc i64 %div_tmp.i260.i.i to i8
  %mul_tmp158.neg.i.i = mul i8 %cast_tmp157.i.i, -10
  %sub_tmp159.i.i = add i8 %mul_tmp158.neg.i.i, %cast_tmp155.i.i
  %56 = icmp eq i8 %.1222315.i.i, 0
  %bit_and_tmp162.i.i = and i1 %.5214317.i.i, %56
  %57 = add i32 %.1216316.i.i, 1
  %div_tmp.i258.i.i = udiv i64 %div_tmp.i258319.i.i, 10
  %cast_tmp144.i.i = trunc i64 %div_tmp.i258319.i.i to i32
  %cast_tmp146.i.i = trunc i64 %div_tmp.i258.i.i to i32
  %mul_tmp147.neg.i.i = mul i32 %cast_tmp146.i.i, -10
  %sub_tmp148.i.i = sub i32 0, %cast_tmp144.i.i
  %.not236.i.i = icmp eq i32 %mul_tmp147.neg.i.i, %sub_tmp148.i.i
  br i1 %.not236.i.i, label %endif151.i.i, label %endif169.i.i

endif169.i.i:                                     ; preds = %endif151.i.i, %for_condition_check138.preheader.i.i, %then109.i.i
  %load_tmp180.i.i = phi i64 [ %.promoted304.i.i, %then109.i.i ], [ %.promoted304.i.i, %for_condition_check138.preheader.i.i ], [ %div_tmp.i258319.i.i, %endif151.i.i ]
  %.2223.i.i = phi i8 [ %.0221.lcssa.i.i, %then109.i.i ], [ %.0221.lcssa.i.i, %for_condition_check138.preheader.i.i ], [ %sub_tmp159.i.i, %endif151.i.i ]
  %.2217.i.i = phi i32 [ %.0215.lcssa.i.i, %then109.i.i ], [ %.0215.lcssa.i.i, %for_condition_check138.preheader.i.i ], [ %57, %endif151.i.i ]
  %.6.i.i = phi i1 [ %.4213.lcssa.i.i, %then109.i.i ], [ %.4213.lcssa.i.i, %for_condition_check138.preheader.i.i ], [ %bit_and_tmp162.i.i, %endif151.i.i ]
  %.3.i.i = phi i64 [ %.1.lcssa.i.i, %then109.i.i ], [ %.1.lcssa.i.i, %for_condition_check138.preheader.i.i ], [ %div_tmp.i260.i.i, %endif151.i.i ]
  %58 = icmp eq i8 %.2223.i.i, 5
  %bool_and_tmp.i.i = select i1 %.6.i.i, i1 %58, i1 false
  %mod_tmp.i.i = and i64 %.3.i.i, 1
  %59 = icmp eq i64 %mod_tmp.i.i, 0
  %spec.select237.i.i = select i1 %59, i8 4, i8 5
  %.3224.i.i = select i1 %bool_and_tmp.i.i, i8 %spec.select237.i.i, i8 %.2223.i.i
  %60 = icmp eq i64 %.3.i.i, %load_tmp180.i.i
  br i1 %60, label %bool_and_rhs181.i.i, label %bool_or_rhs190.i.i

bool_and_rhs181.i.i:                              ; preds = %endif169.i.i
  %61 = select i1 %17, i1 %.4208.lcssa.i.i, i1 false
  br i1 %61, label %bool_or_rhs190.i.i, label %bool_or_end192.i.i

bool_or_rhs190.i.i:                               ; preds = %bool_and_rhs181.i.i, %endif169.i.i
  %62 = icmp ugt i8 %.3224.i.i, 4
  %phi.cast.i.i = zext i1 %62 to i64
  br label %bool_or_end192.i.i

bool_or_end192.i.i:                               ; preds = %bool_or_rhs190.i.i, %bool_and_rhs181.i.i
  %bool_or_tmp193.i.i = phi i64 [ 1, %bool_and_rhs181.i.i ], [ %phi.cast.i.i, %bool_or_rhs190.i.i ]
  %add_tmp195.i.i = add i64 %bool_or_tmp193.i.i, %.3.i.i
  br label %"func.std.ryu.d2d..2.builtin.uint64.builtin.uint32.struct.std::ryu::floating_decimal_64.exit.i"

else196.i.i:                                      ; preds = %endif98.i.i
  %load_tmp197.i.i = load i64, i64* %2, align 8
  %div_tmp.i261.i.i = udiv i64 %load_tmp197.i.i, 100
  %load_tmp198.i.i = load i64, i64* %3, align 8
  %div_tmp.i262.i.i = udiv i64 %load_tmp198.i.i, 100
  %63 = icmp ugt i64 %div_tmp.i261.i.i, %div_tmp.i262.i.i
  br i1 %63, label %then201.i.i, label %endif215.i.i

then201.i.i:                                      ; preds = %else196.i.i
  %div_tmp.i263.i.i = udiv i64 %.0202.i.i, 100
  %cast_tmp204.i.i = trunc i64 %.0202.i.i to i32
  %cast_tmp206.i.i = trunc i64 %div_tmp.i263.i.i to i32
  %mul_tmp207.neg.i.i = mul i32 %cast_tmp206.i.i, -100
  %sub_tmp208.i.i = add i32 %mul_tmp207.neg.i.i, %cast_tmp204.i.i
  %64 = icmp ugt i32 %sub_tmp208.i.i, 49
  br label %endif215.i.i

endif215.i.i:                                     ; preds = %then201.i.i, %else196.i.i
  %.promoted268.i.i = phi i64 [ %div_tmp.i262.i.i, %then201.i.i ], [ %load_tmp198.i.i, %else196.i.i ]
  %.promoted.i.i = phi i64 [ %div_tmp.i261.i.i, %then201.i.i ], [ %load_tmp197.i.i, %else196.i.i ]
  %.0226.i.i = phi i1 [ %64, %then201.i.i ], [ false, %else196.i.i ]
  %.3218.i.i = phi i32 [ 2, %then201.i.i ], [ 0, %else196.i.i ]
  %.4.i.i = phi i64 [ %div_tmp.i263.i.i, %then201.i.i ], [ %.0202.i.i, %else196.i.i ]
  %div_tmp.i264270.i.i = udiv i64 %.promoted.i.i, 10
  %div_tmp.i265271.i.i = udiv i64 %.promoted268.i.i, 10
  %.not272.i.i = icmp ugt i64 %div_tmp.i264270.i.i, %div_tmp.i265271.i.i
  br i1 %.not272.i.i, label %endif225.i.i, label %then224.i.i

for_condition_check216.then224_crit_edge.i.i:     ; preds = %endif225.i.i
  %cast_tmp228.le.i.i = trunc i64 %.5274.i.i to i32
  %cast_tmp230.le.i.i = trunc i64 %div_tmp.i266.i.i to i32
  %mul_tmp231.neg.le.i.i = mul i32 %cast_tmp230.le.i.i, -10
  %sub_tmp232.le.i.i = add i32 %mul_tmp231.neg.le.i.i, %cast_tmp228.le.i.i
  %65 = icmp ugt i32 %sub_tmp232.le.i.i, 4
  br label %then224.i.i

then224.i.i:                                      ; preds = %for_condition_check216.then224_crit_edge.i.i, %endif215.i.i
  %div_tmp.i265269.lcssa.i.i = phi i64 [ %div_tmp.i265276.i.i, %for_condition_check216.then224_crit_edge.i.i ], [ %.promoted268.i.i, %endif215.i.i ]
  %.1227.lcssa.i.i = phi i1 [ %65, %for_condition_check216.then224_crit_edge.i.i ], [ %.0226.i.i, %endif215.i.i ]
  %.4219.lcssa.i.i = phi i32 [ %67, %for_condition_check216.then224_crit_edge.i.i ], [ %.3218.i.i, %endif215.i.i ]
  %.5.lcssa.i.i = phi i64 [ %div_tmp.i266.i.i, %for_condition_check216.then224_crit_edge.i.i ], [ %.4.i.i, %endif215.i.i ]
  %66 = icmp eq i64 %.5.lcssa.i.i, %div_tmp.i265269.lcssa.i.i
  %spec.select1.i.i = select i1 %66, i1 true, i1 %.1227.lcssa.i.i
  %cast_tmp245.i.i = zext i1 %spec.select1.i.i to i64
  %add_tmp246.i.i = add i64 %.5.lcssa.i.i, %cast_tmp245.i.i
  br label %"func.std.ryu.d2d..2.builtin.uint64.builtin.uint32.struct.std::ryu::floating_decimal_64.exit.i"

endif225.i.i:                                     ; preds = %endif215.i.i, %endif225.i.i
  %div_tmp.i265276.i.i = phi i64 [ %div_tmp.i265.i.i, %endif225.i.i ], [ %div_tmp.i265271.i.i, %endif215.i.i ]
  %div_tmp.i264275.i.i = phi i64 [ %div_tmp.i264.i.i, %endif225.i.i ], [ %div_tmp.i264270.i.i, %endif215.i.i ]
  %.5274.i.i = phi i64 [ %div_tmp.i266.i.i, %endif225.i.i ], [ %.4.i.i, %endif215.i.i ]
  %.4219273.i.i = phi i32 [ %67, %endif225.i.i ], [ %.3218.i.i, %endif215.i.i ]
  %div_tmp.i266.i.i = udiv i64 %.5274.i.i, 10
  %67 = add i32 %.4219273.i.i, 1
  %div_tmp.i264.i.i = udiv i64 %div_tmp.i264275.i.i, 10
  %div_tmp.i265.i.i = udiv i64 %div_tmp.i265276.i.i, 10
  %.not.i49.i = icmp ugt i64 %div_tmp.i264.i.i, %div_tmp.i265.i.i
  br i1 %.not.i49.i, label %endif225.i.i, label %for_condition_check216.then224_crit_edge.i.i

"func.std.ryu.d2d..2.builtin.uint64.builtin.uint32.struct.std::ryu::floating_decimal_64.exit.i": ; preds = %then224.i.i, %bool_or_end192.i.i
  %.0203338.i.i = phi i32 [ %.0203339.i.i, %bool_or_end192.i.i ], [ %.0203.i.i, %then224.i.i ]
  %.0225.i.i = phi i64 [ %add_tmp195.i.i, %bool_or_end192.i.i ], [ %add_tmp246.i.i, %then224.i.i ]
  %.5220.i.i = phi i32 [ %.2217.i.i, %bool_or_end192.i.i ], [ %.4219.lcssa.i.i, %then224.i.i ]
  %add_tmp250.i.i = add i32 %.5220.i.i, %.0203338.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %endif37.i

endif37.i:                                        ; preds = %for.i, %"func.std.ryu.d2d..2.builtin.uint64.builtin.uint32.struct.std::ryu::floating_decimal_64.exit.i", %then17.i
  %.sroa.10.2.i = phi i32 [ %add_tmp250.i.i, %"func.std.ryu.d2d..2.builtin.uint64.builtin.uint32.struct.std::ryu::floating_decimal_64.exit.i" ], [ 0, %then17.i ], [ %15, %for.i ]
  %.sroa.0.2.i = phi i64 [ %.0225.i.i, %"func.std.ryu.d2d..2.builtin.uint64.builtin.uint32.struct.std::ryu::floating_decimal_64.exit.i" ], [ %rshift_tmp.i.i, %then17.i ], [ %.065.i, %for.i ]
  br i1 %5, label %then.i50.i, label %endif.i52.i

then.i50.i:                                       ; preds = %endif37.i
  store i8 45, i8* %1, align 1
  %68 = getelementptr i8, i8* %1, i64 1
  br label %endif.i52.i

endif.i52.i:                                      ; preds = %then.i50.i, %endif37.i
  %.0.i51.i = phi i8* [ %68, %then.i50.i ], [ %1, %endif37.i ]
  %69 = icmp ult i64 %.sroa.0.2.i, 100000000000000000
  tail call void @llvm.assume(i1 %69) #8
  %70 = icmp ugt i64 %.sroa.0.2.i, 9999999999999999
  br i1 %70, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread.i.i, label %else.i.i.i

else.i.i.i:                                       ; preds = %endif.i52.i
  %71 = icmp ugt i64 %.sroa.0.2.i, 999999999999999
  br i1 %71, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread65.i.i, label %else4.i.i.i

else4.i.i.i:                                      ; preds = %else.i.i.i
  %72 = icmp ugt i64 %.sroa.0.2.i, 99999999999999
  br i1 %72, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread.i, label %else7.i.i.i

else7.i.i.i:                                      ; preds = %else4.i.i.i
  %73 = icmp ugt i64 %.sroa.0.2.i, 9999999999999
  br i1 %73, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread70.i, label %else10.i.i.i

else10.i.i.i:                                     ; preds = %else7.i.i.i
  %74 = icmp ugt i64 %.sroa.0.2.i, 999999999999
  br i1 %74, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread, label %else13.i.i.i

else13.i.i.i:                                     ; preds = %else10.i.i.i
  %75 = icmp ugt i64 %.sroa.0.2.i, 99999999999
  br i1 %75, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread11, label %else16.i.i.i

else16.i.i.i:                                     ; preds = %else13.i.i.i
  %76 = icmp ugt i64 %.sroa.0.2.i, 9999999999
  br i1 %76, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else19.i.i.i

else19.i.i.i:                                     ; preds = %else16.i.i.i
  %77 = icmp ugt i64 %.sroa.0.2.i, 999999999
  br i1 %77, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else22.i.i.i

else22.i.i.i:                                     ; preds = %else19.i.i.i
  %78 = icmp ugt i64 %.sroa.0.2.i, 99999999
  br i1 %78, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else25.i.i.i

else25.i.i.i:                                     ; preds = %else22.i.i.i
  %79 = icmp ugt i64 %.sroa.0.2.i, 9999999
  br i1 %79, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else28.i.i.i

else28.i.i.i:                                     ; preds = %else25.i.i.i
  %80 = icmp ugt i64 %.sroa.0.2.i, 999999
  br i1 %80, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else31.i.i.i

else31.i.i.i:                                     ; preds = %else28.i.i.i
  %81 = icmp ugt i64 %.sroa.0.2.i, 99999
  br i1 %81, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else34.i.i.i

else34.i.i.i:                                     ; preds = %else31.i.i.i
  %82 = icmp ugt i64 %.sroa.0.2.i, 9999
  br i1 %82, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else37.i.i.i

else37.i.i.i:                                     ; preds = %else34.i.i.i
  %83 = icmp ugt i64 %.sroa.0.2.i, 999
  br i1 %83, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i, label %else40.i.i.i

else40.i.i.i:                                     ; preds = %else37.i.i.i
  %84 = icmp ugt i64 %.sroa.0.2.i, 99
  %85 = icmp ugt i64 %.sroa.0.2.i, 9
  %..i.i.i = select i1 %85, i32 2, i32 1
  %86 = select i1 %84, i32 3, i32 %..i.i.i
  br label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i: ; preds = %else40.i.i.i, %else37.i.i.i, %else34.i.i.i, %else31.i.i.i, %else28.i.i.i, %else25.i.i.i, %else22.i.i.i, %else19.i.i.i, %else16.i.i.i
  %87 = phi i32 [ 11, %else16.i.i.i ], [ 10, %else19.i.i.i ], [ 9, %else22.i.i.i ], [ 8, %else25.i.i.i ], [ 7, %else28.i.i.i ], [ 6, %else31.i.i.i ], [ 5, %else34.i.i.i ], [ %86, %else40.i.i.i ], [ 4, %else37.i.i.i ]
  %add_tmp.i.i = add i32 %.sroa.10.2.i, 3
  %88 = add i32 %add_tmp.i.i, %87
  %89 = icmp ult i32 %88, 19
  br i1 %89, label %else13.i.i.i.i, label %else13.i.i31.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread11: ; preds = %else13.i.i.i
  %90 = add i32 %.sroa.10.2.i, 15
  %91 = icmp ult i32 %90, 19
  br i1 %91, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %then.i51.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread: ; preds = %else10.i.i.i
  %92 = add i32 %.sroa.10.2.i, 16
  %93 = icmp ult i32 %92, 19
  br i1 %93, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %then.i51.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread70.i: ; preds = %else7.i.i.i
  %94 = add i32 %.sroa.10.2.i, 17
  %95 = icmp ult i32 %94, 19
  br i1 %95, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %then.i51.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread.i: ; preds = %else4.i.i.i
  %96 = add i32 %.sroa.10.2.i, 18
  %97 = icmp ult i32 %96, 19
  br i1 %97, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %then.i51.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread65.i.i: ; preds = %else.i.i.i
  %98 = icmp ugt i32 %.sroa.10.2.i, -20
  br i1 %98, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %then.i51.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread.i.i: ; preds = %endif.i52.i
  %99 = add i32 %.sroa.10.2.i, 20
  %100 = icmp ult i32 %99, 19
  br i1 %100, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %then.i51.i.i

else13.i.i.i.i:                                   ; preds = %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i
  br i1 %75, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else16.i.i.i.i

else16.i.i.i.i:                                   ; preds = %else13.i.i.i.i
  %101 = icmp ugt i64 %.sroa.0.2.i, 9999999999
  br i1 %101, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else19.i.i.i.i

else19.i.i.i.i:                                   ; preds = %else16.i.i.i.i
  %102 = icmp ugt i64 %.sroa.0.2.i, 999999999
  br i1 %102, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else22.i.i.i.i

else22.i.i.i.i:                                   ; preds = %else19.i.i.i.i
  %103 = icmp ugt i64 %.sroa.0.2.i, 99999999
  br i1 %103, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else25.i.i.i.i

else25.i.i.i.i:                                   ; preds = %else22.i.i.i.i
  %104 = icmp ugt i64 %.sroa.0.2.i, 9999999
  br i1 %104, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else28.i.i.i.i

else28.i.i.i.i:                                   ; preds = %else25.i.i.i.i
  %105 = icmp ugt i64 %.sroa.0.2.i, 999999
  br i1 %105, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else31.i.i.i.i

else31.i.i.i.i:                                   ; preds = %else28.i.i.i.i
  %106 = icmp ugt i64 %.sroa.0.2.i, 99999
  br i1 %106, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else34.i.i.i.i

else34.i.i.i.i:                                   ; preds = %else31.i.i.i.i
  %107 = icmp ugt i64 %.sroa.0.2.i, 9999
  br i1 %107, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else37.i.i.i.i

else37.i.i.i.i:                                   ; preds = %else34.i.i.i.i
  %108 = icmp ugt i64 %.sroa.0.2.i, 999
  br i1 %108, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i, label %else40.i.i.i.i

else40.i.i.i.i:                                   ; preds = %else37.i.i.i.i
  %109 = icmp ugt i64 %.sroa.0.2.i, 99
  %110 = icmp ugt i64 %.sroa.0.2.i, 9
  %..i.i.i.i = select i1 %110, i32 2, i32 1
  %111 = select i1 %109, i32 3, i32 %..i.i.i.i
  br label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i: ; preds = %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread11, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread, %else40.i.i.i.i, %else37.i.i.i.i, %else34.i.i.i.i, %else31.i.i.i.i, %else28.i.i.i.i, %else25.i.i.i.i, %else22.i.i.i.i, %else19.i.i.i.i, %else16.i.i.i.i, %else13.i.i.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread65.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread70.i
  %112 = phi i32 [ 12, %else13.i.i.i.i ], [ 11, %else16.i.i.i.i ], [ 10, %else19.i.i.i.i ], [ 9, %else22.i.i.i.i ], [ 8, %else25.i.i.i.i ], [ 7, %else28.i.i.i.i ], [ 6, %else31.i.i.i.i ], [ 5, %else34.i.i.i.i ], [ %111, %else40.i.i.i.i ], [ 4, %else37.i.i.i.i ], [ 17, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread.i.i ], [ 16, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread65.i.i ], [ 15, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread.i ], [ 14, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread70.i ], [ 13, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread ], [ 12, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread11 ]
  %sub_tmp.i.i54.i = add i32 %112, %.sroa.10.2.i
  %add_tmp.i.i.i = add i32 %sub_tmp.i.i54.i, -1
  %113 = icmp slt i32 %add_tmp.i.i.i, 0
  br i1 %113, label %then.i.i.i, label %endif.i.i.i

then.i.i.i:                                       ; preds = %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i
  %unary_minus_tmp.i.i.i = sub i32 1, %sub_tmp.i.i54.i
  %add_tmp7.i.i.i = sub i32 2, %sub_tmp.i.i54.i
  %cast_tmp.i.i.i = sext i32 %add_tmp7.i.i.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.0.i51.i, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %cast_tmp.i.i.i, i1 false) #8
  %114 = sext i32 %unary_minus_tmp.i.i.i to i64
  %ptr_add_tmp.i.i.i = getelementptr i8, i8* %.0.i51.i, i64 %114
  br label %endif.i.i.i

endif.i.i.i:                                      ; preds = %then.i.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i
  %.0.i.i.i = phi i8* [ %ptr_add_tmp.i.i.i, %then.i.i.i ], [ %.0.i51.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.i ]
  %.not.i.i.i = icmp ult i64 %.sroa.0.2.i, 4294967296
  br i1 %.not.i.i.i, label %endif.i.i.endif68.i.i_crit_edge.i, label %then12.i.i.i

endif.i.i.endif68.i.i_crit_edge.i:                ; preds = %endif.i.i.i
  %.pre.i = trunc i64 %.sroa.0.2.i to i32
  br label %endif68.i.i.i

then12.i.i.i:                                     ; preds = %endif.i.i.i
  %div_tmp.i.i.i.i = udiv i64 %.sroa.0.2.i, 100000000
  %cast_tmp15.i.i.i = trunc i64 %.sroa.0.2.i to i32
  %cast_tmp17.i.i.i = trunc i64 %div_tmp.i.i.i.i to i32
  %mul_tmp.neg.i.i.i = mul i32 %cast_tmp17.i.i.i, -100000000
  %sub_tmp18.i.i.i = add i32 %mul_tmp.neg.i.i.i, %cast_tmp15.i.i.i
  %mod_tmp.i.i.i = urem i32 %sub_tmp18.i.i.i, 10000
  %div_tmp.i.i55.i = udiv i32 %sub_tmp18.i.i.i, 10000
  %mod_tmp23.i.i.i = urem i32 %div_tmp.i.i55.i, 10000
  %mod_tmp25.lhs.trunc.i.i.i = trunc i32 %mod_tmp.i.i.i to i16
  %mod_tmp25113.i.i.i = urem i16 %mod_tmp25.lhs.trunc.i.i.i, 100
  %115 = shl nuw nsw i16 %mod_tmp25113.i.i.i, 1
  %div_tmp27114.i.i.i = udiv i16 %mod_tmp25.lhs.trunc.i.i.i, 100
  %116 = shl nuw nsw i16 %div_tmp27114.i.i.i, 1
  %mod_tmp30.lhs.trunc.i.i.i = trunc i32 %mod_tmp23.i.i.i to i16
  %mod_tmp30115.i.i.i = urem i16 %mod_tmp30.lhs.trunc.i.i.i, 100
  %117 = shl nuw nsw i16 %mod_tmp30115.i.i.i, 1
  %div_tmp33116.i.i.i = udiv i16 %mod_tmp30.lhs.trunc.i.i.i, 100
  %118 = shl nuw nsw i16 %div_tmp33116.i.i.i, 1
  %119 = zext i32 %112 to i64
  %ptr_add_tmp37.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %119
  %ptr_sub_tmp39.i.i.i = getelementptr i8, i8* %ptr_add_tmp37.i.i.i, i64 -1
  %120 = zext i16 %115 to i64
  %ptr_add_tmp41.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %120
  %121 = bitcast i8* %ptr_add_tmp41.i.i.i to i16*
  %122 = bitcast i8* %ptr_sub_tmp39.i.i.i to i16*
  %123 = load i16, i16* %121, align 2
  store i16 %123, i16* %122, align 1
  %ptr_sub_tmp47.i.i.i = getelementptr i8, i8* %ptr_add_tmp37.i.i.i, i64 -3
  %124 = zext i16 %116 to i64
  %ptr_add_tmp49.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %124
  %125 = bitcast i8* %ptr_add_tmp49.i.i.i to i16*
  %126 = bitcast i8* %ptr_sub_tmp47.i.i.i to i16*
  %127 = load i16, i16* %125, align 2
  store i16 %127, i16* %126, align 1
  %ptr_sub_tmp55.i.i.i = getelementptr i8, i8* %ptr_add_tmp37.i.i.i, i64 -5
  %128 = zext i16 %117 to i64
  %ptr_add_tmp57.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %128
  %129 = bitcast i8* %ptr_add_tmp57.i.i.i to i16*
  %130 = bitcast i8* %ptr_sub_tmp55.i.i.i to i16*
  %131 = load i16, i16* %129, align 2
  store i16 %131, i16* %130, align 1
  %ptr_sub_tmp63.i.i.i = getelementptr i8, i8* %ptr_add_tmp37.i.i.i, i64 -7
  %132 = zext i16 %118 to i64
  %ptr_add_tmp65.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %132
  %133 = bitcast i8* %ptr_add_tmp65.i.i.i to i16*
  %134 = bitcast i8* %ptr_sub_tmp63.i.i.i to i16*
  %135 = load i16, i16* %133, align 2
  store i16 %135, i16* %134, align 1
  br label %endif68.i.i.i

endif68.i.i.i:                                    ; preds = %then12.i.i.i, %endif.i.i.endif68.i.i_crit_edge.i
  %cast_tmp70.i.i.pre-phi.i = phi i32 [ %.pre.i, %endif.i.i.endif68.i.i_crit_edge.i ], [ %cast_tmp17.i.i.i, %then12.i.i.i ]
  %.0104.i.i.i = phi i32 [ 0, %endif.i.i.endif68.i.i_crit_edge.i ], [ 8, %then12.i.i.i ]
  %136 = icmp ugt i32 %cast_tmp70.i.i.pre-phi.i, 9999
  br i1 %136, label %while.lr.ph.i.i.i, label %endwhile.i.i.i

while.lr.ph.i.i.i:                                ; preds = %endif68.i.i.i
  %137 = zext i32 %112 to i64
  %ptr_add_tmp87.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %137
  br label %while.i.i.i

endwhile.i.i.i:                                   ; preds = %while.i.i.i, %endif68.i.i.i
  %.0106.lcssa.i.i.i = phi i32 [ %cast_tmp70.i.i.pre-phi.i, %endif68.i.i.i ], [ %div_tmp74.i.i.i, %while.i.i.i ]
  %.1105.lcssa.i.i.i = phi i32 [ %.0104.i.i.i, %endif68.i.i.i ], [ %add_tmp102.i.i.i, %while.i.i.i ]
  %138 = icmp ugt i32 %.0106.lcssa.i.i.i, 99
  br i1 %138, label %then104.i.i.i, label %endif120.i.i.i

while.i.i.i:                                      ; preds = %while.i.i.i, %while.lr.ph.i.i.i
  %.1105118.i.i.i = phi i32 [ %.0104.i.i.i, %while.lr.ph.i.i.i ], [ %add_tmp102.i.i.i, %while.i.i.i ]
  %.0106117.i.i.i = phi i32 [ %cast_tmp70.i.i.pre-phi.i, %while.lr.ph.i.i.i ], [ %div_tmp74.i.i.i, %while.i.i.i ]
  %div_tmp74.i.i.i = udiv i32 %.0106117.i.i.i, 10000
  %mul_tmp75.neg.i.i.i = mul i32 %div_tmp74.i.i.i, -10000
  %sub_tmp76.i.i.i = add i32 %mul_tmp75.neg.i.i.i, %.0106117.i.i.i
  %mod_tmp80.i.i.i = urem i32 %sub_tmp76.i.i.i, 100
  %lshift_tmp81.i.i.i = shl nuw nsw i32 %mod_tmp80.i.i.i, 1
  %div_tmp83.i.i.i = udiv i32 %sub_tmp76.i.i.i, 100
  %lshift_tmp84.i.i.i = shl nuw nsw i32 %div_tmp83.i.i.i, 1
  %139 = zext i32 %.1105118.i.i.i to i64
  %140 = sub nsw i64 0, %139
  %ptr_sub_tmp89.i.i.i = getelementptr i8, i8* %ptr_add_tmp87.i.i.i, i64 %140
  %ptr_sub_tmp90.i.i.i = getelementptr i8, i8* %ptr_sub_tmp89.i.i.i, i64 -1
  %141 = zext i32 %lshift_tmp81.i.i.i to i64
  %ptr_add_tmp92.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %141
  %142 = bitcast i8* %ptr_add_tmp92.i.i.i to i16*
  %143 = bitcast i8* %ptr_sub_tmp90.i.i.i to i16*
  %144 = load i16, i16* %142, align 2
  store i16 %144, i16* %143, align 1
  %ptr_sub_tmp98.i.i.i = getelementptr i8, i8* %ptr_sub_tmp89.i.i.i, i64 -3
  %145 = zext i32 %lshift_tmp84.i.i.i to i64
  %ptr_add_tmp100.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %145
  %146 = bitcast i8* %ptr_add_tmp100.i.i.i to i16*
  %147 = bitcast i8* %ptr_sub_tmp98.i.i.i to i16*
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %147, align 1
  %add_tmp102.i.i.i = add i32 %.1105118.i.i.i, 4
  %149 = icmp ugt i32 %.0106117.i.i.i, 99999999
  br i1 %149, label %while.i.i.i, label %endwhile.i.i.i

then104.i.i.i:                                    ; preds = %endwhile.i.i.i
  %mod_tmp106.lhs.trunc.i.i.i = trunc i32 %.0106.lcssa.i.i.i to i16
  %mod_tmp106110.i.i.i = urem i16 %mod_tmp106.lhs.trunc.i.i.i, 100
  %150 = shl nuw nsw i16 %mod_tmp106110.i.i.i, 1
  %div_tmp109111.i.i.i = udiv i16 %mod_tmp106.lhs.trunc.i.i.i, 100
  %div_tmp109.zext.i.i.i = zext i16 %div_tmp109111.i.i.i to i32
  %151 = zext i32 %112 to i64
  %ptr_add_tmp112.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %151
  %152 = zext i32 %.1105.lcssa.i.i.i to i64
  %153 = sub nsw i64 0, %152
  %ptr_sub_tmp114.i.i.i = getelementptr i8, i8* %ptr_add_tmp112.i.i.i, i64 %153
  %ptr_sub_tmp115.i.i.i = getelementptr i8, i8* %ptr_sub_tmp114.i.i.i, i64 -1
  %154 = zext i16 %150 to i64
  %ptr_add_tmp117.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %154
  %155 = bitcast i8* %ptr_add_tmp117.i.i.i to i16*
  %156 = bitcast i8* %ptr_sub_tmp115.i.i.i to i16*
  %157 = load i16, i16* %155, align 2
  store i16 %157, i16* %156, align 1
  br label %endif120.i.i.i

endif120.i.i.i:                                   ; preds = %then104.i.i.i, %endwhile.i.i.i
  %.1107.i.i.i = phi i32 [ %div_tmp109.zext.i.i.i, %then104.i.i.i ], [ %.0106.lcssa.i.i.i, %endwhile.i.i.i ]
  %158 = icmp ugt i32 %.1107.i.i.i, 9
  br i1 %158, label %then122.i.i.i, label %else.i26.i.i

then122.i.i.i:                                    ; preds = %endif120.i.i.i
  %lshift_tmp124.i.i.i = shl nuw nsw i32 %.1107.i.i.i, 1
  %ptr_add_tmp126.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 1
  %159 = zext i32 %lshift_tmp124.i.i.i to i64
  %ptr_add_tmp128.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %159
  %160 = bitcast i8* %ptr_add_tmp128.i.i.i to i16*
  %161 = bitcast i8* %ptr_add_tmp126.i.i.i to i16*
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 1
  br label %endif134.i.i.i

else.i26.i.i:                                     ; preds = %endif120.i.i.i
  %163 = trunc i32 %.1107.i.i.i to i8
  %cast_tmp131.i.i.i = add nuw nsw i8 %163, 48
  %ptr_add_tmp133.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 1
  store i8 %cast_tmp131.i.i.i, i8* %ptr_add_tmp133.i.i.i, align 1
  br label %endif134.i.i.i

endif134.i.i.i:                                   ; preds = %else.i26.i.i, %then122.i.i.i
  %164 = icmp sgt i32 %.sroa.10.2.i, -1
  br i1 %164, label %then136.i.i.i, label %endif143.i.i.i

then136.i.i.i:                                    ; preds = %endif134.i.i.i
  %165 = zext i32 %112 to i64
  %ptr_add_tmp139.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %165
  %ptr_add_tmp140.i.i.i = getelementptr i8, i8* %ptr_add_tmp139.i.i.i, i64 1
  %cast_tmp142112.i.i.i = zext i32 %.sroa.10.2.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp140.i.i.i, i8 48, i64 %cast_tmp142112.i.i.i, i1 false) #8
  br label %endif143.i.i.i

endif143.i.i.i:                                   ; preds = %then136.i.i.i, %endif134.i.i.i
  %166 = icmp sgt i32 %add_tmp.i.i.i, -1
  br i1 %166, label %then145.i.i.i, label %endif156.i.i.i

then145.i.i.i:                                    ; preds = %endif143.i.i.i
  %ptr_add_tmp148.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 1
  %cast_tmp151.i.i.i = sext i32 %sub_tmp.i.i54.i to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %.0.i.i.i, i8* align 1 %ptr_add_tmp148.i.i.i, i64 %cast_tmp151.i.i.i, i1 false) #8
  %167 = zext i32 %add_tmp.i.i.i to i64
  %ptr_add_tmp154.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %167
  %ptr_add_tmp155.i.i.i = getelementptr i8, i8* %ptr_add_tmp154.i.i.i, i64 1
  store i8 46, i8* %ptr_add_tmp155.i.i.i, align 1
  br label %endif156.i.i.i

endif156.i.i.i:                                   ; preds = %then145.i.i.i, %endif143.i.i.i
  %add_tmp158.i.i.i = add i32 %112, 1
  %168 = zext i32 %add_tmp158.i.i.i to i64
  %ptr_add_tmp160.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %168
  br i1 %164, label %then162.i.i.i, label %func.std.ryu.d2s_shortest..2.builtin.float64.0P.builtin.uint8.0P.builtin.uint8.exit

then162.i.i.i:                                    ; preds = %endif156.i.i.i
  %169 = zext i32 %.sroa.10.2.i to i64
  %ptr_add_tmp165.i.i.i = getelementptr i8, i8* %ptr_add_tmp160.i.i.i, i64 %169
  store i8 48, i8* %ptr_add_tmp165.i.i.i, align 1
  %170 = getelementptr i8, i8* %ptr_add_tmp165.i.i.i, i64 1
  br label %func.std.ryu.d2s_shortest..2.builtin.float64.0P.builtin.uint8.0P.builtin.uint8.exit

else13.i.i31.i.i:                                 ; preds = %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i
  br i1 %75, label %then.i51.i.i, label %else16.i.i32.i.i

else16.i.i32.i.i:                                 ; preds = %else13.i.i31.i.i
  %171 = icmp ugt i64 %.sroa.0.2.i, 9999999999
  br i1 %171, label %then.i51.i.i, label %else19.i.i33.i.i

else19.i.i33.i.i:                                 ; preds = %else16.i.i32.i.i
  %172 = icmp ugt i64 %.sroa.0.2.i, 999999999
  br i1 %172, label %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i, label %else22.i.i34.i.i

else22.i.i34.i.i:                                 ; preds = %else19.i.i33.i.i
  %173 = icmp ugt i64 %.sroa.0.2.i, 99999999
  br i1 %173, label %endif.i52.i.i, label %else25.i.i35.i.i

else25.i.i35.i.i:                                 ; preds = %else22.i.i34.i.i
  %174 = icmp ugt i64 %.sroa.0.2.i, 9999999
  br i1 %174, label %endif.i52.i.i, label %else28.i.i36.i.i

else28.i.i36.i.i:                                 ; preds = %else25.i.i35.i.i
  %175 = icmp ugt i64 %.sroa.0.2.i, 999999
  br i1 %175, label %endif.i52.i.i, label %else31.i.i37.i.i

else31.i.i37.i.i:                                 ; preds = %else28.i.i36.i.i
  %176 = icmp ugt i64 %.sroa.0.2.i, 99999
  br i1 %176, label %endif.i52.i.i, label %else34.i.i38.i.i

else34.i.i38.i.i:                                 ; preds = %else31.i.i37.i.i
  %177 = icmp ugt i64 %.sroa.0.2.i, 9999
  br i1 %177, label %endif.i52.i.i, label %else37.i.i39.i.i

else37.i.i39.i.i:                                 ; preds = %else34.i.i38.i.i
  %178 = icmp ugt i64 %.sroa.0.2.i, 999
  br i1 %178, label %endif.i52.i.i, label %else40.i.i41.i.i

else40.i.i41.i.i:                                 ; preds = %else37.i.i39.i.i
  %179 = icmp ugt i64 %.sroa.0.2.i, 99
  %180 = icmp ugt i64 %.sroa.0.2.i, 9
  %..i.i40.i.i = select i1 %180, i32 2, i32 1
  %181 = select i1 %179, i32 3, i32 %..i.i40.i.i
  br label %endif.i52.i.i

func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i: ; preds = %else19.i.i33.i.i
  %.not.i42.i.i = icmp ult i64 %.sroa.0.2.i, 4294967296
  br i1 %.not.i42.i.i, label %endif.i52.i.i, label %then.i51.i.i

then.i51.i.i:                                     ; preds = %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread11, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i, %else16.i.i32.i.i, %else13.i.i31.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread65.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread70.i
  %182 = phi i32 [ 10, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i ], [ 11, %else16.i.i32.i.i ], [ 12, %else13.i.i31.i.i ], [ 17, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread.i.i ], [ 16, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.thread65.i.i ], [ 15, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread.i ], [ 14, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.thread70.i ], [ 13, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread ], [ 12, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i.i.thread11 ]
  %div_tmp.i.i44.i.i = udiv i64 %.sroa.0.2.i, 100000000
  %cast_tmp.i45.i.i = trunc i64 %.sroa.0.2.i to i32
  %cast_tmp6.i.i.i = trunc i64 %div_tmp.i.i44.i.i to i32
  %mul_tmp.neg.i46.i.i = mul i32 %cast_tmp6.i.i.i, -100000000
  %sub_tmp.i47.i.i = add i32 %mul_tmp.neg.i46.i.i, %cast_tmp.i45.i.i
  %mod_tmp.i48.i.i = urem i32 %sub_tmp.i47.i.i, 10000
  %div_tmp.i49.i.i = udiv i32 %sub_tmp.i47.i.i, 10000
  %mod_tmp11.i.i.i = urem i32 %div_tmp.i49.i.i, 10000
  %mod_tmp13.lhs.trunc.i.i.i = trunc i32 %mod_tmp.i48.i.i to i16
  %mod_tmp13119.i.i.i = urem i16 %mod_tmp13.lhs.trunc.i.i.i, 100
  %183 = shl nuw nsw i16 %mod_tmp13119.i.i.i, 1
  %div_tmp15120.i.i.i = udiv i16 %mod_tmp13.lhs.trunc.i.i.i, 100
  %184 = shl nuw nsw i16 %div_tmp15120.i.i.i, 1
  %mod_tmp18.lhs.trunc.i.i.i = trunc i32 %mod_tmp11.i.i.i to i16
  %mod_tmp18121.i.i.i = urem i16 %mod_tmp18.lhs.trunc.i.i.i, 100
  %185 = shl nuw nsw i16 %mod_tmp18121.i.i.i, 1
  %div_tmp21122.i.i.i = udiv i16 %mod_tmp18.lhs.trunc.i.i.i, 100
  %186 = shl nuw nsw i16 %div_tmp21122.i.i.i, 1
  %187 = zext i32 %182 to i64
  %ptr_add_tmp.i50.i.i = getelementptr i8, i8* %.0.i51.i, i64 %187
  %ptr_sub_tmp26.i.i.i = getelementptr i8, i8* %ptr_add_tmp.i50.i.i, i64 -1
  %188 = zext i16 %183 to i64
  %ptr_add_tmp28.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %188
  %189 = bitcast i8* %ptr_add_tmp28.i.i.i to i16*
  %190 = bitcast i8* %ptr_sub_tmp26.i.i.i to i16*
  %191 = load i16, i16* %189, align 2
  store i16 %191, i16* %190, align 1
  %ptr_sub_tmp34.i.i.i = getelementptr i8, i8* %ptr_add_tmp.i50.i.i, i64 -3
  %192 = zext i16 %184 to i64
  %ptr_add_tmp36.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %192
  %193 = bitcast i8* %ptr_add_tmp36.i.i.i to i16*
  %194 = bitcast i8* %ptr_sub_tmp34.i.i.i to i16*
  %195 = load i16, i16* %193, align 2
  store i16 %195, i16* %194, align 1
  %ptr_sub_tmp42.i.i.i = getelementptr i8, i8* %ptr_add_tmp.i50.i.i, i64 -5
  %196 = zext i16 %185 to i64
  %ptr_add_tmp44.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %196
  %197 = bitcast i8* %ptr_add_tmp44.i.i.i to i16*
  %198 = bitcast i8* %ptr_sub_tmp42.i.i.i to i16*
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 1
  %ptr_sub_tmp50.i.i.i = getelementptr i8, i8* %ptr_add_tmp.i50.i.i, i64 -7
  %200 = zext i16 %186 to i64
  %ptr_add_tmp52.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %200
  %201 = bitcast i8* %ptr_add_tmp52.i.i.i to i16*
  %202 = bitcast i8* %ptr_sub_tmp50.i.i.i to i16*
  %203 = load i16, i16* %201, align 2
  store i16 %203, i16* %202, align 1
  br label %endif.i52.i.i

endif.i52.i.i:                                    ; preds = %then.i51.i.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i, %else40.i.i41.i.i, %else37.i.i39.i.i, %else34.i.i38.i.i, %else31.i.i37.i.i, %else28.i.i36.i.i, %else25.i.i35.i.i, %else22.i.i34.i.i
  %204 = phi i32 [ %182, %then.i51.i.i ], [ 10, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i ], [ 4, %else37.i.i39.i.i ], [ %181, %else40.i.i41.i.i ], [ 5, %else34.i.i38.i.i ], [ 6, %else31.i.i37.i.i ], [ 7, %else28.i.i36.i.i ], [ 8, %else25.i.i35.i.i ], [ 9, %else22.i.i34.i.i ]
  %.0108.i.i.i = phi i32 [ 8, %then.i51.i.i ], [ 0, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i ], [ 0, %else37.i.i39.i.i ], [ 0, %else40.i.i41.i.i ], [ 0, %else34.i.i38.i.i ], [ 0, %else31.i.i37.i.i ], [ 0, %else28.i.i36.i.i ], [ 0, %else25.i.i35.i.i ], [ 0, %else22.i.i34.i.i ]
  %.0107.i.i.i = phi i64 [ %div_tmp.i.i44.i.i, %then.i51.i.i ], [ %.sroa.0.2.i, %func.std.ryu.decimalLength17..1.builtin.uint64.builtin.uint32.exit.i43.i.i ], [ %.sroa.0.2.i, %else37.i.i39.i.i ], [ %.sroa.0.2.i, %else40.i.i41.i.i ], [ %.sroa.0.2.i, %else34.i.i38.i.i ], [ %.sroa.0.2.i, %else31.i.i37.i.i ], [ %.sroa.0.2.i, %else28.i.i36.i.i ], [ %.sroa.0.2.i, %else25.i.i35.i.i ], [ %.sroa.0.2.i, %else22.i.i34.i.i ]
  %cast_tmp55.i.i.i = trunc i64 %.0107.i.i.i to i32
  %205 = icmp ugt i32 %cast_tmp55.i.i.i, 9999
  br i1 %205, label %while.lr.ph.i53.i.i, label %endwhile.i54.i.i

while.lr.ph.i53.i.i:                              ; preds = %endif.i52.i.i
  %206 = zext i32 %204 to i64
  %ptr_add_tmp72.i.i.i = getelementptr i8, i8* %.0.i51.i, i64 %206
  br label %while.i55.i.i

endwhile.i54.i.i:                                 ; preds = %while.i55.i.i, %endif.i52.i.i
  %.0111.lcssa.i.i.i = phi i32 [ %cast_tmp55.i.i.i, %endif.i52.i.i ], [ %div_tmp59.i.i.i, %while.i55.i.i ]
  %.1109.lcssa.i.i.i = phi i32 [ %.0108.i.i.i, %endif.i52.i.i ], [ %add_tmp87.i.i.i, %while.i55.i.i ]
  %207 = icmp ugt i32 %.0111.lcssa.i.i.i, 99
  br i1 %207, label %then89.i.i.i, label %endif105.i.i.i

while.i55.i.i:                                    ; preds = %while.i55.i.i, %while.lr.ph.i53.i.i
  %.1109128.i.i.i = phi i32 [ %.0108.i.i.i, %while.lr.ph.i53.i.i ], [ %add_tmp87.i.i.i, %while.i55.i.i ]
  %.0111127.i.i.i = phi i32 [ %cast_tmp55.i.i.i, %while.lr.ph.i53.i.i ], [ %div_tmp59.i.i.i, %while.i55.i.i ]
  %div_tmp59.i.i.i = udiv i32 %.0111127.i.i.i, 10000
  %mul_tmp60.neg.i.i.i = mul i32 %div_tmp59.i.i.i, -10000
  %sub_tmp61.i.i.i = add i32 %mul_tmp60.neg.i.i.i, %.0111127.i.i.i
  %mod_tmp65.i.i.i = urem i32 %sub_tmp61.i.i.i, 100
  %lshift_tmp66.i.i.i = shl nuw nsw i32 %mod_tmp65.i.i.i, 1
  %div_tmp68.i.i.i = udiv i32 %sub_tmp61.i.i.i, 100
  %lshift_tmp69.i.i.i = shl nuw nsw i32 %div_tmp68.i.i.i, 1
  %208 = zext i32 %.1109128.i.i.i to i64
  %209 = sub nsw i64 0, %208
  %ptr_sub_tmp74.i.i.i = getelementptr i8, i8* %ptr_add_tmp72.i.i.i, i64 %209
  %ptr_sub_tmp75.i.i.i = getelementptr i8, i8* %ptr_sub_tmp74.i.i.i, i64 -1
  %210 = zext i32 %lshift_tmp66.i.i.i to i64
  %ptr_add_tmp77.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %210
  %211 = bitcast i8* %ptr_add_tmp77.i.i.i to i16*
  %212 = bitcast i8* %ptr_sub_tmp75.i.i.i to i16*
  %213 = load i16, i16* %211, align 2
  store i16 %213, i16* %212, align 1
  %ptr_sub_tmp83.i.i.i = getelementptr i8, i8* %ptr_sub_tmp74.i.i.i, i64 -3
  %214 = zext i32 %lshift_tmp69.i.i.i to i64
  %ptr_add_tmp85.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %214
  %215 = bitcast i8* %ptr_add_tmp85.i.i.i to i16*
  %216 = bitcast i8* %ptr_sub_tmp83.i.i.i to i16*
  %217 = load i16, i16* %215, align 2
  store i16 %217, i16* %216, align 1
  %add_tmp87.i.i.i = add i32 %.1109128.i.i.i, 4
  %218 = icmp ugt i32 %.0111127.i.i.i, 99999999
  br i1 %218, label %while.i55.i.i, label %endwhile.i54.i.i

then89.i.i.i:                                     ; preds = %endwhile.i54.i.i
  %mod_tmp91.lhs.trunc.i.i.i = trunc i32 %.0111.lcssa.i.i.i to i16
  %mod_tmp91123.i.i.i = urem i16 %mod_tmp91.lhs.trunc.i.i.i, 100
  %219 = shl nuw nsw i16 %mod_tmp91123.i.i.i, 1
  %div_tmp94124.i.i.i = udiv i16 %mod_tmp91.lhs.trunc.i.i.i, 100
  %div_tmp94.zext.i.i.i = zext i16 %div_tmp94124.i.i.i to i32
  %220 = zext i32 %204 to i64
  %ptr_add_tmp97.i.i.i = getelementptr i8, i8* %.0.i51.i, i64 %220
  %221 = zext i32 %.1109.lcssa.i.i.i to i64
  %222 = sub nsw i64 0, %221
  %ptr_sub_tmp99.i.i.i = getelementptr i8, i8* %ptr_add_tmp97.i.i.i, i64 %222
  %ptr_sub_tmp100.i.i.i = getelementptr i8, i8* %ptr_sub_tmp99.i.i.i, i64 -1
  %223 = zext i16 %219 to i64
  %ptr_add_tmp102.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %223
  %224 = bitcast i8* %ptr_add_tmp102.i.i.i to i16*
  %225 = bitcast i8* %ptr_sub_tmp100.i.i.i to i16*
  %226 = load i16, i16* %224, align 2
  store i16 %226, i16* %225, align 1
  %add_tmp104.i.i.i = or i32 %.1109.lcssa.i.i.i, 2
  br label %endif105.i.i.i

endif105.i.i.i:                                   ; preds = %then89.i.i.i, %endwhile.i54.i.i
  %.1112.i.i.i = phi i32 [ %div_tmp94.zext.i.i.i, %then89.i.i.i ], [ %.0111.lcssa.i.i.i, %endwhile.i54.i.i ]
  %.2110.i.i.i = phi i32 [ %add_tmp104.i.i.i, %then89.i.i.i ], [ %.1109.lcssa.i.i.i, %endwhile.i54.i.i ]
  %227 = icmp ugt i32 %.1112.i.i.i, 9
  br i1 %227, label %then107.i.i.i, label %else.i56.i.i

then107.i.i.i:                                    ; preds = %endif105.i.i.i
  %lshift_tmp109.i.i.i = shl nuw nsw i32 %.1112.i.i.i, 1
  %add_tmp111.i.i.i = or i32 %lshift_tmp109.i.i.i, 1
  %228 = zext i32 %add_tmp111.i.i.i to i64
  %229 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %228
  %230 = zext i32 %204 to i64
  %ptr_add_tmp114.i.i.i = getelementptr i8, i8* %.0.i51.i, i64 %230
  %231 = zext i32 %.2110.i.i.i to i64
  %232 = sub nsw i64 0, %231
  %ptr_sub_tmp116.i.i.i = getelementptr i8, i8* %ptr_add_tmp114.i.i.i, i64 %232
  %load_tmp117.i.i.i = load i8, i8* %229, align 1
  store i8 %load_tmp117.i.i.i, i8* %ptr_sub_tmp116.i.i.i, align 1
  %233 = zext i32 %lshift_tmp109.i.i.i to i64
  %234 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %233
  %load_tmp120.i.i.i = load i8, i8* %234, align 2
  br label %endif125.i.i.i

else.i56.i.i:                                     ; preds = %endif105.i.i.i
  %235 = trunc i32 %.1112.i.i.i to i8
  %cast_tmp123.i.i.i = add nuw nsw i8 %235, 48
  br label %endif125.i.i.i

endif125.i.i.i:                                   ; preds = %else.i56.i.i, %then107.i.i.i
  %storemerge.i.i.i = phi i8 [ %cast_tmp123.i.i.i, %else.i56.i.i ], [ %load_tmp120.i.i.i, %then107.i.i.i ]
  store i8 %storemerge.i.i.i, i8* %.0.i51.i, align 1
  %236 = icmp ugt i32 %204, 1
  %ptr_add_tmp129.i.i.i = getelementptr i8, i8* %.0.i51.i, i64 1
  br i1 %236, label %then127.i.i.i, label %endif136.i.i.i

then127.i.i.i:                                    ; preds = %endif125.i.i.i
  store i8 46, i8* %ptr_add_tmp129.i.i.i, align 1
  %add_tmp131.i.i.i = add i32 %204, 1
  %237 = zext i32 %add_tmp131.i.i.i to i64
  %ptr_add_tmp133.i57.i.i = getelementptr i8, i8* %.0.i51.i, i64 %237
  br label %endif136.i.i.i

endif136.i.i.i:                                   ; preds = %then127.i.i.i, %endif125.i.i.i
  %.0.i58.i.i = phi i8* [ %ptr_add_tmp133.i57.i.i, %then127.i.i.i ], [ %ptr_add_tmp129.i.i.i, %endif125.i.i.i ]
  store i8 101, i8* %.0.i58.i.i, align 1
  %238 = getelementptr i8, i8* %.0.i58.i.i, i64 1
  %add_tmp141.i.i.i = add i32 %204, %.sroa.10.2.i
  %sub_tmp142.i.i.i = add i32 %add_tmp141.i.i.i, -1
  %239 = icmp slt i32 %sub_tmp142.i.i.i, 0
  br i1 %239, label %then144.i.i.i, label %else148.i.i.i

then144.i.i.i:                                    ; preds = %endif136.i.i.i
  store i8 45, i8* %238, align 1
  %unary_minus_tmp.i59.i.i = sub i32 1, %add_tmp141.i.i.i
  br label %endif151.i.i.i

else148.i.i.i:                                    ; preds = %endif136.i.i.i
  store i8 43, i8* %238, align 1
  br label %endif151.i.i.i

endif151.i.i.i:                                   ; preds = %else148.i.i.i, %then144.i.i.i
  %.0106.i.i.i = phi i32 [ %unary_minus_tmp.i59.i.i, %then144.i.i.i ], [ %sub_tmp142.i.i.i, %else148.i.i.i ]
  %.1.i60.i.i = getelementptr i8, i8* %.0.i58.i.i, i64 2
  %240 = icmp sgt i32 %.0106.i.i.i, 99
  br i1 %240, label %then153.i.i.i, label %else168.i.i.i

then153.i.i.i:                                    ; preds = %endif151.i.i.i
  %mod_tmp155125.i.i.i = urem i32 %.0106.i.i.i, 10
  %div_tmp158126.i.i.i = udiv i32 %.0106.i.i.i, 10
  %mul_tmp159.i.i.i = shl nuw nsw i32 %div_tmp158126.i.i.i, 1
  %241 = zext i32 %mul_tmp159.i.i.i to i64
  %ptr_add_tmp160.i61.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %241
  %242 = bitcast i8* %ptr_add_tmp160.i61.i.i to i16*
  %243 = bitcast i8* %.1.i60.i.i to i16*
  %244 = load i16, i16* %242, align 2
  store i16 %244, i16* %243, align 1
  %245 = trunc i32 %mod_tmp155125.i.i.i to i8
  %cast_tmp163.i.i.i = or i8 %245, 48
  %ptr_add_tmp165.i62.i.i = getelementptr i8, i8* %.0.i58.i.i, i64 4
  store i8 %cast_tmp163.i.i.i, i8* %ptr_add_tmp165.i62.i.i, align 1
  br label %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_64.0P.builtin.uint8.0P.builtin.uint8.exit.i.i"

else168.i.i.i:                                    ; preds = %endif151.i.i.i
  %mul_tmp171.i.i.i = shl i32 %.0106.i.i.i, 1
  %246 = sext i32 %mul_tmp171.i.i.i to i64
  %ptr_add_tmp172.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %246
  %247 = bitcast i8* %ptr_add_tmp172.i.i.i to i16*
  %248 = bitcast i8* %.1.i60.i.i to i16*
  %249 = load i16, i16* %247, align 2
  store i16 %249, i16* %248, align 1
  br label %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_64.0P.builtin.uint8.0P.builtin.uint8.exit.i.i"

"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_64.0P.builtin.uint8.0P.builtin.uint8.exit.i.i": ; preds = %else168.i.i.i, %then153.i.i.i
  %.sink.i.i.i = phi i64 [ 4, %else168.i.i.i ], [ 5, %then153.i.i.i ]
  %ptr_add_tmp174.i.i.i = getelementptr i8, i8* %.0.i58.i.i, i64 %.sink.i.i.i
  br label %func.std.ryu.d2s_shortest..2.builtin.float64.0P.builtin.uint8.0P.builtin.uint8.exit

func.std.ryu.d2s_shortest..2.builtin.float64.0P.builtin.uint8.0P.builtin.uint8.exit: ; preds = %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i, %endif156.i.i.i, %then162.i.i.i, %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_64.0P.builtin.uint8.0P.builtin.uint8.exit.i.i"
  %common.ret.op.i = phi i8* [ %ptr_add_tmp15.i.i, %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i ], [ %ptr_add_tmp174.i.i.i, %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_64.0P.builtin.uint8.0P.builtin.uint8.exit.i.i" ], [ %170, %then162.i.i.i ], [ %ptr_add_tmp160.i.i.i, %endif156.i.i.i ]
  ret i8* %common.ret.op.i
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind
define i8* @d2exp_short(double %0, i32 %1, i8* %2, i1 %3, i1 %4) local_unnamed_addr #0 {
alloca:
  %5 = bitcast double %0 to i64
  %6 = icmp slt i64 %5, 0
  %bit_and_tmp3.i = and i64 %5, 4503599627370495
  %rshift_tmp5.i = lshr i64 %5, 52
  %cast_tmp.i = trunc i64 %rshift_tmp5.i to i32
  %bit_and_tmp6.i = and i32 %cast_tmp.i, 2047
  %7 = icmp eq i32 %bit_and_tmp6.i, 2047
  br i1 %7, label %then.i, label %endif.i

then.i:                                           ; preds = %alloca
  %.not574.i = icmp eq i64 %bit_and_tmp3.i, 0
  br i1 %.not574.i, label %endif.i.i, label %then.i.i

then.i.i:                                         ; preds = %then.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %2, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

endif.i.i:                                        ; preds = %then.i
  br i1 %6, label %then4.i.i, label %endif7.i.i

then4.i.i:                                        ; preds = %endif.i.i
  store i8 45, i8* %2, align 1
  %8 = getelementptr i8, i8* %2, i64 1
  br label %endif7.i.i

endif7.i.i:                                       ; preds = %then4.i.i, %endif.i.i
  %.0.i.i = phi i8* [ %8, %then4.i.i ], [ %2, %endif.i.i ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %.0.i.i, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i: ; preds = %endif7.i.i, %then.i.i
  %.0.sink.i.i = phi i8* [ %.0.i.i, %endif7.i.i ], [ %2, %then.i.i ]
  %ptr_add_tmp15.i.i = getelementptr i8, i8* %.0.sink.i.i, i64 3
  br label %func.std.ryu.d2exp_short..5.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.builtin.bool.0P.builtin.uint8.exit

endif.i:                                          ; preds = %alloca
  %9 = icmp eq i32 %bit_and_tmp6.i, 0
  %10 = icmp eq i64 %bit_and_tmp3.i, 0
  %bool_and_tmp.i = select i1 %9, i1 %10, i1 false
  br i1 %bool_and_tmp.i, label %then14.i, label %endif53.i

then14.i:                                         ; preds = %endif.i
  br i1 %6, label %then16.i, label %endif20.i

then16.i:                                         ; preds = %then14.i
  store i8 45, i8* %2, align 1
  br label %endif20.i

endif20.i:                                        ; preds = %then16.i, %then14.i
  %.0290.i = phi i32 [ 1, %then16.i ], [ 0, %then14.i ]
  %11 = zext i32 %.0290.i to i64
  %ptr_add_tmp23.i = getelementptr i8, i8* %2, i64 %11
  store i8 48, i8* %ptr_add_tmp23.i, align 1
  %12 = add nuw nsw i32 %.0290.i, 1
  %.not355.i = icmp eq i32 %1, 0
  br i1 %.not355.i, label %endif38.i, label %then26.i

then26.i:                                         ; preds = %endif20.i
  %13 = zext i32 %12 to i64
  %ptr_add_tmp29.i = getelementptr i8, i8* %2, i64 %13
  store i8 46, i8* %ptr_add_tmp29.i, align 1
  %14 = or i32 %.0290.i, 2
  %15 = zext i32 %14 to i64
  %ptr_add_tmp33.i = getelementptr i8, i8* %2, i64 %15
  %cast_tmp35.i = zext i32 %1 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp33.i, i8 48, i64 %cast_tmp35.i, i1 false) #8
  %add_tmp.i = add i32 %14, %1
  br label %endif38.i

endif38.i:                                        ; preds = %then26.i, %endif20.i
  %.1.i = phi i32 [ %add_tmp.i, %then26.i ], [ %12, %endif20.i ]
  %16 = sext i32 %.1.i to i64
  %ptr_add_tmp43.i = getelementptr i8, i8* %2, i64 %16
  %17 = bitcast i8* %ptr_add_tmp43.i to i32*
  %..i = select i1 %3, i32 808463173, i32 808463205
  store i32 %..i, i32* %17, align 1
  %add_tmp49.i = add i32 %.1.i, 4
  %18 = sext i32 %add_tmp49.i to i64
  %ptr_add_tmp52.i = getelementptr i8, i8* %2, i64 %18
  br label %func.std.ryu.d2exp_short..5.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.builtin.bool.0P.builtin.uint8.exit

endif53.i:                                        ; preds = %endif.i
  %sub_tmp59.i = add nsw i32 %bit_and_tmp6.i, -1075
  %bit_or_tmp.i = or i64 %bit_and_tmp3.i, 4503599627370496
  %.0293.i = select i1 %9, i64 %bit_and_tmp3.i, i64 %bit_or_tmp.i
  %.0292.i = select i1 %9, i32 -1074, i32 %sub_tmp59.i
  %.0292.nonneg.i = sub nsw i32 0, %.0292.i
  %.not.i = icmp eq i32 %1, 0
  %19 = add i32 %1, 1
  br i1 %6, label %then65.i, label %endif70.i

then65.i:                                         ; preds = %endif53.i
  store i8 45, i8* %2, align 1
  br label %endif70.i

endif70.i:                                        ; preds = %then65.i, %endif53.i
  %.0299.i = phi i32 [ 1, %then65.i ], [ 0, %endif53.i ]
  %20 = icmp sgt i32 %.0292.i, -53
  br i1 %20, label %for.lr.ph.i, label %endif70.i.for161.lr.ph.i_crit_edge

endif70.i.for161.lr.ph.i_crit_edge:               ; preds = %endif70.i
  %.pre = shl nuw nsw i64 %.0293.i, 8
  %.pre38 = sub nsw i32 128, %.0292.i
  br label %for161.lr.ph.i

for.lr.ph.i:                                      ; preds = %endif70.i
  %21 = icmp slt i32 %.0292.i, 0
  %add_tmp.i.i = add nuw nsw i32 %.0292.i, 15
  %div_tmp.i.i = lshr i32 %add_tmp.i.i, 4
  %.0339.i = select i1 %21, i32 0, i32 %div_tmp.i.i
  %mul_tmp.i.i.i = mul i32 %.0339.i, 1262608
  %rshift_tmp.i.i.i = lshr i32 %mul_tmp.i.i.i, 18
  %22 = trunc i32 %rshift_tmp.i.i.i to i16
  %div_tmp.lhs.trunc.i.i = add nuw nsw i16 %22, 25
  %div_tmp2.i.i = udiv i16 %div_tmp.lhs.trunc.i.i, 9
  %mul_tmp.i.i = shl nuw nsw i32 %.0339.i, 4
  %lshift_tmp.i = shl nuw nsw i64 %.0293.i, 8
  %23 = zext i32 %.0339.i to i64
  %24 = getelementptr [64 x i16], [64 x i16]* @std.ryu.POW10_OFFSET, i64 0, i64 %23
  %load_tmp89.i = load i16, i16* %24, align 2
  %cast_tmp90.i = zext i16 %load_tmp89.i to i64
  %sub_tmp86.i = sub nsw i32 128, %.0292.i
  %add_tmp94.i = add i32 %sub_tmp86.i, %mul_tmp.i.i
  %25 = zext i16 %div_tmp2.i.i to i64
  br label %for.i

for.i:                                            ; preds = %endif144.i, %for.lr.ph.i
  %indvars.iv.in.i = phi i64 [ %25, %for.lr.ph.i ], [ %indvars.iv.i, %endif144.i ]
  %.1300591.i = phi i32 [ %.0299.i, %for.lr.ph.i ], [ %.3.i, %endif144.i ]
  %.0312590.i = phi i32 [ 0, %for.lr.ph.i ], [ %.1313.i, %endif144.i ]
  %.0327589.i = phi i32 [ 0, %for.lr.ph.i ], [ %.2329.i, %endif144.i ]
  %indvars.iv.i = add nsw i64 %indvars.iv.in.i, -1
  %26 = trunc i64 %indvars.iv.i to i32
  %add_tmp92.i = add i64 %indvars.iv.i, %cast_tmp90.i
  %sext = shl i64 %add_tmp92.i, 32
  %27 = ashr exact i64 %sext, 32
  %28 = getelementptr [1224 x [3 x i64]], [1224 x [3 x i64]]* @std.ryu.POW10_SPLIT, i64 0, i64 %27, i64 0
  %.val.i = load i64, i64* %28, align 8
  %.idx.i = getelementptr [1224 x [3 x i64]], [1224 x [3 x i64]]* @std.ryu.POW10_SPLIT, i64 0, i64 %27, i64 1
  %.idx.val.i = load i64, i64* %.idx.i, align 8
  %.idx359.i = getelementptr [1224 x [3 x i64]], [1224 x [3 x i64]]* @std.ryu.POW10_SPLIT, i64 0, i64 %27, i64 2
  %.idx359.val.i = load i64, i64* %.idx359.i, align 8
  %29 = tail call fastcc i32 @func.std.ryu.mulShift_mod1e9..3.builtin.uint64.0P.const.builtin.uint64.builtin.int32.builtin.uint32(i64 %lshift_tmp.i, i64 %.val.i, i64 %.idx.val.i, i64 %.idx359.val.i, i32 %add_tmp94.i) #8
  %.not353.i = icmp eq i32 %.0312590.i, 0
  br i1 %.not353.i, label %else110.i, label %then96.i

then96.i:                                         ; preds = %for.i
  %add_tmp98.i = add i32 %.0312590.i, 9
  %30 = icmp ugt i32 %add_tmp98.i, %19
  br i1 %30, label %endif243.thread.i, label %endif101.i

endif101.i:                                       ; preds = %then96.i
  %31 = sext i32 %.1300591.i to i64
  %ptr_add_tmp105.i = getelementptr i8, i8* %2, i64 %31
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %then.i366.i, label %for_condition_check.preheader.i.i

for_condition_check.preheader.i.i:                ; preds = %endif101.i
  %ptr_add_tmp.i.i = getelementptr i8, i8* %ptr_add_tmp105.i, i64 7
  %ptr_add_tmp17.i.i = getelementptr i8, i8* %ptr_add_tmp105.i, i64 5
  %div_tmp.i364.i = udiv i32 %29, 10000
  %mul_tmp.neg.i.i = mul i32 %div_tmp.i364.i, -10000
  %sub_tmp.i.i = add i32 %mul_tmp.neg.i.i, %29
  %mod_tmp.i.i = urem i32 %sub_tmp.i.i, 100
  %lshift_tmp.i.i = shl nuw nsw i32 %mod_tmp.i.i, 1
  %div_tmp10.i.i = udiv i32 %sub_tmp.i.i, 100
  %lshift_tmp11.i.i = shl nuw nsw i32 %div_tmp10.i.i, 1
  %33 = zext i32 %lshift_tmp.i.i to i64
  %ptr_add_tmp15.i365.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %33
  %34 = bitcast i8* %ptr_add_tmp15.i365.i to i16*
  %35 = bitcast i8* %ptr_add_tmp.i.i to i16*
  %36 = load i16, i16* %34, align 2
  store i16 %36, i16* %35, align 1
  %37 = zext i32 %lshift_tmp11.i.i to i64
  %ptr_add_tmp21.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %37
  %38 = bitcast i8* %ptr_add_tmp21.i.i to i16*
  %39 = bitcast i8* %ptr_add_tmp17.i.i to i16*
  %40 = load i16, i16* %38, align 2
  store i16 %40, i16* %39, align 1
  %div_tmp.1.i.i = udiv i32 %29, 100000000
  %mul_tmp.neg.1.i.i = mul nsw i32 %div_tmp.1.i.i, -10000
  %sub_tmp.1.i.i = add nsw i32 %mul_tmp.neg.1.i.i, %div_tmp.i364.i
  %mod_tmp.1.i.i = urem i32 %sub_tmp.1.i.i, 100
  %lshift_tmp.1.i.i = shl nuw nsw i32 %mod_tmp.1.i.i, 1
  %div_tmp10.1.i.i = udiv i32 %sub_tmp.1.i.i, 100
  %lshift_tmp11.1.i.i = shl nuw nsw i32 %div_tmp10.1.i.i, 1
  %ptr_sub_tmp.1.i.i = getelementptr i8, i8* %ptr_add_tmp105.i, i64 3
  %41 = zext i32 %lshift_tmp.1.i.i to i64
  %ptr_add_tmp15.1.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %41
  %42 = bitcast i8* %ptr_add_tmp15.1.i.i to i16*
  %43 = bitcast i8* %ptr_sub_tmp.1.i.i to i16*
  %44 = load i16, i16* %42, align 2
  store i16 %44, i16* %43, align 1
  %ptr_sub_tmp19.1.i.i = getelementptr i8, i8* %ptr_add_tmp105.i, i64 1
  %45 = zext i32 %lshift_tmp11.1.i.i to i64
  %ptr_add_tmp21.1.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %45
  %46 = bitcast i8* %ptr_add_tmp21.1.i.i to i16*
  %47 = bitcast i8* %ptr_sub_tmp19.1.i.i to i16*
  %48 = load i16, i16* %46, align 2
  store i16 %48, i16* %47, align 1
  %49 = trunc i32 %div_tmp.1.i.i to i8
  %cast_tmp.i.i = add nuw nsw i8 %49, 48
  store i8 %cast_tmp.i.i, i8* %ptr_add_tmp105.i, align 1
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i

then.i366.i:                                      ; preds = %endif101.i
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(9) %ptr_add_tmp105.i, i8 48, i64 9, i1 false) #8
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i

func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i: ; preds = %then.i366.i, %for_condition_check.preheader.i.i
  %add_tmp107.i = add i32 %.1300591.i, 9
  br label %endif144.i

else110.i:                                        ; preds = %for.i
  %.not354.i = icmp eq i32 %29, 0
  br i1 %.not354.i, label %endif144.i, label %then112.i

then112.i:                                        ; preds = %else110.i
  %50 = icmp ult i32 %29, 1000000000
  tail call void @llvm.assume(i1 %50) #8
  %51 = icmp ugt i32 %29, 99999999
  br i1 %51, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, label %else.i.i

else.i.i:                                         ; preds = %then112.i
  %52 = icmp ugt i32 %29, 9999999
  br i1 %52, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, label %else4.i.i

else4.i.i:                                        ; preds = %else.i.i
  %53 = icmp ugt i32 %29, 999999
  br i1 %53, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, label %else7.i.i

else7.i.i:                                        ; preds = %else4.i.i
  %54 = icmp ugt i32 %29, 99999
  br i1 %54, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, label %else10.i.i

else10.i.i:                                       ; preds = %else7.i.i
  %55 = icmp ugt i32 %29, 9999
  br i1 %55, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, label %else13.i.i

else13.i.i:                                       ; preds = %else10.i.i
  %56 = icmp ugt i32 %29, 999
  br i1 %56, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, label %else16.i.i

else16.i.i:                                       ; preds = %else13.i.i
  %57 = icmp ugt i32 %29, 99
  %58 = icmp ugt i32 %29, 9
  %..i.i = select i1 %58, i32 2, i32 1
  %59 = select i1 %57, i32 3, i32 %..i.i
  br label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i: ; preds = %else16.i.i, %else13.i.i, %else10.i.i, %else7.i.i, %else4.i.i, %else.i.i, %then112.i
  %60 = phi i32 [ 9, %then112.i ], [ 8, %else.i.i ], [ 7, %else4.i.i ], [ 6, %else7.i.i ], [ 5, %else10.i.i ], [ %59, %else16.i.i ], [ 4, %else13.i.i ]
  %61 = mul i32 %26, 9
  %62 = add i32 %61, -1
  %sub_tmp117.i = add i32 %62, %60
  %63 = icmp ugt i32 %60, %19
  br i1 %63, label %endif243.thread.i, label %endif121.i

endif121.i:                                       ; preds = %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i
  br i1 %.not.i, label %else133.i, label %then123.i

then123.i:                                        ; preds = %endif121.i
  %64 = sext i32 %.1300591.i to i64
  %ptr_add_tmp128.i = getelementptr i8, i8* %2, i64 %64
  %65 = icmp ugt i32 %29, 9999
  br i1 %65, label %while.lr.ph.i.i, label %endwhile.i.i

while.lr.ph.i.i:                                  ; preds = %then123.i
  %66 = zext i32 %60 to i64
  %ptr_add_tmp.i367.i = getelementptr i8, i8* %ptr_add_tmp128.i, i64 1
  %ptr_add_tmp11.i.i = getelementptr i8, i8* %ptr_add_tmp.i367.i, i64 %66
  br label %while.i.i

endwhile.loopexit.i.i:                            ; preds = %while.i.i
  %phi.cast.i.i = zext i32 %add_tmp.i374.i to i64
  br label %endwhile.i.i

endwhile.i.i:                                     ; preds = %endwhile.loopexit.i.i, %then123.i
  %.042.lcssa.i.i = phi i64 [ 0, %then123.i ], [ %phi.cast.i.i, %endwhile.loopexit.i.i ]
  %.0.lcssa.i.i = phi i32 [ %29, %then123.i ], [ %div_tmp.i368.i, %endwhile.loopexit.i.i ]
  %67 = icmp ugt i32 %.0.lcssa.i.i, 99
  br i1 %67, label %then.i375.i, label %endif.i376.i

while.i.i:                                        ; preds = %while.i.i, %while.lr.ph.i.i
  %.046.i.i = phi i32 [ %29, %while.lr.ph.i.i ], [ %div_tmp.i368.i, %while.i.i ]
  %.04245.i.i = phi i32 [ 0, %while.lr.ph.i.i ], [ %add_tmp.i374.i, %while.i.i ]
  %div_tmp.i368.i = udiv i32 %.046.i.i, 10000
  %mul_tmp.neg.i369.i = mul nsw i32 %div_tmp.i368.i, -10000
  %sub_tmp.i370.i = add i32 %mul_tmp.neg.i369.i, %.046.i.i
  %mod_tmp.i371.i = urem i32 %sub_tmp.i370.i, 100
  %lshift_tmp.i372.i = shl nuw nsw i32 %mod_tmp.i371.i, 1
  %div_tmp7.i.i = udiv i32 %sub_tmp.i370.i, 100
  %lshift_tmp8.i.i = shl nuw nsw i32 %div_tmp7.i.i, 1
  %68 = zext i32 %.04245.i.i to i64
  %69 = sub nsw i64 0, %68
  %ptr_sub_tmp.i.i = getelementptr i8, i8* %ptr_add_tmp11.i.i, i64 %69
  %ptr_sub_tmp13.i.i = getelementptr i8, i8* %ptr_sub_tmp.i.i, i64 -2
  %70 = zext i32 %lshift_tmp.i372.i to i64
  %ptr_add_tmp15.i373.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %70
  %71 = bitcast i8* %ptr_add_tmp15.i373.i to i16*
  %72 = bitcast i8* %ptr_sub_tmp13.i.i to i16*
  %73 = load i16, i16* %71, align 2
  store i16 %73, i16* %72, align 1
  %ptr_sub_tmp22.i.i = getelementptr i8, i8* %ptr_sub_tmp.i.i, i64 -4
  %74 = zext i32 %lshift_tmp8.i.i to i64
  %ptr_add_tmp24.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %74
  %75 = bitcast i8* %ptr_add_tmp24.i.i to i16*
  %76 = bitcast i8* %ptr_sub_tmp22.i.i to i16*
  %77 = load i16, i16* %75, align 2
  store i16 %77, i16* %76, align 1
  %add_tmp.i374.i = add i32 %.04245.i.i, 4
  %78 = icmp ugt i32 %.046.i.i, 99999999
  br i1 %78, label %while.i.i, label %endwhile.loopexit.i.i

then.i375.i:                                      ; preds = %endwhile.i.i
  %mod_tmp28.lhs.trunc.i.i = trunc i32 %.0.lcssa.i.i to i16
  %mod_tmp2843.i.i = urem i16 %mod_tmp28.lhs.trunc.i.i, 100
  %79 = shl nuw nsw i16 %mod_tmp2843.i.i, 1
  %div_tmp3144.i.i = udiv i16 %mod_tmp28.lhs.trunc.i.i, 100
  %div_tmp31.zext.i.i = zext i16 %div_tmp3144.i.i to i32
  %80 = zext i32 %60 to i64
  %ptr_add_tmp34.i.i = getelementptr i8, i8* %ptr_add_tmp128.i, i64 1
  %ptr_add_tmp35.i.i = getelementptr i8, i8* %ptr_add_tmp34.i.i, i64 -2
  %81 = sub nsw i64 0, %.042.lcssa.i.i
  %ptr_sub_tmp37.i.i = getelementptr i8, i8* %ptr_add_tmp35.i.i, i64 %80
  %ptr_sub_tmp38.i.i = getelementptr i8, i8* %ptr_sub_tmp37.i.i, i64 %81
  %82 = zext i16 %79 to i64
  %ptr_add_tmp40.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %82
  %83 = bitcast i8* %ptr_add_tmp40.i.i to i16*
  %84 = bitcast i8* %ptr_sub_tmp38.i.i to i16*
  %85 = load i16, i16* %83, align 2
  store i16 %85, i16* %84, align 1
  br label %endif.i376.i

endif.i376.i:                                     ; preds = %then.i375.i, %endwhile.i.i
  %.1.i.i = phi i32 [ %div_tmp31.zext.i.i, %then.i375.i ], [ %.0.lcssa.i.i, %endwhile.i.i ]
  %86 = icmp ugt i32 %.1.i.i, 9
  br i1 %86, label %then44.i.i, label %else.i378.i

then44.i.i:                                       ; preds = %endif.i376.i
  %lshift_tmp46.i.i = shl nuw nsw i32 %.1.i.i, 1
  %add_tmp48.i.i = or i32 %lshift_tmp46.i.i, 1
  %87 = zext i32 %add_tmp48.i.i to i64
  %88 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %87
  %ptr_add_tmp50.i.i = getelementptr i8, i8* %ptr_add_tmp128.i, i64 2
  %load_tmp51.i.i = load i8, i8* %88, align 1
  store i8 %load_tmp51.i.i, i8* %ptr_add_tmp50.i.i, align 1
  %89 = zext i32 %lshift_tmp46.i.i to i64
  %90 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %89
  %load_tmp57.i.i = load i8, i8* %90, align 2
  br label %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i

else.i378.i:                                      ; preds = %endif.i376.i
  %91 = trunc i32 %.1.i.i to i8
  %cast_tmp.i377.i = add nuw nsw i8 %91, 48
  br label %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i

func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i: ; preds = %else.i378.i, %then44.i.i
  %storemerge.i.i = phi i8 [ %cast_tmp.i377.i, %else.i378.i ], [ %load_tmp57.i.i, %then44.i.i ]
  %92 = getelementptr i8, i8* %ptr_add_tmp128.i, i64 1
  store i8 46, i8* %92, align 1
  store i8 %storemerge.i.i, i8* %ptr_add_tmp128.i, align 1
  %add_tmp130.i = add i32 %60, 1
  br label %endif141.i

else133.i:                                        ; preds = %endif121.i
  %93 = trunc i32 %29 to i8
  %cast_tmp136.i = add i8 %93, 48
  %94 = sext i32 %.1300591.i to i64
  %ptr_add_tmp139.i = getelementptr i8, i8* %2, i64 %94
  store i8 %cast_tmp136.i, i8* %ptr_add_tmp139.i, align 1
  br label %endif141.i

endif141.i:                                       ; preds = %else133.i, %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i
  %add_tmp130.pn.i = phi i32 [ %add_tmp130.i, %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i ], [ 1, %else133.i ]
  %.2301.i = add i32 %add_tmp130.pn.i, %.1300591.i
  br label %endif144.i

endif144.i:                                       ; preds = %endif141.i, %else110.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i
  %.2329.i = phi i32 [ %.0327589.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i ], [ %sub_tmp117.i, %endif141.i ], [ %.0327589.i, %else110.i ]
  %.1313.i = phi i32 [ %add_tmp98.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i ], [ %60, %endif141.i ], [ 0, %else110.i ]
  %.3.i = phi i32 [ %add_tmp107.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i ], [ %.2301.i, %endif141.i ], [ %.1300591.i, %else110.i ]
  %95 = icmp sgt i64 %indvars.iv.in.i, 1
  br i1 %95, label %for.i, label %endif145.i

endif145.i:                                       ; preds = %endif144.i
  br i1 %21, label %for161.lr.ph.i, label %endif243.thread.thread.i

for161.lr.ph.i:                                   ; preds = %endif70.i.for161.lr.ph.i_crit_edge, %endif145.i
  %sub_tmp166.i.pre-phi = phi i32 [ %.pre38, %endif70.i.for161.lr.ph.i_crit_edge ], [ %sub_tmp86.i, %endif145.i ]
  %lshift_tmp185.i.pre-phi = phi i64 [ %.pre, %endif70.i.for161.lr.ph.i_crit_edge ], [ %lshift_tmp.i, %endif145.i ]
  %.4663.i = phi i32 [ %.0299.i, %endif70.i.for161.lr.ph.i_crit_edge ], [ %.3.i, %endif145.i ]
  %.2314662.i = phi i32 [ 0, %endif70.i.for161.lr.ph.i_crit_edge ], [ %.1313.i, %endif145.i ]
  %.3330661.i = phi i32 [ 0, %endif70.i.for161.lr.ph.i_crit_edge ], [ %.2329.i, %endif145.i ]
  %div_tmp572.i = lshr i32 %.0292.nonneg.i, 4
  %96 = zext i32 %div_tmp572.i to i64
  %97 = getelementptr [69 x i8], [69 x i8]* @std.ryu.MIN_BLOCK_2, i64 0, i64 %96
  %load_tmp154.i = load i8, i8* %97, align 1
  %98 = getelementptr [69 x i16], [69 x i16]* @std.ryu.POW10_OFFSET_2, i64 0, i64 %96
  %load_tmp169.i = load i16, i16* %98, align 2
  %add_tmp179.i = add nuw nsw i32 %div_tmp572.i, 1
  %99 = zext i32 %add_tmp179.i to i64
  %100 = getelementptr [69 x i16], [69 x i16]* @std.ryu.POW10_OFFSET_2, i64 0, i64 %99
  %load_tmp180.i = load i16, i16* %100, align 2
  %mul_tmp165.neg.i = mul i32 %div_tmp572.i, -16
  %add_tmp188.i = add i32 %sub_tmp166.i.pre-phi, %mul_tmp165.neg.i
  %101 = zext i8 %load_tmp154.i to i64
  %102 = zext i16 %load_tmp169.i to i64
  %103 = zext i16 %load_tmp180.i to i64
  br label %for161.i

for161.i:                                         ; preds = %endif242.i, %for161.lr.ph.i
  %indvars.iv652.i = phi i64 [ %101, %for161.lr.ph.i ], [ %indvars.iv.next653.i, %endif242.i ]
  %.5604.i = phi i32 [ %.4663.i, %for161.lr.ph.i ], [ %.7.i, %endif242.i ]
  %.3315603.i = phi i32 [ %.2314662.i, %for161.lr.ph.i ], [ %.4316.i, %endif242.i ]
  %.4331596.i = phi i32 [ %.3330661.i, %for161.lr.ph.i ], [ %.6333.i, %endif242.i ]
  %indvars657.i = trunc i64 %indvars.iv652.i to i32
  %104 = sub nuw nsw i64 %indvars.iv652.i, %101
  %105 = add nuw nsw i64 %104, %102
  %.not350.i = icmp ult i64 %105, %103
  br i1 %.not350.i, label %endif189.i, label %endif189.thread.i

endif189.i:                                       ; preds = %for161.i
  %106 = getelementptr [3133 x [3 x i64]], [3133 x [3 x i64]]* @std.ryu.POW10_SPLIT_2, i64 0, i64 %105, i64 0
  %.val360.i = load i64, i64* %106, align 8
  %.idx361.i = getelementptr [3133 x [3 x i64]], [3133 x [3 x i64]]* @std.ryu.POW10_SPLIT_2, i64 0, i64 %105, i64 1
  %.idx361.val.i = load i64, i64* %.idx361.i, align 8
  %.idx362.i = getelementptr [3133 x [3 x i64]], [3133 x [3 x i64]]* @std.ryu.POW10_SPLIT_2, i64 0, i64 %105, i64 2
  %.idx362.val.i = load i64, i64* %.idx362.i, align 8
  %107 = tail call fastcc i32 @func.std.ryu.mulShift_mod1e9..3.builtin.uint64.0P.const.builtin.uint64.builtin.int32.builtin.uint32(i64 %lshift_tmp185.i.pre-phi, i64 %.val360.i, i64 %.idx361.val.i, i64 %.idx362.val.i, i32 %add_tmp188.i) #8
  %.not351.i = icmp eq i32 %.3315603.i, 0
  br i1 %.not351.i, label %else205.i, label %then191.i

endif189.thread.i:                                ; preds = %for161.i
  %.not351526.i = icmp eq i32 %.3315603.i, 0
  br i1 %.not351526.i, label %endif242.i, label %then191.thread.i

then191.i:                                        ; preds = %endif189.i
  %add_tmp193.i = add i32 %.3315603.i, 9
  %108 = icmp ugt i32 %add_tmp193.i, %19
  br i1 %108, label %endif243.thread.i, label %endif196.i

then191.thread.i:                                 ; preds = %endif189.thread.i
  %add_tmp193559.i = add i32 %.3315603.i, 9
  %109 = icmp ugt i32 %add_tmp193559.i, %19
  br i1 %109, label %endif243.thread.i, label %endif196.thread.i

endif196.thread.i:                                ; preds = %then191.thread.i
  %110 = sext i32 %.5604.i to i64
  %ptr_add_tmp200565.i = getelementptr i8, i8* %2, i64 %110
  br label %then.i403.i

endif196.i:                                       ; preds = %then191.i
  %111 = sext i32 %.5604.i to i64
  %ptr_add_tmp200.i = getelementptr i8, i8* %2, i64 %111
  %112 = icmp eq i32 %107, 0
  br i1 %112, label %then.i403.i, label %for_condition_check.preheader.i402.i

for_condition_check.preheader.i402.i:             ; preds = %endif196.i
  %ptr_add_tmp.i379.i = getelementptr i8, i8* %ptr_add_tmp200.i, i64 7
  %ptr_add_tmp17.i380.i = getelementptr i8, i8* %ptr_add_tmp200.i, i64 5
  %div_tmp.i381.i = udiv i32 %107, 10000
  %mul_tmp.neg.i382.i = mul i32 %div_tmp.i381.i, -10000
  %sub_tmp.i383.i = add i32 %mul_tmp.neg.i382.i, %107
  %mod_tmp.i384.i = urem i32 %sub_tmp.i383.i, 100
  %lshift_tmp.i385.i = shl nuw nsw i32 %mod_tmp.i384.i, 1
  %div_tmp10.i386.i = udiv i32 %sub_tmp.i383.i, 100
  %lshift_tmp11.i387.i = shl nuw nsw i32 %div_tmp10.i386.i, 1
  %113 = zext i32 %lshift_tmp.i385.i to i64
  %ptr_add_tmp15.i388.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %113
  %114 = bitcast i8* %ptr_add_tmp15.i388.i to i16*
  %115 = bitcast i8* %ptr_add_tmp.i379.i to i16*
  %116 = load i16, i16* %114, align 2
  store i16 %116, i16* %115, align 1
  %117 = zext i32 %lshift_tmp11.i387.i to i64
  %ptr_add_tmp21.i389.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %117
  %118 = bitcast i8* %ptr_add_tmp21.i389.i to i16*
  %119 = bitcast i8* %ptr_add_tmp17.i380.i to i16*
  %120 = load i16, i16* %118, align 2
  store i16 %120, i16* %119, align 1
  %div_tmp.1.i390.i = udiv i32 %107, 100000000
  %mul_tmp.neg.1.i391.i = mul nsw i32 %div_tmp.1.i390.i, -10000
  %sub_tmp.1.i392.i = add nsw i32 %mul_tmp.neg.1.i391.i, %div_tmp.i381.i
  %mod_tmp.1.i393.i = urem i32 %sub_tmp.1.i392.i, 100
  %lshift_tmp.1.i394.i = shl nuw nsw i32 %mod_tmp.1.i393.i, 1
  %div_tmp10.1.i395.i = udiv i32 %sub_tmp.1.i392.i, 100
  %lshift_tmp11.1.i396.i = shl nuw nsw i32 %div_tmp10.1.i395.i, 1
  %ptr_sub_tmp.1.i397.i = getelementptr i8, i8* %ptr_add_tmp200.i, i64 3
  %121 = zext i32 %lshift_tmp.1.i394.i to i64
  %ptr_add_tmp15.1.i398.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %121
  %122 = bitcast i8* %ptr_add_tmp15.1.i398.i to i16*
  %123 = bitcast i8* %ptr_sub_tmp.1.i397.i to i16*
  %124 = load i16, i16* %122, align 2
  store i16 %124, i16* %123, align 1
  %ptr_sub_tmp19.1.i399.i = getelementptr i8, i8* %ptr_add_tmp200.i, i64 1
  %125 = zext i32 %lshift_tmp11.1.i396.i to i64
  %ptr_add_tmp21.1.i400.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %125
  %126 = bitcast i8* %ptr_add_tmp21.1.i400.i to i16*
  %127 = bitcast i8* %ptr_sub_tmp19.1.i399.i to i16*
  %128 = load i16, i16* %126, align 2
  store i16 %128, i16* %127, align 1
  %129 = trunc i32 %div_tmp.1.i390.i to i8
  %cast_tmp.i401.i = add nuw nsw i8 %129, 48
  store i8 %cast_tmp.i401.i, i8* %ptr_add_tmp200.i, align 1
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i

then.i403.i:                                      ; preds = %endif196.i, %endif196.thread.i
  %ptr_add_tmp200569.i = phi i8* [ %ptr_add_tmp200565.i, %endif196.thread.i ], [ %ptr_add_tmp200.i, %endif196.i ]
  %add_tmp193562567.i = phi i32 [ %add_tmp193559.i, %endif196.thread.i ], [ %add_tmp193.i, %endif196.i ]
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(9) %ptr_add_tmp200569.i, i8 48, i64 9, i1 false) #8
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i

func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i: ; preds = %then.i403.i, %for_condition_check.preheader.i402.i
  %add_tmp193562566.i = phi i32 [ %add_tmp193.i, %for_condition_check.preheader.i402.i ], [ %add_tmp193562567.i, %then.i403.i ]
  %add_tmp202.i = add i32 %.5604.i, 9
  br label %endif242.i

else205.i:                                        ; preds = %endif189.i
  %.not352.i = icmp eq i32 %107, 0
  br i1 %.not352.i, label %endif242.i, label %then207.i

then207.i:                                        ; preds = %else205.i
  %130 = icmp ult i32 %107, 1000000000
  tail call void @llvm.assume(i1 %130) #8
  %131 = icmp ugt i32 %107, 99999999
  br i1 %131, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, label %else.i405.i

else.i405.i:                                      ; preds = %then207.i
  %132 = icmp ugt i32 %107, 9999999
  br i1 %132, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, label %else4.i406.i

else4.i406.i:                                     ; preds = %else.i405.i
  %133 = icmp ugt i32 %107, 999999
  br i1 %133, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, label %else7.i407.i

else7.i407.i:                                     ; preds = %else4.i406.i
  %134 = icmp ugt i32 %107, 99999
  br i1 %134, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, label %else10.i408.i

else10.i408.i:                                    ; preds = %else7.i407.i
  %135 = icmp ugt i32 %107, 9999
  br i1 %135, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, label %else13.i409.i

else13.i409.i:                                    ; preds = %else10.i408.i
  %136 = icmp ugt i32 %107, 999
  br i1 %136, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, label %else16.i411.i

else16.i411.i:                                    ; preds = %else13.i409.i
  %137 = icmp ugt i32 %107, 99
  %138 = icmp ugt i32 %107, 9
  %..i410.i = select i1 %138, i32 2, i32 1
  %139 = select i1 %137, i32 3, i32 %..i410.i
  br label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i: ; preds = %else16.i411.i, %else13.i409.i, %else10.i408.i, %else7.i407.i, %else4.i406.i, %else.i405.i, %then207.i
  %140 = phi i32 [ 9, %then207.i ], [ 8, %else.i405.i ], [ 7, %else4.i406.i ], [ 6, %else7.i407.i ], [ 5, %else10.i408.i ], [ %139, %else16.i411.i ], [ 4, %else13.i409.i ]
  %unary_minus_tmp211.i = xor i32 %indvars657.i, -1
  %mul_tmp212.i = mul i32 %unary_minus_tmp211.i, 9
  %add_tmp214.i = add nsw i32 %mul_tmp212.i, -1
  %sub_tmp215.i = add i32 %add_tmp214.i, %140
  %141 = icmp ugt i32 %140, %19
  br i1 %141, label %endif243.thread.i, label %endif219.i

endif219.i:                                       ; preds = %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i
  br i1 %.not.i, label %else231.i, label %then221.i

then221.i:                                        ; preds = %endif219.i
  %142 = sext i32 %.5604.i to i64
  %ptr_add_tmp226.i = getelementptr i8, i8* %2, i64 %142
  %143 = icmp ugt i32 %107, 9999
  br i1 %143, label %while.lr.ph.i415.i, label %endwhile.i420.i

while.lr.ph.i415.i:                               ; preds = %then221.i
  %144 = zext i32 %140 to i64
  %ptr_add_tmp.i413.i = getelementptr i8, i8* %ptr_add_tmp226.i, i64 1
  %ptr_add_tmp11.i414.i = getelementptr i8, i8* %ptr_add_tmp.i413.i, i64 %144
  br label %while.i436.i

endwhile.loopexit.i417.i:                         ; preds = %while.i436.i
  %phi.cast.i416.i = zext i32 %add_tmp.i435.i to i64
  br label %endwhile.i420.i

endwhile.i420.i:                                  ; preds = %endwhile.loopexit.i417.i, %then221.i
  %.042.lcssa.i418.i = phi i64 [ 0, %then221.i ], [ %phi.cast.i416.i, %endwhile.loopexit.i417.i ]
  %.0.lcssa.i419.i = phi i32 [ %107, %then221.i ], [ %div_tmp.i423.i, %endwhile.loopexit.i417.i ]
  %145 = icmp ugt i32 %.0.lcssa.i419.i, 99
  br i1 %145, label %then.i446.i, label %endif.i448.i

while.i436.i:                                     ; preds = %while.i436.i, %while.lr.ph.i415.i
  %.046.i421.i = phi i32 [ %107, %while.lr.ph.i415.i ], [ %div_tmp.i423.i, %while.i436.i ]
  %.04245.i422.i = phi i32 [ 0, %while.lr.ph.i415.i ], [ %add_tmp.i435.i, %while.i436.i ]
  %div_tmp.i423.i = udiv i32 %.046.i421.i, 10000
  %mul_tmp.neg.i424.i = mul nsw i32 %div_tmp.i423.i, -10000
  %sub_tmp.i425.i = add i32 %mul_tmp.neg.i424.i, %.046.i421.i
  %mod_tmp.i426.i = urem i32 %sub_tmp.i425.i, 100
  %lshift_tmp.i427.i = shl nuw nsw i32 %mod_tmp.i426.i, 1
  %div_tmp7.i428.i = udiv i32 %sub_tmp.i425.i, 100
  %lshift_tmp8.i429.i = shl nuw nsw i32 %div_tmp7.i428.i, 1
  %146 = zext i32 %.04245.i422.i to i64
  %147 = sub nsw i64 0, %146
  %ptr_sub_tmp.i430.i = getelementptr i8, i8* %ptr_add_tmp11.i414.i, i64 %147
  %ptr_sub_tmp13.i431.i = getelementptr i8, i8* %ptr_sub_tmp.i430.i, i64 -2
  %148 = zext i32 %lshift_tmp.i427.i to i64
  %ptr_add_tmp15.i432.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %148
  %149 = bitcast i8* %ptr_add_tmp15.i432.i to i16*
  %150 = bitcast i8* %ptr_sub_tmp13.i431.i to i16*
  %151 = load i16, i16* %149, align 2
  store i16 %151, i16* %150, align 1
  %ptr_sub_tmp22.i433.i = getelementptr i8, i8* %ptr_sub_tmp.i430.i, i64 -4
  %152 = zext i32 %lshift_tmp8.i429.i to i64
  %ptr_add_tmp24.i434.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %152
  %153 = bitcast i8* %ptr_add_tmp24.i434.i to i16*
  %154 = bitcast i8* %ptr_sub_tmp22.i433.i to i16*
  %155 = load i16, i16* %153, align 2
  store i16 %155, i16* %154, align 1
  %add_tmp.i435.i = add i32 %.04245.i422.i, 4
  %156 = icmp ugt i32 %.046.i421.i, 99999999
  br i1 %156, label %while.i436.i, label %endwhile.loopexit.i417.i

then.i446.i:                                      ; preds = %endwhile.i420.i
  %mod_tmp28.lhs.trunc.i437.i = trunc i32 %.0.lcssa.i419.i to i16
  %mod_tmp2843.i438.i = urem i16 %mod_tmp28.lhs.trunc.i437.i, 100
  %157 = shl nuw nsw i16 %mod_tmp2843.i438.i, 1
  %div_tmp3144.i439.i = udiv i16 %mod_tmp28.lhs.trunc.i437.i, 100
  %div_tmp31.zext.i440.i = zext i16 %div_tmp3144.i439.i to i32
  %158 = zext i32 %140 to i64
  %ptr_add_tmp34.i441.i = getelementptr i8, i8* %ptr_add_tmp226.i, i64 1
  %ptr_add_tmp35.i442.i = getelementptr i8, i8* %ptr_add_tmp34.i441.i, i64 -2
  %159 = sub nsw i64 0, %.042.lcssa.i418.i
  %ptr_sub_tmp37.i443.i = getelementptr i8, i8* %ptr_add_tmp35.i442.i, i64 %158
  %ptr_sub_tmp38.i444.i = getelementptr i8, i8* %ptr_sub_tmp37.i443.i, i64 %159
  %160 = zext i16 %157 to i64
  %ptr_add_tmp40.i445.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %160
  %161 = bitcast i8* %ptr_add_tmp40.i445.i to i16*
  %162 = bitcast i8* %ptr_sub_tmp38.i444.i to i16*
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 1
  br label %endif.i448.i

endif.i448.i:                                     ; preds = %then.i446.i, %endwhile.i420.i
  %.1.i447.i = phi i32 [ %div_tmp31.zext.i440.i, %then.i446.i ], [ %.0.lcssa.i419.i, %endwhile.i420.i ]
  %164 = icmp ugt i32 %.1.i447.i, 9
  br i1 %164, label %then44.i454.i, label %else.i456.i

then44.i454.i:                                    ; preds = %endif.i448.i
  %lshift_tmp46.i449.i = shl nuw nsw i32 %.1.i447.i, 1
  %add_tmp48.i450.i = or i32 %lshift_tmp46.i449.i, 1
  %165 = zext i32 %add_tmp48.i450.i to i64
  %166 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %165
  %ptr_add_tmp50.i451.i = getelementptr i8, i8* %ptr_add_tmp226.i, i64 2
  %load_tmp51.i452.i = load i8, i8* %166, align 1
  store i8 %load_tmp51.i452.i, i8* %ptr_add_tmp50.i451.i, align 1
  %167 = zext i32 %lshift_tmp46.i449.i to i64
  %168 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %167
  %load_tmp57.i453.i = load i8, i8* %168, align 2
  br label %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit458.i

else.i456.i:                                      ; preds = %endif.i448.i
  %169 = trunc i32 %.1.i447.i to i8
  %cast_tmp.i455.i = add nuw nsw i8 %169, 48
  br label %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit458.i

func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit458.i: ; preds = %else.i456.i, %then44.i454.i
  %storemerge.i457.i = phi i8 [ %cast_tmp.i455.i, %else.i456.i ], [ %load_tmp57.i453.i, %then44.i454.i ]
  %170 = getelementptr i8, i8* %ptr_add_tmp226.i, i64 1
  store i8 46, i8* %170, align 1
  store i8 %storemerge.i457.i, i8* %ptr_add_tmp226.i, align 1
  %add_tmp228.i = add i32 %140, 1
  br label %endif239.i

else231.i:                                        ; preds = %endif219.i
  %171 = trunc i32 %107 to i8
  %cast_tmp234.i = add i8 %171, 48
  %172 = sext i32 %.5604.i to i64
  %ptr_add_tmp237.i = getelementptr i8, i8* %2, i64 %172
  store i8 %cast_tmp234.i, i8* %ptr_add_tmp237.i, align 1
  br label %endif239.i

endif239.i:                                       ; preds = %else231.i, %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit458.i
  %add_tmp228.pn.i = phi i32 [ %add_tmp228.i, %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit458.i ], [ 1, %else231.i ]
  %.6.i = add i32 %add_tmp228.pn.i, %.5604.i
  br label %endif242.i

endif242.i:                                       ; preds = %endif239.i, %else205.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i, %endif189.thread.i
  %.6333.i = phi i32 [ %.4331596.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i ], [ %sub_tmp215.i, %endif239.i ], [ %.4331596.i, %else205.i ], [ %.4331596.i, %endif189.thread.i ]
  %.4316.i = phi i32 [ %add_tmp193562566.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i ], [ %140, %endif239.i ], [ 0, %else205.i ], [ 0, %endif189.thread.i ]
  %.7.i = phi i32 [ %add_tmp202.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit404.i ], [ %.6.i, %endif239.i ], [ %.5604.i, %else205.i ], [ %.5604.i, %endif189.thread.i ]
  %indvars.iv.next653.i = add nuw nsw i64 %indvars.iv652.i, 1
  %173 = icmp ult i64 %indvars.iv652.i, 199
  br i1 %173, label %for161.i, label %endif243.thread.thread.i

endif243.thread.thread.i:                         ; preds = %endif242.i, %endif145.i
  %.8543.ph.i = phi i32 [ %.3.i, %endif145.i ], [ %.7.i, %endif242.i ]
  %.5317542.ph.i = phi i32 [ %.1313.i, %endif145.i ], [ %.4316.i, %endif242.i ]
  %.7334540.ph.i = phi i32 [ %.2329.i, %endif145.i ], [ %.6333.i, %endif242.i ]
  %sub_tmp246545668.i = sub i32 %19, %.5317542.ph.i
  br label %then267.i

endif243.thread.i:                                ; preds = %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i, %then96.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i, %then191.thread.i, %then191.i
  %.8543.i = phi i32 [ %.5604.i, %then191.i ], [ %.5604.i, %then191.thread.i ], [ %.5604.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i ], [ %.1300591.i, %then96.i ], [ %.1300591.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i ]
  %.5317542.i = phi i32 [ 0, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i ], [ %.3315603.i, %then191.thread.i ], [ %.3315603.i, %then191.i ], [ 0, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i ], [ %.0312590.i, %then96.i ]
  %.7326541.i = phi i32 [ %140, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i ], [ 9, %then191.thread.i ], [ 9, %then191.i ], [ %60, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i ], [ 9, %then96.i ]
  %.7334540.i = phi i32 [ %sub_tmp215.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i ], [ %.4331596.i, %then191.thread.i ], [ %.4331596.i, %then191.i ], [ %sub_tmp117.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i ], [ %.0327589.i, %then96.i ]
  %174 = phi i32 [ %107, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit412.i ], [ 0, %then191.thread.i ], [ %107, %then191.i ], [ %29, %then96.i ], [ %29, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i ]
  %sub_tmp246545.i = sub i32 %19, %.5317542.i
  %175 = icmp ugt i32 %.7326541.i, %sub_tmp246545.i
  br i1 %175, label %for_condition_check253.preheader.i, label %then267.i

for_condition_check253.preheader.i:               ; preds = %endif243.thread.i
  %sub_tmp259.i = sub i32 %.7326541.i, %sub_tmp246545.i
  %.not635.i = icmp eq i32 %sub_tmp259.i, 0
  br i1 %.not635.i, label %then267.i, label %for261.i

for261.i:                                         ; preds = %for_condition_check253.preheader.i, %for261.i
  %.0296629.i = phi i32 [ %176, %for261.i ], [ 0, %for_condition_check253.preheader.i ]
  %.8310628.i = phi i32 [ %div_tmp264.i, %for261.i ], [ %174, %for_condition_check253.preheader.i ]
  %div_tmp264.i = udiv i32 %.8310628.i, 10
  %mod_tmp.le.i = urem i32 %.8310628.i, 10
  %176 = add nuw i32 %.0296629.i, 1
  %exitcond.not.i = icmp eq i32 %176, %sub_tmp259.i
  br i1 %exitcond.not.i, label %endif265.i, label %for261.i

endif265.i:                                       ; preds = %for261.i
  %.not347.i = icmp eq i32 %mod_tmp.le.i, 5
  br i1 %.not347.i, label %else270.i, label %then267.i

then267.i:                                        ; preds = %endif265.i, %for_condition_check253.preheader.i, %endif243.thread.i, %endif243.thread.thread.i
  %sub_tmp246545677.i = phi i32 [ %sub_tmp246545.i, %endif265.i ], [ %sub_tmp246545.i, %endif243.thread.i ], [ %sub_tmp246545668.i, %endif243.thread.thread.i ], [ %sub_tmp246545.i, %for_condition_check253.preheader.i ]
  %.7334540675.i = phi i32 [ %.7334540.i, %endif265.i ], [ %.7334540.i, %endif243.thread.i ], [ %.7334540.ph.i, %endif243.thread.thread.i ], [ %.7334540.i, %for_condition_check253.preheader.i ]
  %.5317542673.i = phi i32 [ %.5317542.i, %endif265.i ], [ %.5317542.i, %endif243.thread.i ], [ %.5317542.ph.i, %endif243.thread.thread.i ], [ %.5317542.i, %for_condition_check253.preheader.i ]
  %.8543670.i = phi i32 [ %.8543.i, %endif265.i ], [ %.8543.i, %endif243.thread.i ], [ %.8543.ph.i, %endif243.thread.thread.i ], [ %.8543.i, %for_condition_check253.preheader.i ]
  %.1298551.i = phi i32 [ %mod_tmp.le.i, %endif265.i ], [ 0, %endif243.thread.i ], [ 0, %endif243.thread.thread.i ], [ 0, %for_condition_check253.preheader.i ]
  %.9311550.i = phi i32 [ %div_tmp264.i, %endif265.i ], [ %174, %endif243.thread.i ], [ 0, %endif243.thread.thread.i ], [ %174, %for_condition_check253.preheader.i ]
  %177 = icmp ugt i32 %.1298551.i, 5
  %cast_tmp269.i = zext i1 %177 to i32
  br label %endif300.i

else270.i:                                        ; preds = %endif265.i
  %sub_tmp273.i = sub i32 %19, %.7334540.i
  %178 = add i32 %.0292.i, %sub_tmp273.i
  %sub_tmp277.i = sub i32 0, %178
  %179 = icmp slt i32 %sub_tmp277.i, 1
  br i1 %179, label %bool_or_end.i, label %bool_or_rhs.i

bool_or_rhs.i:                                    ; preds = %else270.i
  %180 = icmp ult i32 %sub_tmp277.i, 60
  br i1 %180, label %bool_and_rhs280.i, label %endif300.i

bool_and_rhs280.i:                                ; preds = %bool_or_rhs.i
  %181 = icmp ne i64 %.0293.i, 0
  tail call void @llvm.assume(i1 %181) #8
  %182 = zext i32 %sub_tmp277.i to i64
  %notmask.i.i = shl nsw i64 -1, %182
  %sub_tmp.i459.i = xor i64 %notmask.i.i, -1
  %bit_and_tmp.i.i = and i64 %.0293.i, %sub_tmp.i459.i
  %183 = icmp eq i64 %bit_and_tmp.i.i, 0
  br label %bool_or_end.i

bool_or_end.i:                                    ; preds = %bool_and_rhs280.i, %else270.i
  %bool_or_tmp.i = phi i1 [ true, %else270.i ], [ %183, %bool_and_rhs280.i ]
  %184 = icmp sgt i32 %sub_tmp273.i, -1
  %bool_or_tmp.not.i = xor i1 %bool_or_tmp.i, true
  %brmerge.i = select i1 %184, i1 true, i1 %bool_or_tmp.not.i
  br i1 %brmerge.i, label %endif295.i, label %for_condition_check.i.i.i

for_condition_check.i.i.i:                        ; preds = %bool_or_end.i, %for_condition_check.i.i.i
  %.014.i.i.i = phi i64 [ %mul_tmp.i.i460.i, %for_condition_check.i.i.i ], [ %.0293.i, %bool_or_end.i ]
  %.0.i.i.i = phi i32 [ %187, %for_condition_check.i.i.i ], [ 0, %bool_or_end.i ]
  %185 = icmp ne i64 %.014.i.i.i, 0
  tail call void @llvm.assume(i1 %185) #8
  %mul_tmp.i.i460.i = mul i64 %.014.i.i.i, -3689348814741910323
  %186 = icmp ugt i64 %mul_tmp.i.i460.i, 3689348814741910323
  %187 = add i32 %.0.i.i.i, 1
  br i1 %186, label %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i, label %for_condition_check.i.i.i

func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i: ; preds = %for_condition_check.i.i.i
  %unary_minus_tmp288.i = sub i32 0, %sub_tmp273.i
  %.not573.i = icmp ult i32 %.0.i.i.i, %unary_minus_tmp288.i
  br i1 %.not573.i, label %endif300.i, label %188

endif295.i:                                       ; preds = %bool_or_end.i
  %bool_or_tmp.mux.i = select i1 %184, i1 %bool_or_tmp.i, i1 false
  br i1 %bool_or_tmp.mux.i, label %188, label %endif300.i

188:                                              ; preds = %endif295.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i
  br label %endif300.i

endif300.i:                                       ; preds = %188, %endif295.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i, %bool_or_rhs.i, %then267.i
  %sub_tmp246545676.i = phi i32 [ %sub_tmp246545677.i, %then267.i ], [ %sub_tmp246545.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i ], [ %sub_tmp246545.i, %endif295.i ], [ %sub_tmp246545.i, %188 ], [ %sub_tmp246545.i, %bool_or_rhs.i ]
  %.7334540674.i = phi i32 [ %.7334540675.i, %then267.i ], [ %.7334540.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i ], [ %.7334540.i, %endif295.i ], [ %.7334540.i, %188 ], [ %.7334540.i, %bool_or_rhs.i ]
  %.5317542672.i = phi i32 [ %.5317542673.i, %then267.i ], [ %.5317542.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i ], [ %.5317542.i, %endif295.i ], [ %.5317542.i, %188 ], [ %.5317542.i, %bool_or_rhs.i ]
  %.8543669.i = phi i32 [ %.8543670.i, %then267.i ], [ %.8543.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i ], [ %.8543.i, %endif295.i ], [ %.8543.i, %188 ], [ %.8543.i, %bool_or_rhs.i ]
  %.9311549.i = phi i32 [ %.9311550.i, %then267.i ], [ %div_tmp264.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i ], [ %div_tmp264.i, %endif295.i ], [ %div_tmp264.i, %188 ], [ %div_tmp264.i, %bool_or_rhs.i ]
  %.1295.i = phi i32 [ %cast_tmp269.i, %then267.i ], [ 1, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i ], [ 1, %endif295.i ], [ 2, %188 ], [ 1, %bool_or_rhs.i ]
  %.not348.i = icmp eq i32 %.5317542672.i, 0
  br i1 %.not348.i, label %else320.i, label %then302.i

then302.i:                                        ; preds = %endif300.i
  %189 = icmp eq i32 %.9311549.i, 0
  %190 = sext i32 %.8543669.i to i64
  %ptr_add_tmp307.i = getelementptr i8, i8* %2, i64 %190
  br i1 %189, label %then304.i, label %else310.i

then304.i:                                        ; preds = %then302.i
  %cast_tmp309.i = zext i32 %sub_tmp246545676.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp307.i, i8 48, i64 %cast_tmp309.i, i1 false) #8
  br label %endif341.i

else310.i:                                        ; preds = %then302.i
  %sub_tmp.i461.i = add i32 %sub_tmp246545676.i, -1
  %.not.i.i = icmp eq i32 %sub_tmp.i461.i, 0
  br i1 %.not.i.i, label %endfor.i.i, label %for.lr.ph.i.i

for.lr.ph.i.i:                                    ; preds = %else310.i
  %191 = zext i32 %sub_tmp246545676.i to i64
  %ptr_add_tmp.i462.i = getelementptr i8, i8* %ptr_add_tmp307.i, i64 %191
  %ptr_sub_tmp.i463.i = getelementptr i8, i8* %ptr_add_tmp.i462.i, i64 -2
  br label %for.i.i

endfor.i.i:                                       ; preds = %for.i.i, %else310.i
  %.025.lcssa.i.i = phi i32 [ 0, %else310.i ], [ %add_tmp.i468.i, %for.i.i ]
  %.0.lcssa.i464.i = phi i32 [ %.9311549.i, %else310.i ], [ %div_tmp.i467.i, %for.i.i ]
  %192 = icmp ult i32 %.025.lcssa.i.i, %sub_tmp246545676.i
  br i1 %192, label %then.i471.i, label %endif341.i

for.i.i:                                          ; preds = %for.i.i, %for.lr.ph.i.i
  %.028.i.i = phi i32 [ %.9311549.i, %for.lr.ph.i.i ], [ %div_tmp.i467.i, %for.i.i ]
  %.02527.i.i = phi i32 [ 0, %for.lr.ph.i.i ], [ %add_tmp.i468.i, %for.i.i ]
  %mod_tmp.i465.i = urem i32 %.028.i.i, 100
  %lshift_tmp.i466.i = shl nuw nsw i32 %mod_tmp.i465.i, 1
  %div_tmp.i467.i = udiv i32 %.028.i.i, 100
  %193 = zext i32 %.02527.i.i to i64
  %194 = sub nsw i64 0, %193
  %ptr_sub_tmp8.i.i = getelementptr i8, i8* %ptr_sub_tmp.i463.i, i64 %194
  %195 = zext i32 %lshift_tmp.i466.i to i64
  %ptr_add_tmp10.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %195
  %196 = bitcast i8* %ptr_add_tmp10.i.i to i16*
  %197 = bitcast i8* %ptr_sub_tmp8.i.i to i16*
  %198 = load i16, i16* %196, align 2
  store i16 %198, i16* %197, align 1
  %add_tmp.i468.i = add i32 %.02527.i.i, 2
  %199 = icmp ult i32 %add_tmp.i468.i, %sub_tmp.i461.i
  br i1 %199, label %for.i.i, label %endfor.i.i

then.i471.i:                                      ; preds = %endfor.i.i
  %mod_tmp14.i.i = urem i32 %.0.lcssa.i464.i, 10
  %200 = trunc i32 %mod_tmp14.i.i to i8
  %cast_tmp.i469.i = or i8 %200, 48
  %201 = zext i32 %sub_tmp246545676.i to i64
  %ptr_add_tmp19.i.i = getelementptr i8, i8* %ptr_add_tmp307.i, i64 %201
  %202 = zext i32 %.025.lcssa.i.i to i64
  %203 = sub nsw i64 0, %202
  %ptr_sub_tmp21.i.i = getelementptr i8, i8* %ptr_add_tmp19.i.i, i64 %203
  %ptr_sub_tmp22.i470.i = getelementptr i8, i8* %ptr_sub_tmp21.i.i, i64 -1
  store i8 %cast_tmp.i469.i, i8* %ptr_sub_tmp22.i470.i, align 1
  br label %endif341.i

else320.i:                                        ; preds = %endif300.i
  br i1 %.not.i, label %else332.i, label %then322.i

then322.i:                                        ; preds = %else320.i
  %204 = sext i32 %.8543669.i to i64
  %ptr_add_tmp327.i = getelementptr i8, i8* %2, i64 %204
  %205 = icmp ugt i32 %.9311549.i, 9999
  br i1 %205, label %while.lr.ph.i475.i, label %endwhile.i480.i

while.lr.ph.i475.i:                               ; preds = %then322.i
  %206 = zext i32 %sub_tmp246545676.i to i64
  %ptr_add_tmp.i473.i = getelementptr i8, i8* %ptr_add_tmp327.i, i64 %206
  %ptr_add_tmp11.i474.i = getelementptr i8, i8* %ptr_add_tmp.i473.i, i64 1
  br label %while.i496.i

endwhile.loopexit.i477.i:                         ; preds = %while.i496.i
  %phi.cast.i476.i = zext i32 %add_tmp.i495.i to i64
  br label %endwhile.i480.i

endwhile.i480.i:                                  ; preds = %endwhile.loopexit.i477.i, %then322.i
  %.042.lcssa.i478.i = phi i64 [ 0, %then322.i ], [ %phi.cast.i476.i, %endwhile.loopexit.i477.i ]
  %.0.lcssa.i479.i = phi i32 [ %.9311549.i, %then322.i ], [ %div_tmp.i483.i, %endwhile.loopexit.i477.i ]
  %207 = icmp ugt i32 %.0.lcssa.i479.i, 99
  br i1 %207, label %then.i506.i, label %endif.i508.i

while.i496.i:                                     ; preds = %while.i496.i, %while.lr.ph.i475.i
  %.046.i481.i = phi i32 [ %.9311549.i, %while.lr.ph.i475.i ], [ %div_tmp.i483.i, %while.i496.i ]
  %.04245.i482.i = phi i32 [ 0, %while.lr.ph.i475.i ], [ %add_tmp.i495.i, %while.i496.i ]
  %div_tmp.i483.i = udiv i32 %.046.i481.i, 10000
  %mul_tmp.neg.i484.i = mul i32 %div_tmp.i483.i, -10000
  %sub_tmp.i485.i = add i32 %mul_tmp.neg.i484.i, %.046.i481.i
  %mod_tmp.i486.i = urem i32 %sub_tmp.i485.i, 100
  %lshift_tmp.i487.i = shl nuw nsw i32 %mod_tmp.i486.i, 1
  %div_tmp7.i488.i = udiv i32 %sub_tmp.i485.i, 100
  %lshift_tmp8.i489.i = shl nuw nsw i32 %div_tmp7.i488.i, 1
  %208 = zext i32 %.04245.i482.i to i64
  %209 = sub nsw i64 0, %208
  %ptr_sub_tmp.i490.i = getelementptr i8, i8* %ptr_add_tmp11.i474.i, i64 %209
  %ptr_sub_tmp13.i491.i = getelementptr i8, i8* %ptr_sub_tmp.i490.i, i64 -2
  %210 = zext i32 %lshift_tmp.i487.i to i64
  %ptr_add_tmp15.i492.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %210
  %211 = bitcast i8* %ptr_add_tmp15.i492.i to i16*
  %212 = bitcast i8* %ptr_sub_tmp13.i491.i to i16*
  %213 = load i16, i16* %211, align 2
  store i16 %213, i16* %212, align 1
  %ptr_sub_tmp22.i493.i = getelementptr i8, i8* %ptr_sub_tmp.i490.i, i64 -4
  %214 = zext i32 %lshift_tmp8.i489.i to i64
  %ptr_add_tmp24.i494.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %214
  %215 = bitcast i8* %ptr_add_tmp24.i494.i to i16*
  %216 = bitcast i8* %ptr_sub_tmp22.i493.i to i16*
  %217 = load i16, i16* %215, align 2
  store i16 %217, i16* %216, align 1
  %add_tmp.i495.i = add i32 %.04245.i482.i, 4
  %218 = icmp ugt i32 %.046.i481.i, 99999999
  br i1 %218, label %while.i496.i, label %endwhile.loopexit.i477.i

then.i506.i:                                      ; preds = %endwhile.i480.i
  %mod_tmp28.lhs.trunc.i497.i = trunc i32 %.0.lcssa.i479.i to i16
  %mod_tmp2843.i498.i = urem i16 %mod_tmp28.lhs.trunc.i497.i, 100
  %219 = shl nuw nsw i16 %mod_tmp2843.i498.i, 1
  %div_tmp3144.i499.i = udiv i16 %mod_tmp28.lhs.trunc.i497.i, 100
  %div_tmp31.zext.i500.i = zext i16 %div_tmp3144.i499.i to i32
  %220 = zext i32 %sub_tmp246545676.i to i64
  %ptr_add_tmp34.i501.i = getelementptr i8, i8* %ptr_add_tmp327.i, i64 %220
  %ptr_add_tmp35.i502.i = getelementptr i8, i8* %ptr_add_tmp34.i501.i, i64 1
  %221 = sub nsw i64 0, %.042.lcssa.i478.i
  %ptr_sub_tmp37.i503.i = getelementptr i8, i8* %ptr_add_tmp35.i502.i, i64 %221
  %ptr_sub_tmp38.i504.i = getelementptr i8, i8* %ptr_sub_tmp37.i503.i, i64 -2
  %222 = zext i16 %219 to i64
  %ptr_add_tmp40.i505.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %222
  %223 = bitcast i8* %ptr_add_tmp40.i505.i to i16*
  %224 = bitcast i8* %ptr_sub_tmp38.i504.i to i16*
  %225 = load i16, i16* %223, align 2
  store i16 %225, i16* %224, align 1
  br label %endif.i508.i

endif.i508.i:                                     ; preds = %then.i506.i, %endwhile.i480.i
  %.1.i507.i = phi i32 [ %div_tmp31.zext.i500.i, %then.i506.i ], [ %.0.lcssa.i479.i, %endwhile.i480.i ]
  %226 = icmp ugt i32 %.1.i507.i, 9
  br i1 %226, label %then44.i514.i, label %else.i516.i

then44.i514.i:                                    ; preds = %endif.i508.i
  %lshift_tmp46.i509.i = shl nuw nsw i32 %.1.i507.i, 1
  %add_tmp48.i510.i = or i32 %lshift_tmp46.i509.i, 1
  %227 = zext i32 %add_tmp48.i510.i to i64
  %228 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %227
  %ptr_add_tmp50.i511.i = getelementptr i8, i8* %ptr_add_tmp327.i, i64 2
  %load_tmp51.i512.i = load i8, i8* %228, align 1
  store i8 %load_tmp51.i512.i, i8* %ptr_add_tmp50.i511.i, align 1
  %229 = zext i32 %lshift_tmp46.i509.i to i64
  %230 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %229
  %load_tmp57.i513.i = load i8, i8* %230, align 2
  br label %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit518.i

else.i516.i:                                      ; preds = %endif.i508.i
  %231 = trunc i32 %.1.i507.i to i8
  %cast_tmp.i515.i = add nuw nsw i8 %231, 48
  br label %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit518.i

func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit518.i: ; preds = %else.i516.i, %then44.i514.i
  %storemerge.i517.i = phi i8 [ %cast_tmp.i515.i, %else.i516.i ], [ %load_tmp57.i513.i, %then44.i514.i ]
  %232 = getelementptr i8, i8* %ptr_add_tmp327.i, i64 1
  store i8 46, i8* %232, align 1
  store i8 %storemerge.i517.i, i8* %ptr_add_tmp327.i, align 1
  %add_tmp329.i = add i32 %sub_tmp246545676.i, 1
  br label %endif341.i

else332.i:                                        ; preds = %else320.i
  %233 = trunc i32 %.9311549.i to i8
  %cast_tmp335.i = add i8 %233, 48
  %234 = sext i32 %.8543669.i to i64
  %ptr_add_tmp338.i = getelementptr i8, i8* %2, i64 %234
  store i8 %cast_tmp335.i, i8* %ptr_add_tmp338.i, align 1
  br label %endif341.i

endif341.i:                                       ; preds = %else332.i, %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit518.i, %then.i471.i, %endfor.i.i, %then304.i
  %sub_tmp246.pn.i = phi i32 [ %add_tmp329.i, %func.std.ryu.append_d_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit518.i ], [ 1, %else332.i ], [ %sub_tmp246545676.i, %then304.i ], [ %sub_tmp246545676.i, %endfor.i.i ], [ %sub_tmp246545676.i, %then.i471.i ]
  %.9.i = add i32 %sub_tmp246.pn.i, %.8543669.i
  %.not349.i = icmp eq i32 %.1295.i, 0
  br i1 %.not349.i, label %endif386.i, label %while_condition_check.outer.i

while_condition_check.outer.i:                    ; preds = %endif341.i, %then367.i
  %.2.ph.i = phi i32 [ 1, %then367.i ], [ %.1295.i, %endif341.i ]
  %.0.ph.i = phi i32 [ %235, %then367.i ], [ %.9.i, %endif341.i ]
  br label %while_condition_check.i

while_condition_check.i:                          ; preds = %bool_or_rhs347.i, %while_condition_check.outer.i
  %.0.i = phi i32 [ %235, %bool_or_rhs347.i ], [ %.0.ph.i, %while_condition_check.outer.i ]
  %235 = add i32 %.0.i, -1
  %236 = icmp eq i32 %.0.i, 0
  br i1 %236, label %then356.i, label %bool_or_rhs347.i

bool_or_rhs347.i:                                 ; preds = %while_condition_check.i
  %237 = sext i32 %235 to i64
  %ptr_add_tmp350.i = getelementptr i8, i8* %2, i64 %237
  %load_tmp351.i = load i8, i8* %ptr_add_tmp350.i, align 1
  switch i8 %load_tmp351.i, label %else371.i [
    i8 45, label %then356.i
    i8 46, label %while_condition_check.i
    i8 57, label %then367.i
  ]

then356.i:                                        ; preds = %bool_or_rhs347.i, %while_condition_check.i
  %.lcssa.i = phi i64 [ -1, %while_condition_check.i ], [ %237, %bool_or_rhs347.i ]
  %ptr_add_tmp359.i = getelementptr i8, i8* %2, i64 %.lcssa.i
  %ptr_add_tmp360.i = getelementptr i8, i8* %ptr_add_tmp359.i, i64 1
  store i8 49, i8* %ptr_add_tmp360.i, align 1
  %238 = add i32 %.7334540674.i, 1
  br label %endif386.i

then367.i:                                        ; preds = %bool_or_rhs347.i
  %ptr_add_tmp350.i.le = getelementptr i8, i8* %2, i64 %237
  store i8 48, i8* %ptr_add_tmp350.i.le, align 1
  br label %while_condition_check.outer.i

else371.i:                                        ; preds = %bool_or_rhs347.i
  %239 = icmp eq i32 %.2.ph.i, 2
  %240 = and i8 %load_tmp351.i, 1
  %241 = icmp eq i8 %240, 0
  %or.cond.i = select i1 %239, i1 %241, i1 false
  br i1 %or.cond.i, label %endif386.i, label %endif379.i

endif379.i:                                       ; preds = %else371.i
  %ptr_add_tmp350.i.le52 = getelementptr i8, i8* %2, i64 %237
  %add_tmp381.i = add i8 %load_tmp351.i, 1
  store i8 %add_tmp381.i, i8* %ptr_add_tmp350.i.le52, align 1
  br label %endif386.i

endif386.i:                                       ; preds = %endif379.i, %else371.i, %then356.i, %endif341.i
  %.9336.i = phi i32 [ %.7334540674.i, %endif341.i ], [ %238, %then356.i ], [ %.7334540674.i, %endif379.i ], [ %.7334540674.i, %else371.i ]
  br i1 %4, label %while_condition_check389.preheader.i, label %endif408.i

while_condition_check389.preheader.i:             ; preds = %endif386.i
  %ptr_add_tmp393.i = getelementptr i8, i8* %2, i64 -1
  br label %while_condition_check389.i

while_condition_check389.i:                       ; preds = %while_condition_check389.i, %while_condition_check389.preheader.i
  %.10.i = phi i32 [ %244, %while_condition_check389.i ], [ %.9.i, %while_condition_check389.preheader.i ]
  %242 = sext i32 %.10.i to i64
  %ptr_sub_tmp.i = getelementptr i8, i8* %ptr_add_tmp393.i, i64 %242
  %load_tmp394.i = load i8, i8* %ptr_sub_tmp.i, align 1
  %243 = icmp eq i8 %load_tmp394.i, 48
  %244 = add i32 %.10.i, -1
  br i1 %243, label %while_condition_check389.i, label %endwhile390.i

endwhile390.i:                                    ; preds = %while_condition_check389.i
  %245 = icmp sgt i32 %.10.i, 0
  tail call void @llvm.assume(i1 %245) #8
  %246 = icmp eq i8 %load_tmp394.i, 46
  %247 = sext i1 %246 to i32
  %spec.select357.i = add nsw i32 %.10.i, %247
  br label %endif408.i

endif408.i:                                       ; preds = %endwhile390.i, %endif386.i
  %.11.i = phi i32 [ %.9.i, %endif386.i ], [ %spec.select357.i, %endwhile390.i ]
  %248 = sext i32 %.11.i to i64
  %ptr_add_tmp413.i = getelementptr i8, i8* %2, i64 %248
  %.709.i = select i1 %3, i8 69, i8 101
  store i8 %.709.i, i8* %ptr_add_tmp413.i, align 1
  %249 = add i32 %.11.i, 1
  %250 = icmp slt i32 %.9336.i, 0
  %251 = sext i32 %249 to i64
  %ptr_add_tmp424.i = getelementptr i8, i8* %2, i64 %251
  br i1 %250, label %then421.i, label %else428.i

then421.i:                                        ; preds = %endif408.i
  store i8 45, i8* %ptr_add_tmp424.i, align 1
  %unary_minus_tmp427.i = sub i32 0, %.9336.i
  br label %endif433.i

else428.i:                                        ; preds = %endif408.i
  store i8 43, i8* %ptr_add_tmp424.i, align 1
  br label %endif433.i

endif433.i:                                       ; preds = %else428.i, %then421.i
  %.10337.i = phi i32 [ %unary_minus_tmp427.i, %then421.i ], [ %.9336.i, %else428.i ]
  %.12.i = add i32 %.11.i, 2
  %252 = icmp sgt i32 %.10337.i, 99
  br i1 %252, label %then435.i, label %else454.i

then435.i:                                        ; preds = %endif433.i
  %mod_tmp437570.i = urem i32 %.10337.i, 10
  %253 = sext i32 %.12.i to i64
  %ptr_add_tmp440.i = getelementptr i8, i8* %2, i64 %253
  %div_tmp442571.i = udiv i32 %.10337.i, 10
  %mul_tmp443.i = shl nuw nsw i32 %div_tmp442571.i, 1
  %254 = zext i32 %mul_tmp443.i to i64
  %ptr_add_tmp444.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %254
  %255 = bitcast i8* %ptr_add_tmp444.i to i16*
  %256 = bitcast i8* %ptr_add_tmp440.i to i16*
  %257 = load i16, i16* %255, align 2
  store i16 %257, i16* %256, align 1
  %258 = trunc i32 %mod_tmp437570.i to i8
  %cast_tmp447.i = or i8 %258, 48
  %ptr_add_tmp451.i = getelementptr i8, i8* %ptr_add_tmp440.i, i64 2
  store i8 %cast_tmp447.i, i8* %ptr_add_tmp451.i, align 1
  br label %endif463.i

else454.i:                                        ; preds = %endif433.i
  %259 = sext i32 %.12.i to i64
  %ptr_add_tmp457.i = getelementptr i8, i8* %2, i64 %259
  %mul_tmp459.i = shl i32 %.10337.i, 1
  %260 = sext i32 %mul_tmp459.i to i64
  %ptr_add_tmp460.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %260
  %261 = bitcast i8* %ptr_add_tmp460.i to i16*
  %262 = bitcast i8* %ptr_add_tmp457.i to i16*
  %263 = load i16, i16* %261, align 2
  store i16 %263, i16* %262, align 1
  br label %endif463.i

endif463.i:                                       ; preds = %else454.i, %then435.i
  %.sink708.i = phi i32 [ 4, %else454.i ], [ 5, %then435.i ]
  %add_tmp462.i = add i32 %.sink708.i, %.11.i
  %264 = sext i32 %add_tmp462.i to i64
  %ptr_add_tmp466.i = getelementptr i8, i8* %2, i64 %264
  br label %func.std.ryu.d2exp_short..5.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.builtin.bool.0P.builtin.uint8.exit

func.std.ryu.d2exp_short..5.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.builtin.bool.0P.builtin.uint8.exit: ; preds = %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i, %endif38.i, %endif463.i
  %common.ret.op.i = phi i8* [ %ptr_add_tmp15.i.i, %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i ], [ %ptr_add_tmp52.i, %endif38.i ], [ %ptr_add_tmp466.i, %endif463.i ]
  ret i8* %common.ret.op.i
}

; Function Attrs: nofree nosync nounwind
define i8* @d2fixed_short(double %0, i32 %1, i8* %2, i1 %3) local_unnamed_addr #0 {
alloca:
  %4 = bitcast double %0 to i64
  %5 = icmp slt i64 %4, 0
  %bit_and_tmp3.i = and i64 %4, 4503599627370495
  %rshift_tmp5.i = lshr i64 %4, 52
  %cast_tmp.i = trunc i64 %rshift_tmp5.i to i32
  %bit_and_tmp6.i = and i32 %cast_tmp.i, 2047
  %6 = icmp eq i32 %bit_and_tmp6.i, 2047
  br i1 %6, label %then.i, label %endif.i

then.i:                                           ; preds = %alloca
  %.not335.i = icmp eq i64 %bit_and_tmp3.i, 0
  br i1 %.not335.i, label %endif.i.i, label %then.i.i

then.i.i:                                         ; preds = %then.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %2, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

endif.i.i:                                        ; preds = %then.i
  br i1 %5, label %then4.i.i, label %endif7.i.i

then4.i.i:                                        ; preds = %endif.i.i
  store i8 45, i8* %2, align 1
  %7 = getelementptr i8, i8* %2, i64 1
  br label %endif7.i.i

endif7.i.i:                                       ; preds = %then4.i.i, %endif.i.i
  %.0.i.i = phi i8* [ %7, %then4.i.i ], [ %2, %endif.i.i ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %.0.i.i, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i: ; preds = %endif7.i.i, %then.i.i
  %.0.sink.i.i = phi i8* [ %.0.i.i, %endif7.i.i ], [ %2, %then.i.i ]
  %ptr_add_tmp15.i.i = getelementptr i8, i8* %.0.sink.i.i, i64 3
  br label %func.std.ryu.d2fixed_short..4.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.0P.builtin.uint8.exit

endif.i:                                          ; preds = %alloca
  %8 = icmp eq i32 %bit_and_tmp6.i, 0
  %9 = icmp eq i64 %bit_and_tmp3.i, 0
  %bool_and_tmp.i = select i1 %8, i1 %9, i1 false
  br i1 %bool_and_tmp.i, label %then14.i, label %endif46.i

then14.i:                                         ; preds = %endif.i
  br i1 %5, label %then16.i, label %endif20.i

then16.i:                                         ; preds = %then14.i
  store i8 45, i8* %2, align 1
  br label %endif20.i

endif20.i:                                        ; preds = %then16.i, %then14.i
  %.0244.i = phi i32 [ 1, %then16.i ], [ 0, %then14.i ]
  %10 = zext i32 %.0244.i to i64
  %ptr_add_tmp23.i = getelementptr i8, i8* %2, i64 %10
  store i8 48, i8* %ptr_add_tmp23.i, align 1
  %11 = add nuw nsw i32 %.0244.i, 1
  %12 = icmp ne i32 %1, 0
  %unary_bool_not_tmp.i = xor i1 %3, true
  %bool_and_tmp29.i = select i1 %12, i1 %unary_bool_not_tmp.i, i1 false
  br i1 %bool_and_tmp29.i, label %then30.i, label %endif42.i

then30.i:                                         ; preds = %endif20.i
  %13 = zext i32 %11 to i64
  %ptr_add_tmp33.i = getelementptr i8, i8* %2, i64 %13
  store i8 46, i8* %ptr_add_tmp33.i, align 1
  %14 = or i32 %.0244.i, 2
  %15 = zext i32 %14 to i64
  %ptr_add_tmp37.i = getelementptr i8, i8* %2, i64 %15
  %cast_tmp39.i = zext i32 %1 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp37.i, i8 48, i64 %cast_tmp39.i, i1 false) #8
  %add_tmp.i = add i32 %14, %1
  br label %endif42.i

endif42.i:                                        ; preds = %then30.i, %endif20.i
  %.1.i = phi i32 [ %add_tmp.i, %then30.i ], [ %11, %endif20.i ]
  %16 = sext i32 %.1.i to i64
  %ptr_add_tmp45.i = getelementptr i8, i8* %2, i64 %16
  br label %func.std.ryu.d2fixed_short..4.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.0P.builtin.uint8.exit

endif46.i:                                        ; preds = %endif.i
  %sub_tmp51.i = add nsw i32 %bit_and_tmp6.i, -1075
  %bit_or_tmp.i = or i64 %bit_and_tmp3.i, 4503599627370496
  %.0248.i = select i1 %8, i64 %bit_and_tmp3.i, i64 %bit_or_tmp.i
  %.0245.i = select i1 %8, i32 -1074, i32 %sub_tmp51.i
  %.0245.nonneg.i = sub nsw i32 0, %.0245.i
  br i1 %5, label %then55.i, label %endif60.i

then55.i:                                         ; preds = %endif46.i
  store i8 45, i8* %2, align 1
  br label %endif60.i

endif60.i:                                        ; preds = %then55.i, %endif46.i
  %.0250.i = phi i32 [ 1, %then55.i ], [ 0, %endif46.i ]
  %17 = icmp sgt i32 %.0245.i, -53
  br i1 %17, label %for.lr.ph.i, label %then110.i

for.lr.ph.i:                                      ; preds = %endif60.i
  %18 = icmp slt i32 %.0245.i, 0
  %add_tmp.i.i = add nuw nsw i32 %.0245.i, 15
  %div_tmp.i.i = lshr i32 %add_tmp.i.i, 4
  %.0255.i = select i1 %18, i32 0, i32 %div_tmp.i.i
  %mul_tmp.i.i.i = mul i32 %.0255.i, 1262608
  %rshift_tmp.i.i.i = lshr i32 %mul_tmp.i.i.i, 18
  %19 = trunc i32 %rshift_tmp.i.i.i to i16
  %div_tmp.lhs.trunc.i.i = add nuw nsw i16 %19, 25
  %div_tmp2.i.i = udiv i16 %div_tmp.lhs.trunc.i.i, 9
  %div_tmp.zext.i.i = zext i16 %div_tmp2.i.i to i64
  %mul_tmp.i.i = shl nuw nsw i32 %.0255.i, 4
  %lshift_tmp.i = shl nuw nsw i64 %.0248.i, 8
  %20 = zext i32 %.0255.i to i64
  %21 = getelementptr [64 x i16], [64 x i16]* @std.ryu.POW10_OFFSET, i64 0, i64 %20
  %load_tmp79.i = load i16, i16* %21, align 2
  %cast_tmp80.i = zext i16 %load_tmp79.i to i64
  %sub_tmp76.i = sub nsw i32 128, %.0245.i
  %add_tmp84.i = add i32 %sub_tmp76.i, %mul_tmp.i.i
  %22 = zext i16 %div_tmp2.i.i to i64
  br label %for.outer.i

for.outer.i:                                      ; preds = %endif106.i, %for.lr.ph.i
  %indvars.iv.in.ph.i = phi i64 [ %indvars.iv.i, %endif106.i ], [ %22, %for.lr.ph.i ]
  %.0262352.in.ph.i = phi i64 [ %indvars.iv.next, %endif106.i ], [ %div_tmp.zext.i.i, %for.lr.ph.i ]
  %.1251350.ph.i = phi i32 [ %.2.i, %endif106.i ], [ %.0250.i, %for.lr.ph.i ]
  %.0252349.ph.i = phi i1 [ true, %endif106.i ], [ false, %for.lr.ph.i ]
  %23 = and i64 %.0262352.in.ph.i, 4294967295
  br label %for.i

for.i:                                            ; preds = %endif106.thread.i, %for.outer.i
  %indvars.iv = phi i64 [ %indvars.iv.next, %endif106.thread.i ], [ %23, %for.outer.i ]
  %indvars.iv.in.i = phi i64 [ %indvars.iv.i, %endif106.thread.i ], [ %indvars.iv.in.ph.i, %for.outer.i ]
  %.0252349.i = phi i1 [ false, %endif106.thread.i ], [ %.0252349.ph.i, %for.outer.i ]
  %indvars.iv.i = add nsw i64 %indvars.iv.in.i, -1
  %indvars.iv.next = add i64 %indvars.iv, -1
  %add_tmp82.i = add i64 %indvars.iv.next, %cast_tmp80.i
  %sext = shl i64 %add_tmp82.i, 32
  %24 = ashr exact i64 %sext, 32
  %25 = getelementptr [1224 x [3 x i64]], [1224 x [3 x i64]]* @std.ryu.POW10_SPLIT, i64 0, i64 %24, i64 0
  %.val.i = load i64, i64* %25, align 8
  %.idx.i = getelementptr [1224 x [3 x i64]], [1224 x [3 x i64]]* @std.ryu.POW10_SPLIT, i64 0, i64 %24, i64 1
  %.idx.val.i = load i64, i64* %.idx.i, align 8
  %.idx275.i = getelementptr [1224 x [3 x i64]], [1224 x [3 x i64]]* @std.ryu.POW10_SPLIT, i64 0, i64 %24, i64 2
  %.idx275.val.i = load i64, i64* %.idx275.i, align 8
  %26 = tail call fastcc i32 @func.std.ryu.mulShift_mod1e9..3.builtin.uint64.0P.const.builtin.uint64.builtin.int32.builtin.uint32(i64 %lshift_tmp.i, i64 %.val.i, i64 %.idx.val.i, i64 %.idx275.val.i, i32 %add_tmp84.i) #8
  br i1 %.0252349.i, label %then86.i, label %else93.i

then86.i:                                         ; preds = %for.i
  %27 = sext i32 %.1251350.ph.i to i64
  %ptr_add_tmp90.i = getelementptr i8, i8* %2, i64 %27
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %then.i282.i, label %for_condition_check.preheader.i.i

for_condition_check.preheader.i.i:                ; preds = %then86.i
  %ptr_add_tmp.i.i = getelementptr i8, i8* %ptr_add_tmp90.i, i64 7
  %ptr_add_tmp17.i.i = getelementptr i8, i8* %ptr_add_tmp90.i, i64 5
  %div_tmp.i280.i = udiv i32 %26, 10000
  %mul_tmp.neg.i.i = mul i32 %div_tmp.i280.i, -10000
  %sub_tmp.i.i = add i32 %mul_tmp.neg.i.i, %26
  %mod_tmp.i.i = urem i32 %sub_tmp.i.i, 100
  %lshift_tmp.i.i = shl nuw nsw i32 %mod_tmp.i.i, 1
  %div_tmp10.i.i = udiv i32 %sub_tmp.i.i, 100
  %lshift_tmp11.i.i = shl nuw nsw i32 %div_tmp10.i.i, 1
  %29 = zext i32 %lshift_tmp.i.i to i64
  %ptr_add_tmp15.i281.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %29
  %30 = bitcast i8* %ptr_add_tmp15.i281.i to i16*
  %31 = bitcast i8* %ptr_add_tmp.i.i to i16*
  %32 = load i16, i16* %30, align 2
  store i16 %32, i16* %31, align 1
  %33 = zext i32 %lshift_tmp11.i.i to i64
  %ptr_add_tmp21.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %33
  %34 = bitcast i8* %ptr_add_tmp21.i.i to i16*
  %35 = bitcast i8* %ptr_add_tmp17.i.i to i16*
  %36 = load i16, i16* %34, align 2
  store i16 %36, i16* %35, align 1
  %div_tmp.1.i.i = udiv i32 %26, 100000000
  %mul_tmp.neg.1.i.i = mul nsw i32 %div_tmp.1.i.i, -10000
  %sub_tmp.1.i.i = add nsw i32 %mul_tmp.neg.1.i.i, %div_tmp.i280.i
  %mod_tmp.1.i.i = urem i32 %sub_tmp.1.i.i, 100
  %lshift_tmp.1.i.i = shl nuw nsw i32 %mod_tmp.1.i.i, 1
  %div_tmp10.1.i.i = udiv i32 %sub_tmp.1.i.i, 100
  %lshift_tmp11.1.i.i = shl nuw nsw i32 %div_tmp10.1.i.i, 1
  %ptr_sub_tmp.1.i.i = getelementptr i8, i8* %ptr_add_tmp90.i, i64 3
  %37 = zext i32 %lshift_tmp.1.i.i to i64
  %ptr_add_tmp15.1.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %37
  %38 = bitcast i8* %ptr_add_tmp15.1.i.i to i16*
  %39 = bitcast i8* %ptr_sub_tmp.1.i.i to i16*
  %40 = load i16, i16* %38, align 2
  store i16 %40, i16* %39, align 1
  %ptr_sub_tmp19.1.i.i = getelementptr i8, i8* %ptr_add_tmp90.i, i64 1
  %41 = zext i32 %lshift_tmp11.1.i.i to i64
  %ptr_add_tmp21.1.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %41
  %42 = bitcast i8* %ptr_add_tmp21.1.i.i to i16*
  %43 = bitcast i8* %ptr_sub_tmp19.1.i.i to i16*
  %44 = load i16, i16* %42, align 2
  store i16 %44, i16* %43, align 1
  %45 = trunc i32 %div_tmp.1.i.i to i8
  %cast_tmp.i.i = add nuw nsw i8 %45, 48
  store i8 %cast_tmp.i.i, i8* %ptr_add_tmp90.i, align 1
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i

then.i282.i:                                      ; preds = %then86.i
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(9) %ptr_add_tmp90.i, i8 48, i64 9, i1 false) #8
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i

func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i: ; preds = %then.i282.i, %for_condition_check.preheader.i.i
  %add_tmp92.i = add i32 %.1251350.ph.i, 9
  br label %endif106.i

else93.i:                                         ; preds = %for.i
  %.not273.i = icmp eq i32 %26, 0
  br i1 %.not273.i, label %endif106.thread.i, label %then95.i

then95.i:                                         ; preds = %else93.i
  %46 = icmp ult i32 %26, 1000000000
  tail call void @llvm.assume(i1 %46) #8
  %47 = icmp ugt i32 %26, 99999999
  br i1 %47, label %while.lr.ph.i.i, label %else.i.i

else.i.i:                                         ; preds = %then95.i
  %48 = icmp ugt i32 %26, 9999999
  br i1 %48, label %while.lr.ph.i.i, label %else4.i.i

else4.i.i:                                        ; preds = %else.i.i
  %49 = icmp ugt i32 %26, 999999
  br i1 %49, label %while.lr.ph.i.i, label %else7.i.i

else7.i.i:                                        ; preds = %else4.i.i
  %50 = icmp ugt i32 %26, 99999
  br i1 %50, label %while.lr.ph.i.i, label %else10.i.i

else10.i.i:                                       ; preds = %else7.i.i
  %51 = icmp ugt i32 %26, 9999
  br i1 %51, label %while.lr.ph.i.i, label %else13.i.i

else13.i.i:                                       ; preds = %else10.i.i
  %52 = icmp ugt i32 %26, 999
  %53 = icmp ugt i32 %26, 99
  %54 = icmp ugt i32 %26, 9
  %..i.i = select i1 %54, i32 2, i32 1
  %55 = select i1 %53, i32 3, i32 %..i.i
  %56 = select i1 %52, i32 4, i32 %55
  %57 = sext i32 %.1251350.ph.i to i64
  %ptr_add_tmp101.i = getelementptr i8, i8* %2, i64 %57
  br label %endwhile.i.i

while.lr.ph.i.i:                                  ; preds = %else10.i.i, %else7.i.i, %else4.i.i, %else.i.i, %then95.i
  %.ph.i = phi i32 [ 5, %else10.i.i ], [ 6, %else7.i.i ], [ 7, %else4.i.i ], [ 8, %else.i.i ], [ 9, %then95.i ]
  %58 = sext i32 %.1251350.ph.i to i64
  %ptr_add_tmp101321.i = getelementptr i8, i8* %2, i64 %58
  %59 = zext i32 %.ph.i to i64
  %ptr_add_tmp.i283.i = getelementptr i8, i8* %ptr_add_tmp101321.i, i64 %59
  br label %while.i.i

endwhile.i.i:                                     ; preds = %while.i.i, %else13.i.i
  %ptr_add_tmp101322.i = phi i8* [ %ptr_add_tmp101.i, %else13.i.i ], [ %ptr_add_tmp101321.i, %while.i.i ]
  %60 = phi i32 [ %56, %else13.i.i ], [ %.ph.i, %while.i.i ]
  %.043.lcssa.i.i = phi i32 [ 0, %else13.i.i ], [ %add_tmp.i289.i, %while.i.i ]
  %.0.lcssa.i.i = phi i32 [ %26, %else13.i.i ], [ %div_tmp.i284.i, %while.i.i ]
  %61 = icmp ugt i32 %.0.lcssa.i.i, 99
  br i1 %61, label %then.i290.i, label %endif.i291.i

while.i.i:                                        ; preds = %while.i.i, %while.lr.ph.i.i
  %.048.i.i = phi i32 [ %26, %while.lr.ph.i.i ], [ %div_tmp.i284.i, %while.i.i ]
  %.04347.i.i = phi i32 [ 0, %while.lr.ph.i.i ], [ %add_tmp.i289.i, %while.i.i ]
  %div_tmp.i284.i = udiv i32 %.048.i.i, 10000
  %mul_tmp.neg.i285.i = mul nsw i32 %div_tmp.i284.i, -10000
  %sub_tmp.i286.i = add i32 %mul_tmp.neg.i285.i, %.048.i.i
  %mod_tmp.i287.i = urem i32 %sub_tmp.i286.i, 100
  %lshift_tmp.i288.i = shl nuw nsw i32 %mod_tmp.i287.i, 1
  %div_tmp7.i.i = udiv i32 %sub_tmp.i286.i, 100
  %lshift_tmp8.i.i = shl nuw nsw i32 %div_tmp7.i.i, 1
  %62 = zext i32 %.04347.i.i to i64
  %63 = sub nsw i64 0, %62
  %ptr_sub_tmp.i.i = getelementptr i8, i8* %ptr_add_tmp.i283.i, i64 %63
  %ptr_sub_tmp12.i.i = getelementptr i8, i8* %ptr_sub_tmp.i.i, i64 -2
  %64 = zext i32 %lshift_tmp.i288.i to i64
  %ptr_add_tmp14.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %64
  %65 = bitcast i8* %ptr_add_tmp14.i.i to i16*
  %66 = bitcast i8* %ptr_sub_tmp12.i.i to i16*
  %67 = load i16, i16* %65, align 2
  store i16 %67, i16* %66, align 1
  %ptr_sub_tmp20.i.i = getelementptr i8, i8* %ptr_sub_tmp.i.i, i64 -4
  %68 = zext i32 %lshift_tmp8.i.i to i64
  %ptr_add_tmp22.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %68
  %69 = bitcast i8* %ptr_add_tmp22.i.i to i16*
  %70 = bitcast i8* %ptr_sub_tmp20.i.i to i16*
  %71 = load i16, i16* %69, align 2
  store i16 %71, i16* %70, align 1
  %add_tmp.i289.i = add i32 %.04347.i.i, 4
  %72 = icmp ugt i32 %.048.i.i, 99999999
  br i1 %72, label %while.i.i, label %endwhile.i.i

then.i290.i:                                      ; preds = %endwhile.i.i
  %mod_tmp26.lhs.trunc.i.i = trunc i32 %.0.lcssa.i.i to i16
  %mod_tmp2645.i.i = urem i16 %mod_tmp26.lhs.trunc.i.i, 100
  %73 = shl nuw nsw i16 %mod_tmp2645.i.i, 1
  %div_tmp2946.i.i = udiv i16 %mod_tmp26.lhs.trunc.i.i, 100
  %div_tmp29.zext.i.i = zext i16 %div_tmp2946.i.i to i32
  %74 = zext i32 %60 to i64
  %ptr_add_tmp32.i.i = getelementptr i8, i8* %ptr_add_tmp101322.i, i64 -2
  %75 = zext i32 %.043.lcssa.i.i to i64
  %76 = sub nsw i64 0, %75
  %ptr_sub_tmp34.i.i = getelementptr i8, i8* %ptr_add_tmp32.i.i, i64 %74
  %ptr_sub_tmp35.i.i = getelementptr i8, i8* %ptr_sub_tmp34.i.i, i64 %76
  %77 = zext i16 %73 to i64
  %ptr_add_tmp37.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %77
  %78 = bitcast i8* %ptr_add_tmp37.i.i to i16*
  %79 = bitcast i8* %ptr_sub_tmp35.i.i to i16*
  %80 = load i16, i16* %78, align 2
  store i16 %80, i16* %79, align 1
  %add_tmp39.i.i = or i32 %.043.lcssa.i.i, 2
  br label %endif.i291.i

endif.i291.i:                                     ; preds = %then.i290.i, %endwhile.i.i
  %.144.i.i = phi i32 [ %add_tmp39.i.i, %then.i290.i ], [ %.043.lcssa.i.i, %endwhile.i.i ]
  %.1.i.i = phi i32 [ %div_tmp29.zext.i.i, %then.i290.i ], [ %.0.lcssa.i.i, %endwhile.i.i ]
  %81 = icmp ugt i32 %.1.i.i, 9
  br i1 %81, label %then41.i.i, label %else.i293.i

then41.i.i:                                       ; preds = %endif.i291.i
  %lshift_tmp43.i.i = shl nuw nsw i32 %.1.i.i, 1
  %82 = zext i32 %60 to i64
  %ptr_add_tmp46.i.i = getelementptr i8, i8* %ptr_add_tmp101322.i, i64 -2
  %83 = zext i32 %.144.i.i to i64
  %84 = sub nsw i64 0, %83
  %ptr_sub_tmp48.i.i = getelementptr i8, i8* %ptr_add_tmp46.i.i, i64 %82
  %ptr_sub_tmp49.i.i = getelementptr i8, i8* %ptr_sub_tmp48.i.i, i64 %84
  %85 = zext i32 %lshift_tmp43.i.i to i64
  %ptr_add_tmp51.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %85
  %86 = bitcast i8* %ptr_add_tmp51.i.i to i16*
  %87 = bitcast i8* %ptr_sub_tmp49.i.i to i16*
  %88 = load i16, i16* %86, align 2
  store i16 %88, i16* %87, align 1
  br label %func.std.ryu.append_n_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i

else.i293.i:                                      ; preds = %endif.i291.i
  %89 = trunc i32 %.1.i.i to i8
  %cast_tmp.i292.i = add nuw nsw i8 %89, 48
  store i8 %cast_tmp.i292.i, i8* %ptr_add_tmp101322.i, align 1
  br label %func.std.ryu.append_n_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i

func.std.ryu.append_n_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i: ; preds = %else.i293.i, %then41.i.i
  %add_tmp104.i = add i32 %60, %.1251350.ph.i
  br label %endif106.i

endif106.i:                                       ; preds = %func.std.ryu.append_n_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i
  %.2.i = phi i32 [ %add_tmp92.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit.i ], [ %add_tmp104.i, %func.std.ryu.append_n_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit.i ]
  %90 = icmp sgt i64 %indvars.iv.in.i, 1
  br i1 %90, label %for.outer.i, label %endif115.i

endif106.thread.i:                                ; preds = %else93.i
  %91 = icmp ugt i64 %indvars.iv.in.i, 1
  br i1 %91, label %for.i, label %then110.i

then110.i:                                        ; preds = %endif106.thread.i, %endif60.i
  %.3326.i = phi i32 [ %.0250.i, %endif60.i ], [ %.1251350.ph.i, %endif106.thread.i ]
  %92 = sext i32 %.3326.i to i64
  %ptr_add_tmp113.i = getelementptr i8, i8* %2, i64 %92
  store i8 48, i8* %ptr_add_tmp113.i, align 1
  %93 = add i32 %.3326.i, 1
  br label %endif115.i

endif115.i:                                       ; preds = %endif106.i, %then110.i
  %.4.i = phi i32 [ %93, %then110.i ], [ %.2.i, %endif106.i ]
  %.not.i = icmp eq i32 %1, 0
  br i1 %.not.i, label %endif122.i, label %then117.i

then117.i:                                        ; preds = %endif115.i
  %94 = sext i32 %.4.i to i64
  %ptr_add_tmp120.i = getelementptr i8, i8* %2, i64 %94
  store i8 46, i8* %ptr_add_tmp120.i, align 1
  %95 = add i32 %.4.i, 1
  br label %endif122.i

endif122.i:                                       ; preds = %then117.i, %endif115.i
  %.5.i = phi i32 [ %95, %then117.i ], [ %.4.i, %endif115.i ]
  %96 = icmp slt i32 %.0245.i, 0
  br i1 %96, label %then124.i, label %else328.i

then124.i:                                        ; preds = %endif122.i
  %div_tmp334.i = lshr i32 %.0245.nonneg.i, 4
  %div_tmp127.i = udiv i32 %1, 9
  %97 = zext i32 %div_tmp334.i to i64
  %98 = getelementptr [69 x i8], [69 x i8]* @std.ryu.MIN_BLOCK_2, i64 0, i64 %97
  %load_tmp131.i = load i8, i8* %98, align 1
  %cast_tmp132.i = zext i8 %load_tmp131.i to i32
  %.not266.not.i = icmp ult i32 %div_tmp127.i, %cast_tmp132.i
  br i1 %.not266.not.i, label %endif162.thread.i, label %else143.i

endif162.thread.i:                                ; preds = %then124.i
  %99 = sext i32 %.5.i to i64
  %ptr_add_tmp137.i = getelementptr i8, i8* %2, i64 %99
  %cast_tmp139.i = zext i32 %1 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp137.i, i8 48, i64 %cast_tmp139.i, i1 false) #8
  %add_tmp142.i = add i32 %.5.i, %1
  br label %endif341.i

else143.i:                                        ; preds = %then124.i
  %100 = add nsw i64 %97, -68
  %.not267.i = icmp ult i64 %100, -62
  br i1 %.not267.i, label %for169.lr.ph.i, label %endif162.i

endif162.i:                                       ; preds = %else143.i
  %101 = sext i32 %.5.i to i64
  %ptr_add_tmp154.i = getelementptr i8, i8* %2, i64 %101
  %mul_tmp.i = mul nuw nsw i32 %cast_tmp132.i, 9
  %cast_tmp156.i = zext i32 %mul_tmp.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp154.i, i8 48, i64 %cast_tmp156.i, i1 false) #8
  %add_tmp160.i = add i32 %mul_tmp.i, %.5.i
  br label %for169.lr.ph.i

for169.lr.ph.i:                                   ; preds = %endif162.i, %else143.i
  %.6399.i = phi i32 [ %add_tmp160.i, %endif162.i ], [ %.5.i, %else143.i ]
  %.0256398.i = phi i32 [ %cast_tmp132.i, %endif162.i ], [ 0, %else143.i ]
  %102 = getelementptr [69 x i16], [69 x i16]* @std.ryu.POW10_OFFSET_2, i64 0, i64 %97
  %load_tmp177.i = load i16, i16* %102, align 2
  %cast_tmp178.i = zext i16 %load_tmp177.i to i32
  %add_tmp187.i = add nuw nsw i32 %div_tmp334.i, 1
  %103 = zext i32 %add_tmp187.i to i64
  %104 = getelementptr [69 x i16], [69 x i16]* @std.ryu.POW10_OFFSET_2, i64 0, i64 %103
  %load_tmp188.i = load i16, i16* %104, align 2
  %cast_tmp189.i = zext i16 %load_tmp188.i to i32
  %mul_tmp173.neg.i = mul i32 %div_tmp334.i, -16
  %lshift_tmp205.i = shl nuw nsw i64 %.0248.i, 8
  %sub_tmp174.i = sub nsw i32 128, %.0245.i
  %add_tmp208.i = add i32 %sub_tmp174.i, %mul_tmp173.neg.i
  %105 = zext i32 %.0256398.i to i64
  %106 = zext i32 %div_tmp127.i to i64
  %add_tmp180.i39 = sub nsw i32 %.0256398.i, %cast_tmp132.i
  %sub_tmp184.i40 = add nsw i32 %add_tmp180.i39, %cast_tmp178.i
  %.not270.i41 = icmp ult i32 %sub_tmp184.i40, %cast_tmp189.i
  br i1 %.not270.i41, label %endif203.i.preheader, label %then190.i

endif203.i.preheader:                             ; preds = %for169.lr.ph.i
  %107 = zext i32 %sub_tmp184.i40 to i64
  br label %endif203.i

endfor165.i:                                      ; preds = %func.std.ryu.append_c_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit, %endif256.i
  %.8.i = phi i32 [ %add_tmp266.i, %func.std.ryu.append_c_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit ], [ %.7356.i43, %endif256.i ]
  %.not269.i = icmp eq i32 %.2260.i, 0
  br i1 %.not269.i, label %endif341.i, label %while_condition_check.outer.i

then190.i:                                        ; preds = %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i, %for169.lr.ph.i
  %indvars.iv381.i.lcssa = phi i64 [ %105, %for169.lr.ph.i ], [ %indvars.iv.next382.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i ]
  %.7356.i.lcssa = phi i32 [ %.6399.i, %for169.lr.ph.i ], [ %add_tmp218.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i ]
  %indvars383.i.le = trunc i64 %indvars.iv381.i.lcssa to i32
  %mul_tmp193.neg.i = mul i32 %indvars383.i.le, -9
  %sub_tmp194.i = add i32 %mul_tmp193.neg.i, %1
  %108 = sext i32 %.7356.i.lcssa to i64
  %ptr_add_tmp197.i = getelementptr i8, i8* %2, i64 %108
  %cast_tmp199.i = zext i32 %sub_tmp194.i to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp197.i, i8 48, i64 %cast_tmp199.i, i1 false) #8
  %add_tmp202.i = add i32 %sub_tmp194.i, %.7356.i.lcssa
  br label %endif341.i

endif203.i:                                       ; preds = %endif203.i.preheader, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i
  %indvars.iv72 = phi i64 [ %107, %endif203.i.preheader ], [ %indvars.iv.next73, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i ]
  %.7356.i43 = phi i32 [ %.6399.i, %endif203.i.preheader ], [ %add_tmp218.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i ]
  %indvars.iv381.i42 = phi i64 [ %105, %endif203.i.preheader ], [ %indvars.iv.next382.i, %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i ]
  %109 = getelementptr [3133 x [3 x i64]], [3133 x [3 x i64]]* @std.ryu.POW10_SPLIT_2, i64 0, i64 %indvars.iv72, i64 0
  %.val276.i = load i64, i64* %109, align 8
  %.idx277.i = getelementptr [3133 x [3 x i64]], [3133 x [3 x i64]]* @std.ryu.POW10_SPLIT_2, i64 0, i64 %indvars.iv72, i64 1
  %.idx277.val.i = load i64, i64* %.idx277.i, align 8
  %.idx278.i = getelementptr [3133 x [3 x i64]], [3133 x [3 x i64]]* @std.ryu.POW10_SPLIT_2, i64 0, i64 %indvars.iv72, i64 2
  %.idx278.val.i = load i64, i64* %.idx278.i, align 8
  %110 = tail call fastcc i32 @func.std.ryu.mulShift_mod1e9..3.builtin.uint64.0P.const.builtin.uint64.builtin.int32.builtin.uint32(i64 %lshift_tmp205.i, i64 %.val276.i, i64 %.idx277.val.i, i64 %.idx278.val.i, i32 %add_tmp208.i) #8
  %exitcond.not.i = icmp eq i64 %indvars.iv381.i42, %106
  br i1 %exitcond.not.i, label %else219.i, label %then212.i

then212.i:                                        ; preds = %endif203.i
  %111 = sext i32 %.7356.i43 to i64
  %ptr_add_tmp216.i = getelementptr i8, i8* %2, i64 %111
  %112 = icmp eq i32 %110, 0
  br i1 %112, label %then.i318.i, label %for_condition_check.preheader.i317.i

for_condition_check.preheader.i317.i:             ; preds = %then212.i
  %ptr_add_tmp.i294.i = getelementptr i8, i8* %ptr_add_tmp216.i, i64 7
  %ptr_add_tmp17.i295.i = getelementptr i8, i8* %ptr_add_tmp216.i, i64 5
  %div_tmp.i296.i = udiv i32 %110, 10000
  %mul_tmp.neg.i297.i = mul i32 %div_tmp.i296.i, -10000
  %sub_tmp.i298.i = add i32 %mul_tmp.neg.i297.i, %110
  %mod_tmp.i299.i = urem i32 %sub_tmp.i298.i, 100
  %lshift_tmp.i300.i = shl nuw nsw i32 %mod_tmp.i299.i, 1
  %div_tmp10.i301.i = udiv i32 %sub_tmp.i298.i, 100
  %lshift_tmp11.i302.i = shl nuw nsw i32 %div_tmp10.i301.i, 1
  %113 = zext i32 %lshift_tmp.i300.i to i64
  %ptr_add_tmp15.i303.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %113
  %114 = bitcast i8* %ptr_add_tmp15.i303.i to i16*
  %115 = bitcast i8* %ptr_add_tmp.i294.i to i16*
  %116 = load i16, i16* %114, align 2
  store i16 %116, i16* %115, align 1
  %117 = zext i32 %lshift_tmp11.i302.i to i64
  %ptr_add_tmp21.i304.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %117
  %118 = bitcast i8* %ptr_add_tmp21.i304.i to i16*
  %119 = bitcast i8* %ptr_add_tmp17.i295.i to i16*
  %120 = load i16, i16* %118, align 2
  store i16 %120, i16* %119, align 1
  %div_tmp.1.i305.i = udiv i32 %110, 100000000
  %mul_tmp.neg.1.i306.i = mul nsw i32 %div_tmp.1.i305.i, -10000
  %sub_tmp.1.i307.i = add nsw i32 %mul_tmp.neg.1.i306.i, %div_tmp.i296.i
  %mod_tmp.1.i308.i = urem i32 %sub_tmp.1.i307.i, 100
  %lshift_tmp.1.i309.i = shl nuw nsw i32 %mod_tmp.1.i308.i, 1
  %div_tmp10.1.i310.i = udiv i32 %sub_tmp.1.i307.i, 100
  %lshift_tmp11.1.i311.i = shl nuw nsw i32 %div_tmp10.1.i310.i, 1
  %ptr_sub_tmp.1.i312.i = getelementptr i8, i8* %ptr_add_tmp216.i, i64 3
  %121 = zext i32 %lshift_tmp.1.i309.i to i64
  %ptr_add_tmp15.1.i313.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %121
  %122 = bitcast i8* %ptr_add_tmp15.1.i313.i to i16*
  %123 = bitcast i8* %ptr_sub_tmp.1.i312.i to i16*
  %124 = load i16, i16* %122, align 2
  store i16 %124, i16* %123, align 1
  %ptr_sub_tmp19.1.i314.i = getelementptr i8, i8* %ptr_add_tmp216.i, i64 1
  %125 = zext i32 %lshift_tmp11.1.i311.i to i64
  %ptr_add_tmp21.1.i315.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %125
  %126 = bitcast i8* %ptr_add_tmp21.1.i315.i to i16*
  %127 = bitcast i8* %ptr_sub_tmp19.1.i314.i to i16*
  %128 = load i16, i16* %126, align 2
  store i16 %128, i16* %127, align 1
  %129 = trunc i32 %div_tmp.1.i305.i to i8
  %cast_tmp.i316.i = add nuw nsw i8 %129, 48
  store i8 %cast_tmp.i316.i, i8* %ptr_add_tmp216.i, align 1
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i

then.i318.i:                                      ; preds = %then212.i
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(9) %ptr_add_tmp216.i, i8 48, i64 9, i1 false) #8
  br label %func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i

func.std.ryu.append_nine_digits..2.builtin.uint32.0P.builtin.uint8.void.exit319.i: ; preds = %then.i318.i, %for_condition_check.preheader.i317.i
  %add_tmp218.i = add i32 %.7356.i43, 9
  %indvars.iv.next382.i = add nuw nsw i64 %indvars.iv381.i42, 1
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1
  %indvars = trunc i64 %indvars.iv.next73 to i32
  %.not270.i = icmp ult i32 %indvars, %cast_tmp189.i
  br i1 %.not270.i, label %endif203.i, label %then190.i

else219.i:                                        ; preds = %endif203.i
  %mul_tmp222.neg.i = mul i32 %div_tmp127.i, -9
  %sub_tmp223.i = add i32 %mul_tmp222.neg.i, %1
  %.not365.i = icmp eq i32 %sub_tmp223.i, 9
  br i1 %.not365.i, label %then236.i, label %for231.preheader.i

for231.preheader.i:                               ; preds = %else219.i
  %sub_tmp229.i = sub i32 9, %sub_tmp223.i
  br label %for231.i

endfor226.i:                                      ; preds = %for231.i
  %.not271.i = icmp eq i32 %mod_tmp.le.i, 5
  br i1 %.not271.i, label %else239.i, label %then236.i

for231.i:                                         ; preds = %for231.i, %for231.preheader.i
  %.0246359.i = phi i32 [ %130, %for231.i ], [ 0, %for231.preheader.i ]
  %.0249358.i = phi i32 [ %div_tmp234.i, %for231.i ], [ %110, %for231.preheader.i ]
  %div_tmp234.i = udiv i32 %.0249358.i, 10
  %mod_tmp.le.i = urem i32 %.0249358.i, 10
  %130 = add nuw i32 %.0246359.i, 1
  %exitcond384.not.i = icmp eq i32 %130, %sub_tmp229.i
  br i1 %exitcond384.not.i, label %endfor226.i, label %for231.i

then236.i:                                        ; preds = %endfor226.i, %else219.i
  %.0247.lcssa405.i = phi i32 [ %mod_tmp.le.i, %endfor226.i ], [ 0, %else219.i ]
  %.0249.lcssa404.i = phi i32 [ %div_tmp234.i, %endfor226.i ], [ %110, %else219.i ]
  %131 = icmp ugt i32 %.0247.lcssa405.i, 5
  %cast_tmp238.i = zext i1 %131 to i32
  br label %endif256.i

else239.i:                                        ; preds = %endfor226.i
  %132 = add i32 %.0245.i, %1
  %sub_tmp244.i = xor i32 %132, -1
  %133 = icmp sgt i32 %132, -2
  br i1 %133, label %bool_or_end.thread.i, label %bool_or_rhs.i

bool_or_rhs.i:                                    ; preds = %else239.i
  %134 = icmp ugt i32 %132, -61
  br i1 %134, label %bool_or_end.i, label %endif256.i

bool_or_end.i:                                    ; preds = %bool_or_rhs.i
  %135 = icmp ne i64 %.0248.i, 0
  tail call void @llvm.assume(i1 %135) #8
  %136 = zext i32 %sub_tmp244.i to i64
  %notmask.i.i = shl nsw i64 -1, %136
  %sub_tmp.i320.i = xor i64 %notmask.i.i, -1
  %bit_and_tmp.i.i = and i64 %.0248.i, %sub_tmp.i320.i
  %137 = icmp eq i64 %bit_and_tmp.i.i, 0
  br i1 %137, label %bool_or_end.thread.i, label %endif256.i

bool_or_end.thread.i:                             ; preds = %bool_or_end.i, %else239.i
  br label %endif256.i

endif256.i:                                       ; preds = %bool_or_end.thread.i, %bool_or_end.i, %bool_or_rhs.i, %then236.i
  %.0249.lcssa403.i = phi i32 [ %.0249.lcssa404.i, %then236.i ], [ %div_tmp234.i, %bool_or_end.thread.i ], [ %div_tmp234.i, %bool_or_end.i ], [ %div_tmp234.i, %bool_or_rhs.i ]
  %.2260.i = phi i32 [ %cast_tmp238.i, %then236.i ], [ 2, %bool_or_end.thread.i ], [ 1, %bool_or_end.i ], [ 1, %bool_or_rhs.i ]
  %.not272.i = icmp eq i32 %sub_tmp223.i, 0
  br i1 %.not272.i, label %endfor165.i, label %then258.i

then258.i:                                        ; preds = %endif256.i
  %138 = sext i32 %.7356.i43 to i64
  %ptr_add_tmp263.i = getelementptr i8, i8* %2, i64 %138
  %sub_tmp.i = add i32 %sub_tmp223.i, -1
  %.not.i8 = icmp eq i32 %sub_tmp.i, 0
  br i1 %.not.i8, label %endfor.i, label %for.lr.ph.i10

for.lr.ph.i10:                                    ; preds = %then258.i
  %139 = zext i32 %sub_tmp223.i to i64
  %ptr_add_tmp.i = getelementptr i8, i8* %ptr_add_tmp263.i, i64 %139
  %ptr_sub_tmp.i9 = getelementptr i8, i8* %ptr_add_tmp.i, i64 -2
  br label %for.i13

endfor.i:                                         ; preds = %for.i13, %then258.i
  %.025.lcssa.i = phi i32 [ 0, %then258.i ], [ %add_tmp.i12, %for.i13 ]
  %.0.lcssa.i = phi i32 [ %.0249.lcssa403.i, %then258.i ], [ %div_tmp.i, %for.i13 ]
  %140 = icmp ult i32 %.025.lcssa.i, %sub_tmp223.i
  br i1 %140, label %then.i15, label %func.std.ryu.append_c_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit

for.i13:                                          ; preds = %for.i13, %for.lr.ph.i10
  %.028.i = phi i32 [ %.0249.lcssa403.i, %for.lr.ph.i10 ], [ %div_tmp.i, %for.i13 ]
  %.02527.i = phi i32 [ 0, %for.lr.ph.i10 ], [ %add_tmp.i12, %for.i13 ]
  %mod_tmp.i = urem i32 %.028.i, 100
  %lshift_tmp.i11 = shl nuw nsw i32 %mod_tmp.i, 1
  %div_tmp.i = udiv i32 %.028.i, 100
  %141 = zext i32 %.02527.i to i64
  %142 = sub nsw i64 0, %141
  %ptr_sub_tmp8.i = getelementptr i8, i8* %ptr_sub_tmp.i9, i64 %142
  %143 = zext i32 %lshift_tmp.i11 to i64
  %ptr_add_tmp10.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %143
  %144 = bitcast i8* %ptr_add_tmp10.i to i16*
  %145 = bitcast i8* %ptr_sub_tmp8.i to i16*
  %146 = load i16, i16* %144, align 2
  store i16 %146, i16* %145, align 1
  %add_tmp.i12 = add i32 %.02527.i, 2
  %147 = icmp ult i32 %add_tmp.i12, %sub_tmp.i
  br i1 %147, label %for.i13, label %endfor.i

then.i15:                                         ; preds = %endfor.i
  %mod_tmp14.i = urem i32 %.0.lcssa.i, 10
  %148 = trunc i32 %mod_tmp14.i to i8
  %cast_tmp.i14 = or i8 %148, 48
  %149 = zext i32 %sub_tmp223.i to i64
  %ptr_add_tmp19.i = getelementptr i8, i8* %ptr_add_tmp263.i, i64 %149
  %150 = zext i32 %.025.lcssa.i to i64
  %151 = sub nsw i64 0, %150
  %ptr_sub_tmp21.i = getelementptr i8, i8* %ptr_add_tmp19.i, i64 %151
  %ptr_sub_tmp22.i = getelementptr i8, i8* %ptr_sub_tmp21.i, i64 -1
  store i8 %cast_tmp.i14, i8* %ptr_sub_tmp22.i, align 1
  br label %func.std.ryu.append_c_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit

func.std.ryu.append_c_digits..3.builtin.uint32.builtin.uint32.0P.builtin.uint8.void.exit: ; preds = %endfor.i, %then.i15
  %add_tmp266.i = add i32 %.7356.i43, %sub_tmp223.i
  br label %endfor165.i

while_condition_check.i:                          ; preds = %while_condition_check.outer.i, %bool_or_rhs274.i
  %.0243.i = phi i32 [ %152, %bool_or_rhs274.i ], [ %.0243.ph.i, %while_condition_check.outer.i ]
  %.0.i = phi i32 [ %152, %bool_or_rhs274.i ], [ %.0.ph.i, %while_condition_check.outer.i ]
  %152 = add i32 %.0243.i, -1
  %153 = icmp eq i32 %.0243.i, 0
  br i1 %153, label %then283.i, label %bool_or_rhs274.i

bool_or_rhs274.i:                                 ; preds = %while_condition_check.i
  %154 = sext i32 %152 to i64
  %ptr_add_tmp277.i = getelementptr i8, i8* %2, i64 %154
  %load_tmp278.i = load i8, i8* %ptr_add_tmp277.i, align 1
  switch i8 %load_tmp278.i, label %else312.i [
    i8 45, label %then283.i
    i8 46, label %while_condition_check.i
    i8 57, label %then308.i
  ]

then283.i:                                        ; preds = %bool_or_rhs274.i, %while_condition_check.i
  %.lcssa.i = phi i64 [ -1, %while_condition_check.i ], [ %154, %bool_or_rhs274.i ]
  %ptr_add_tmp286.i = getelementptr i8, i8* %2, i64 %.lcssa.i
  %ptr_add_tmp287.i = getelementptr i8, i8* %ptr_add_tmp286.i, i64 1
  store i8 49, i8* %ptr_add_tmp287.i, align 1
  %155 = icmp sgt i32 %.0.i, 0
  br i1 %155, label %then289.i, label %endif297.i

then289.i:                                        ; preds = %then283.i
  %156 = zext i32 %.0.i to i64
  %ptr_add_tmp292.i = getelementptr i8, i8* %2, i64 %156
  store i8 48, i8* %ptr_add_tmp292.i, align 1
  %ptr_add_tmp296.i = getelementptr i8, i8* %ptr_add_tmp292.i, i64 1
  store i8 46, i8* %ptr_add_tmp296.i, align 1
  br label %endif297.i

endif297.i:                                       ; preds = %then289.i, %then283.i
  %157 = sext i32 %.8.i to i64
  %ptr_add_tmp300.i = getelementptr i8, i8* %2, i64 %157
  store i8 48, i8* %ptr_add_tmp300.i, align 1
  %158 = add i32 %.8.i, 1
  br label %endif341.i

then308.i:                                        ; preds = %bool_or_rhs274.i
  %ptr_add_tmp277.i.le = getelementptr i8, i8* %2, i64 %154
  store i8 48, i8* %ptr_add_tmp277.i.le, align 1
  br label %while_condition_check.outer.i

while_condition_check.outer.i:                    ; preds = %endfor165.i, %then308.i
  %.3261.ph.i = phi i32 [ 1, %then308.i ], [ %.2260.i, %endfor165.i ]
  %.0243.ph.i = phi i32 [ %152, %then308.i ], [ %.8.i, %endfor165.i ]
  %.0.ph.i = phi i32 [ %.0.i, %then308.i ], [ 0, %endfor165.i ]
  br label %while_condition_check.i

else312.i:                                        ; preds = %bool_or_rhs274.i
  %159 = icmp eq i32 %.3261.ph.i, 2
  %160 = and i8 %load_tmp278.i, 1
  %161 = icmp eq i8 %160, 0
  %or.cond.i = select i1 %159, i1 %161, i1 false
  br i1 %or.cond.i, label %endif341.i, label %endif320.i

endif320.i:                                       ; preds = %else312.i
  %ptr_add_tmp277.i.le98 = getelementptr i8, i8* %2, i64 %154
  %add_tmp322.i = add i8 %load_tmp278.i, 1
  store i8 %add_tmp322.i, i8* %ptr_add_tmp277.i.le98, align 1
  br label %endif341.i

else328.i:                                        ; preds = %endif122.i
  br i1 %3, label %while_condition_check344.preheader.i, label %endif341.thread.i

endif341.thread.i:                                ; preds = %else328.i
  %162 = sext i32 %.5.i to i64
  %ptr_add_tmp334.i = getelementptr i8, i8* %2, i64 %162
  %cast_tmp336.i = zext i32 %1 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp334.i, i8 48, i64 %cast_tmp336.i, i1 false) #8
  %add_tmp339.i = add i32 %.5.i, %1
  br label %endif363.i

endif341.i:                                       ; preds = %endif320.i, %else312.i, %endif297.i, %then190.i, %endfor165.i, %endif162.thread.i
  %.12.i = phi i32 [ %.8.i, %endfor165.i ], [ %158, %endif297.i ], [ %.8.i, %endif320.i ], [ %.8.i, %else312.i ], [ %add_tmp202.i, %then190.i ], [ %add_tmp142.i, %endif162.thread.i ]
  br i1 %3, label %while_condition_check344.preheader.i, label %endif363.i

while_condition_check344.preheader.i:             ; preds = %endif341.i, %else328.i
  %.12408.i = phi i32 [ %.12.i, %endif341.i ], [ %.5.i, %else328.i ]
  %ptr_add_tmp348.i = getelementptr i8, i8* %2, i64 -1
  br label %while_condition_check344.i

while_condition_check344.i:                       ; preds = %while_condition_check344.i, %while_condition_check344.preheader.i
  %.13.i = phi i32 [ %165, %while_condition_check344.i ], [ %.12408.i, %while_condition_check344.preheader.i ]
  %163 = sext i32 %.13.i to i64
  %ptr_sub_tmp.i = getelementptr i8, i8* %ptr_add_tmp348.i, i64 %163
  %load_tmp349.i = load i8, i8* %ptr_sub_tmp.i, align 1
  %164 = icmp eq i8 %load_tmp349.i, 48
  %165 = add i32 %.13.i, -1
  br i1 %164, label %while_condition_check344.i, label %endwhile345.i

endwhile345.i:                                    ; preds = %while_condition_check344.i
  %166 = icmp sgt i32 %.13.i, 0
  tail call void @llvm.assume(i1 %166) #8
  %167 = icmp eq i8 %load_tmp349.i, 46
  %168 = sext i1 %167 to i32
  %spec.select.i = add nsw i32 %.13.i, %168
  br label %endif363.i

endif363.i:                                       ; preds = %endwhile345.i, %endif341.i, %endif341.thread.i
  %.14.i = phi i32 [ %.12.i, %endif341.i ], [ %spec.select.i, %endwhile345.i ], [ %add_tmp339.i, %endif341.thread.i ]
  %169 = sext i32 %.14.i to i64
  %ptr_add_tmp366.i = getelementptr i8, i8* %2, i64 %169
  br label %func.std.ryu.d2fixed_short..4.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.0P.builtin.uint8.exit

func.std.ryu.d2fixed_short..4.builtin.float64.builtin.uint32.0P.builtin.uint8.builtin.bool.0P.builtin.uint8.exit: ; preds = %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i, %endif42.i, %endif363.i
  %common.ret.op.i = phi i8* [ %ptr_add_tmp15.i.i, %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i ], [ %ptr_add_tmp45.i, %endif42.i ], [ %ptr_add_tmp366.i, %endif363.i ]
  ret i8* %common.ret.op.i
}

; Function Attrs: nofree nosync nounwind
define i8* @f2s_short(float %0, i8* %1) local_unnamed_addr #0 {
alloca:
  %2 = bitcast float %0 to i32
  %3 = icmp slt i32 %2, 0
  %bit_and_tmp3.i = and i32 %2, 8388607
  %rshift_tmp5.i = lshr i32 %2, 23
  %bit_and_tmp6.i = and i32 %rshift_tmp5.i, 255
  %4 = icmp eq i32 %bit_and_tmp6.i, 255
  br i1 %4, label %then.i, label %bool_or_rhs.i

bool_or_rhs.i:                                    ; preds = %alloca
  %5 = icmp eq i32 %bit_and_tmp6.i, 0
  %6 = icmp eq i32 %bit_and_tmp3.i, 0
  %bool_and_tmp.i = select i1 %5, i1 %6, i1 false
  br i1 %bool_and_tmp.i, label %endif.i.i, label %endif.i

then.i:                                           ; preds = %alloca
  %.not.i = icmp eq i32 %bit_and_tmp3.i, 0
  br i1 %.not.i, label %endif.i.i, label %then.i.i

then.i.i:                                         ; preds = %then.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %1, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

endif.i.i:                                        ; preds = %then.i, %bool_or_rhs.i
  br i1 %3, label %then4.i.i, label %endif7.i.i

then4.i.i:                                        ; preds = %endif.i.i
  store i8 45, i8* %1, align 1
  %7 = getelementptr i8, i8* %1, i64 1
  br label %endif7.i.i

endif7.i.i:                                       ; preds = %then4.i.i, %endif.i.i
  %.0.i.i = phi i8* [ %7, %then4.i.i ], [ %1, %endif.i.i ]
  br i1 %4, label %then9.i.i, label %else.i.i

then9.i.i:                                        ; preds = %endif7.i.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %.0.i.i, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

else.i.i:                                         ; preds = %endif7.i.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %.0.i.i, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #8
  br label %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i

func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i: ; preds = %else.i.i, %then9.i.i, %then.i.i
  %.0.sink.i.i = phi i8* [ %.0.i.i, %else.i.i ], [ %.0.i.i, %then9.i.i ], [ %1, %then.i.i ]
  %ptr_add_tmp15.i.i = getelementptr i8, i8* %.0.sink.i.i, i64 3
  br label %func.std.ryu.f2s_shortest..2.builtin.float32.0P.builtin.uint8.0P.builtin.uint8.exit

endif.i:                                          ; preds = %bool_or_rhs.i
  %sub_tmp4.i.i = add nsw i32 %bit_and_tmp6.i, -152
  %bit_or_tmp.i.i = or i32 %bit_and_tmp3.i, 8388608
  %.0172.i.i = select i1 %5, i32 %bit_and_tmp3.i, i32 %bit_or_tmp.i.i
  %.0.i28.i = select i1 %5, i32 -151, i32 %sub_tmp4.i.i
  %bit_and_tmp.i.i = and i32 %.0172.i.i, 1
  %8 = icmp eq i32 %bit_and_tmp.i.i, 0
  %mul_tmp.i.i = shl nuw nsw i32 %.0172.i.i, 2
  %add_tmp.i.i = or i32 %mul_tmp.i.i, 2
  %9 = icmp ne i32 %bit_and_tmp3.i, 0
  %10 = icmp ult i32 %bit_and_tmp6.i, 2
  %bool_or_tmp.i.i = select i1 %9, i1 true, i1 %10
  %cast_tmp.neg.i.i = sext i1 %bool_or_tmp.i.i to i32
  %sub_tmp15.i.i = add nsw i32 %mul_tmp.i.i, -1
  %sub_tmp17.i.i = add nsw i32 %sub_tmp15.i.i, %cast_tmp.neg.i.i
  %11 = icmp sgt i32 %.0.i28.i, -1
  br i1 %11, label %then19.i.i, label %else82.i.i

then19.i.i:                                       ; preds = %endif.i
  %mul_tmp.i.i.i = mul nuw nsw i32 %.0.i28.i, 78913
  %rshift_tmp.i.i.i = lshr i32 %mul_tmp.i.i.i, 18
  %mul_tmp.i218.i.i = mul nuw nsw i32 %rshift_tmp.i.i.i, 1217359
  %rshift_tmp.i219.i.i = lshr i32 %mul_tmp.i218.i.i, 19
  %add_tmp27.i.i = sub nsw i32 %rshift_tmp.i.i.i, %.0.i28.i
  %sub_tmp24.i.i = add nsw i32 %add_tmp27.i.i, 59
  %add_tmp29.i.i = add nsw i32 %sub_tmp24.i.i, %rshift_tmp.i219.i.i
  %12 = zext i32 %rshift_tmp.i.i.i to i64
  %13 = getelementptr [55 x i64], [55 x i64]* @std.ryu.FLOAT_POW5_INV_SPLIT, i64 0, i64 %12
  %load_tmp2.i.i.i = load i64, i64* %13, align 8
  %14 = icmp ugt i32 %add_tmp29.i.i, 32
  tail call void @llvm.assume(i1 %14) #8
  %rshift_tmp.i.i.i.i = lshr i64 %load_tmp2.i.i.i, 32
  %cast_tmp5.i.i.i.i = zext i32 %mul_tmp.i.i to i64
  %cast_tmp7.i.i.i.i = and i64 %load_tmp2.i.i.i, 4294967295
  %mul_tmp.i.i.i.i = mul nuw nsw i64 %cast_tmp7.i.i.i.i, %cast_tmp5.i.i.i.i
  %mul_tmp12.i.i.i.i = mul nuw nsw i64 %rshift_tmp.i.i.i.i, %cast_tmp5.i.i.i.i
  %rshift_tmp14.i.i.i.i = lshr i64 %mul_tmp.i.i.i.i, 32
  %add_tmp.i.i.i.i = add nuw nsw i64 %rshift_tmp14.i.i.i.i, %mul_tmp12.i.i.i.i
  %sub_tmp.i.i.i.i = add nsw i32 %add_tmp29.i.i, -32
  %15 = zext i32 %sub_tmp.i.i.i.i to i64
  %rshift_tmp18.i.i.i.i = lshr i64 %add_tmp.i.i.i.i, %15
  %16 = icmp ult i64 %rshift_tmp18.i.i.i.i, 4294967296
  tail call void @llvm.assume(i1 %16) #8
  %cast_tmp5.i.i222.i.i = zext i32 %add_tmp.i.i to i64
  %mul_tmp.i.i224.i.i = mul nuw nsw i64 %cast_tmp7.i.i.i.i, %cast_tmp5.i.i222.i.i
  %mul_tmp12.i.i225.i.i = mul nuw nsw i64 %rshift_tmp.i.i.i.i, %cast_tmp5.i.i222.i.i
  %rshift_tmp14.i.i226.i.i = lshr i64 %mul_tmp.i.i224.i.i, 32
  %add_tmp.i.i227.i.i = add nuw i64 %rshift_tmp14.i.i226.i.i, %mul_tmp12.i.i225.i.i
  %rshift_tmp18.i.i229.i.i = lshr i64 %add_tmp.i.i227.i.i, %15
  %17 = icmp ult i64 %rshift_tmp18.i.i229.i.i, 4294967296
  tail call void @llvm.assume(i1 %17) #8
  %cast_tmp21.i.i230.i.i = trunc i64 %rshift_tmp18.i.i229.i.i to i32
  %cast_tmp5.i.i233.i.i = zext i32 %sub_tmp17.i.i to i64
  %mul_tmp.i.i235.i.i = mul nuw i64 %cast_tmp7.i.i.i.i, %cast_tmp5.i.i233.i.i
  %mul_tmp12.i.i236.i.i = mul nuw i64 %rshift_tmp.i.i.i.i, %cast_tmp5.i.i233.i.i
  %rshift_tmp14.i.i237.i.i = lshr i64 %mul_tmp.i.i235.i.i, 32
  %add_tmp.i.i238.i.i = add nuw i64 %rshift_tmp14.i.i237.i.i, %mul_tmp12.i.i236.i.i
  %rshift_tmp18.i.i240.i.i = lshr i64 %add_tmp.i.i238.i.i, %15
  %18 = icmp ult i64 %rshift_tmp18.i.i240.i.i, 4294967296
  tail call void @llvm.assume(i1 %18) #8
  %cast_tmp21.i.i241.i.i = trunc i64 %rshift_tmp18.i.i240.i.i to i32
  %.not213.i.i = icmp ult i32 %mul_tmp.i.i.i, 262144
  br i1 %.not213.i.i, label %then62.i.i, label %bool_and_rhs.i.i

bool_and_rhs.i.i:                                 ; preds = %then19.i.i
  %sub_tmp41.i.i = add i32 %cast_tmp21.i.i230.i.i, -1
  %div_tmp.i.i = udiv i32 %sub_tmp41.i.i, 10
  %div_tmp43.i.i = udiv i32 %cast_tmp21.i.i241.i.i, 10
  %.not214.i.i = icmp ugt i32 %div_tmp.i.i, %div_tmp43.i.i
  br i1 %.not214.i.i, label %endif60.i.i, label %then44.i.i

then44.i.i:                                       ; preds = %bool_and_rhs.i.i
  %sub_tmp46.i.i = add nsw i32 %rshift_tmp.i.i.i, -1
  %mul_tmp.i242.i.i = mul nuw nsw i32 %sub_tmp46.i.i, 1217359
  %rshift_tmp.i243.i.i = lshr i32 %mul_tmp.i242.i.i, 19
  %add_tmp.i244.i.i = add nsw i32 %add_tmp27.i.i, 1
  %sub_tmp48.i.i = add nsw i32 %add_tmp.i244.i.i, %rshift_tmp.i243.i.i
  %19 = zext i32 %sub_tmp46.i.i to i64
  %20 = getelementptr [55 x i64], [55 x i64]* @std.ryu.FLOAT_POW5_INV_SPLIT, i64 0, i64 %19
  %load_tmp2.i245.i.i = load i64, i64* %20, align 8
  %21 = add nsw i32 %sub_tmp48.i.i, 24
  %22 = icmp ult i32 %21, -33
  tail call void @llvm.assume(i1 %22) #8
  %rshift_tmp.i.i246.i.i = lshr i64 %load_tmp2.i245.i.i, 32
  %cast_tmp7.i.i248.i.i = and i64 %load_tmp2.i245.i.i, 4294967295
  %mul_tmp.i.i249.i.i = mul nuw nsw i64 %cast_tmp7.i.i248.i.i, %cast_tmp5.i.i.i.i
  %mul_tmp12.i.i250.i.i = mul nuw nsw i64 %rshift_tmp.i.i246.i.i, %cast_tmp5.i.i.i.i
  %rshift_tmp14.i.i251.i.i = lshr i64 %mul_tmp.i.i249.i.i, 32
  %add_tmp.i.i252.i.i = add nuw nsw i64 %rshift_tmp14.i.i251.i.i, %mul_tmp12.i.i250.i.i
  %sub_tmp.i.i253.i.i = add nsw i32 %sub_tmp48.i.i, 25
  %23 = zext i32 %sub_tmp.i.i253.i.i to i64
  %rshift_tmp18.i.i254.i.i = lshr i64 %add_tmp.i.i252.i.i, %23
  %24 = icmp ult i64 %rshift_tmp18.i.i254.i.i, 4294967296
  tail call void @llvm.assume(i1 %24) #8
  %cast_tmp21.i.i255.i.i = trunc i64 %rshift_tmp18.i.i254.i.i to i32
  %mod_tmp.i.i = urem i32 %cast_tmp21.i.i255.i.i, 10
  %cast_tmp59.i.i = trunc i32 %mod_tmp.i.i to i8
  br label %endif60.i.i

endif60.i.i:                                      ; preds = %then44.i.i, %bool_and_rhs.i.i
  %.0201.i.i = phi i8 [ %cast_tmp59.i.i, %then44.i.i ], [ 0, %bool_and_rhs.i.i ]
  %25 = icmp ult i32 %mul_tmp.i.i.i, 2621440
  br i1 %25, label %then62.i.i, label %endif145.i.i

then62.i.i:                                       ; preds = %endif60.i.i, %then19.i.i
  %.0201329.i.i = phi i8 [ %.0201.i.i, %endif60.i.i ], [ 0, %then19.i.i ]
  %mod_tmp64.i.i = urem i32 %mul_tmp.i.i, 5
  %26 = icmp eq i32 %mod_tmp64.i.i, 0
  br i1 %26, label %then65.i.i, label %else68.i.i

then65.i.i:                                       ; preds = %then62.i.i
  %27 = icmp ne i32 %.0172.i.i, 0
  tail call void @llvm.assume(i1 %27) #8
  br label %endif.i.i.i.i

endif.i.i.i.i:                                    ; preds = %endif.i.i.i.i, %then65.i.i
  %.020.i.i.i.i = phi i32 [ %div_tmp.i.i.i.i, %endif.i.i.i.i ], [ %mul_tmp.i.i, %then65.i.i ]
  %.01619.i.i.i.i = phi i32 [ %28, %endif.i.i.i.i ], [ 0, %then65.i.i ]
  %div_tmp.i.i.i.i = udiv i32 %.020.i.i.i.i, 5
  %28 = add i32 %.01619.i.i.i.i, 1
  %29 = icmp ugt i32 %.020.i.i.i.i, 4
  tail call void @llvm.assume(i1 %29) #8
  %mod_tmp.i.i.i.i = urem i32 %div_tmp.i.i.i.i, 5
  %.not.i.i.i.i = icmp eq i32 %mod_tmp.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %endif.i.i.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i

func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i: ; preds = %endif.i.i.i.i
  %30 = icmp uge i32 %28, %rshift_tmp.i.i.i
  br label %endif145.i.i

else68.i.i:                                       ; preds = %then62.i.i
  br i1 %8, label %then70.i.i, label %else73.i.i

then70.i.i:                                       ; preds = %else68.i.i
  %31 = icmp ne i32 %sub_tmp17.i.i, 0
  tail call void @llvm.assume(i1 %31) #8
  %mod_tmp17.i.i256.i.i = urem i32 %sub_tmp17.i.i, 5
  %.not18.i.i257.i.i = icmp eq i32 %mod_tmp17.i.i256.i.i, 0
  br i1 %.not18.i.i257.i.i, label %endif.i.i263.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i

endif.i.i263.i.i:                                 ; preds = %then70.i.i, %endif.i.i263.i.i
  %.020.i.i258.i.i = phi i32 [ %div_tmp.i.i260.i.i, %endif.i.i263.i.i ], [ %sub_tmp17.i.i, %then70.i.i ]
  %.01619.i.i259.i.i = phi i32 [ %32, %endif.i.i263.i.i ], [ 0, %then70.i.i ]
  %div_tmp.i.i260.i.i = udiv i32 %.020.i.i258.i.i, 5
  %32 = add i32 %.01619.i.i259.i.i, 1
  %33 = icmp ugt i32 %.020.i.i258.i.i, 4
  tail call void @llvm.assume(i1 %33) #8
  %mod_tmp.i.i261.i.i = urem i32 %div_tmp.i.i260.i.i, 5
  %.not.i.i262.i.i = icmp eq i32 %mod_tmp.i.i261.i.i, 0
  br i1 %.not.i.i262.i.i, label %endif.i.i263.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i

func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i: ; preds = %endif.i.i263.i.i, %then70.i.i
  %.016.lcssa.i.i264.i.i = phi i32 [ 0, %then70.i.i ], [ %32, %endif.i.i263.i.i ]
  %34 = icmp uge i32 %.016.lcssa.i.i264.i.i, %rshift_tmp.i.i.i
  br label %endif145.i.i

else73.i.i:                                       ; preds = %else68.i.i
  %mod_tmp17.i.i266.i.i = urem i32 %add_tmp.i.i, 5
  %.not18.i.i267.i.i = icmp eq i32 %mod_tmp17.i.i266.i.i, 0
  br i1 %.not18.i.i267.i.i, label %endif.i.i273.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i

endif.i.i273.i.i:                                 ; preds = %else73.i.i, %endif.i.i273.i.i
  %.020.i.i268.i.i = phi i32 [ %div_tmp.i.i270.i.i, %endif.i.i273.i.i ], [ %add_tmp.i.i, %else73.i.i ]
  %.01619.i.i269.i.i = phi i32 [ %35, %endif.i.i273.i.i ], [ 0, %else73.i.i ]
  %div_tmp.i.i270.i.i = udiv i32 %.020.i.i268.i.i, 5
  %35 = add i32 %.01619.i.i269.i.i, 1
  %36 = icmp ugt i32 %.020.i.i268.i.i, 4
  tail call void @llvm.assume(i1 %36) #8
  %mod_tmp.i.i271.i.i = urem i32 %div_tmp.i.i270.i.i, 5
  %.not.i.i272.i.i = icmp eq i32 %mod_tmp.i.i271.i.i, 0
  br i1 %.not.i.i272.i.i, label %endif.i.i273.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i

func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i: ; preds = %endif.i.i273.i.i, %else73.i.i
  %.016.lcssa.i.i274.i.i = phi i32 [ 0, %else73.i.i ], [ %35, %endif.i.i273.i.i ]
  %37 = icmp uge i32 %.016.lcssa.i.i274.i.i, %rshift_tmp.i.i.i
  %cast_tmp76.neg.i.i = sext i1 %37 to i32
  %sub_tmp78.i.i = add i32 %cast_tmp76.neg.i.i, %cast_tmp21.i.i230.i.i
  br label %endif145.i.i

else82.i.i:                                       ; preds = %endif.i
  %mul_tmp.i276.i.i = mul nsw i32 %.0.i28.i, -732923
  %rshift_tmp.i277.i.i = lshr i32 %mul_tmp.i276.i.i, 20
  %add_tmp87.i.i = add nsw i32 %rshift_tmp.i277.i.i, %.0.i28.i
  %sub_tmp91.i.i = sub nsw i32 0, %add_tmp87.i.i
  %38 = icmp ult i32 %sub_tmp91.i.i, 3529
  tail call void @llvm.assume(i1 %38) #8
  %mul_tmp.i278.i.i = mul nsw i32 %add_tmp87.i.i, -1217359
  %rshift_tmp.i279.i.i = lshr i32 %mul_tmp.i278.i.i, 19
  %sub_tmp93.neg.i.i = add nuw nsw i32 %rshift_tmp.i277.i.i, 60
  %sub_tmp96.i.i = sub nsw i32 %sub_tmp93.neg.i.i, %rshift_tmp.i279.i.i
  %39 = zext i32 %sub_tmp91.i.i to i64
  %40 = getelementptr [47 x i64], [47 x i64]* @std.ryu.FLOAT_POW5_SPLIT, i64 0, i64 %39
  %load_tmp2.i281.i.i = load i64, i64* %40, align 8
  %41 = icmp ugt i32 %sub_tmp96.i.i, 32
  tail call void @llvm.assume(i1 %41) #8
  %rshift_tmp.i.i282.i.i = lshr i64 %load_tmp2.i281.i.i, 32
  %cast_tmp5.i.i283.i.i = zext i32 %mul_tmp.i.i to i64
  %cast_tmp7.i.i284.i.i = and i64 %load_tmp2.i281.i.i, 4294967295
  %mul_tmp.i.i285.i.i = mul nuw nsw i64 %cast_tmp7.i.i284.i.i, %cast_tmp5.i.i283.i.i
  %mul_tmp12.i.i286.i.i = mul nuw nsw i64 %rshift_tmp.i.i282.i.i, %cast_tmp5.i.i283.i.i
  %rshift_tmp14.i.i287.i.i = lshr i64 %mul_tmp.i.i285.i.i, 32
  %add_tmp.i.i288.i.i = add nuw nsw i64 %rshift_tmp14.i.i287.i.i, %mul_tmp12.i.i286.i.i
  %sub_tmp.i.i289.i.i = add nsw i32 %sub_tmp96.i.i, -32
  %42 = zext i32 %sub_tmp.i.i289.i.i to i64
  %rshift_tmp18.i.i290.i.i = lshr i64 %add_tmp.i.i288.i.i, %42
  %43 = icmp ult i64 %rshift_tmp18.i.i290.i.i, 4294967296
  tail call void @llvm.assume(i1 %43) #8
  %cast_tmp5.i.i294.i.i = zext i32 %add_tmp.i.i to i64
  %mul_tmp.i.i296.i.i = mul nuw nsw i64 %cast_tmp7.i.i284.i.i, %cast_tmp5.i.i294.i.i
  %mul_tmp12.i.i297.i.i = mul nuw nsw i64 %rshift_tmp.i.i282.i.i, %cast_tmp5.i.i294.i.i
  %rshift_tmp14.i.i298.i.i = lshr i64 %mul_tmp.i.i296.i.i, 32
  %add_tmp.i.i299.i.i = add nuw i64 %rshift_tmp14.i.i298.i.i, %mul_tmp12.i.i297.i.i
  %rshift_tmp18.i.i301.i.i = lshr i64 %add_tmp.i.i299.i.i, %42
  %44 = icmp ult i64 %rshift_tmp18.i.i301.i.i, 4294967296
  tail call void @llvm.assume(i1 %44) #8
  %cast_tmp21.i.i302.i.i = trunc i64 %rshift_tmp18.i.i301.i.i to i32
  %cast_tmp5.i.i305.i.i = zext i32 %sub_tmp17.i.i to i64
  %mul_tmp.i.i307.i.i = mul nuw i64 %cast_tmp7.i.i284.i.i, %cast_tmp5.i.i305.i.i
  %mul_tmp12.i.i308.i.i = mul nuw i64 %rshift_tmp.i.i282.i.i, %cast_tmp5.i.i305.i.i
  %rshift_tmp14.i.i309.i.i = lshr i64 %mul_tmp.i.i307.i.i, 32
  %add_tmp.i.i310.i.i = add nuw i64 %rshift_tmp14.i.i309.i.i, %mul_tmp12.i.i308.i.i
  %rshift_tmp18.i.i312.i.i = lshr i64 %add_tmp.i.i310.i.i, %42
  %45 = icmp ult i64 %rshift_tmp18.i.i312.i.i, 4294967296
  tail call void @llvm.assume(i1 %45) #8
  %cast_tmp21.i.i313.i.i = trunc i64 %rshift_tmp18.i.i312.i.i to i32
  %.not.i.i = icmp ult i32 %mul_tmp.i276.i.i, 1048576
  br i1 %.not.i.i, label %endif145.thread.i.i, label %bool_and_rhs107.i.i

bool_and_rhs107.i.i:                              ; preds = %else82.i.i
  %sub_tmp109.i.i = add i32 %cast_tmp21.i.i302.i.i, -1
  %div_tmp110.i.i = udiv i32 %sub_tmp109.i.i, 10
  %div_tmp112.i.i = udiv i32 %cast_tmp21.i.i313.i.i, 10
  %.not212.i.i = icmp ugt i32 %div_tmp110.i.i, %div_tmp112.i.i
  br i1 %.not212.i.i, label %endif128.i.i, label %then115.i.i

then115.i.i:                                      ; preds = %bool_and_rhs107.i.i
  %add_tmp119.i.i = sub nsw i32 1, %add_tmp87.i.i
  %mul_tmp.i314.i.i = mul nuw nsw i32 %add_tmp119.i.i, 1217359
  %rshift_tmp.i315.i.i = lshr i32 %mul_tmp.i314.i.i, 19
  %46 = sub nsw i32 59, %rshift_tmp.i315.i.i
  %sub_tmp121.i.i = add nsw i32 %46, %rshift_tmp.i277.i.i
  %47 = zext i32 %add_tmp119.i.i to i64
  %48 = getelementptr [47 x i64], [47 x i64]* @std.ryu.FLOAT_POW5_SPLIT, i64 0, i64 %47
  %load_tmp2.i317.i.i = load i64, i64* %48, align 8
  %49 = icmp ugt i32 %sub_tmp121.i.i, 32
  tail call void @llvm.assume(i1 %49) #8
  %rshift_tmp.i.i318.i.i = lshr i64 %load_tmp2.i317.i.i, 32
  %cast_tmp7.i.i320.i.i = and i64 %load_tmp2.i317.i.i, 4294967295
  %mul_tmp.i.i321.i.i = mul nuw nsw i64 %cast_tmp7.i.i320.i.i, %cast_tmp5.i.i283.i.i
  %mul_tmp12.i.i322.i.i = mul nuw nsw i64 %rshift_tmp.i.i318.i.i, %cast_tmp5.i.i283.i.i
  %rshift_tmp14.i.i323.i.i = lshr i64 %mul_tmp.i.i321.i.i, 32
  %add_tmp.i.i324.i.i = add nuw nsw i64 %rshift_tmp14.i.i323.i.i, %mul_tmp12.i.i322.i.i
  %sub_tmp.i.i325.i.i = add nsw i32 %sub_tmp121.i.i, -32
  %50 = zext i32 %sub_tmp.i.i325.i.i to i64
  %rshift_tmp18.i.i326.i.i = lshr i64 %add_tmp.i.i324.i.i, %50
  %51 = icmp ult i64 %rshift_tmp18.i.i326.i.i, 4294967296
  tail call void @llvm.assume(i1 %51) #8
  %cast_tmp21.i.i327.i.i = trunc i64 %rshift_tmp18.i.i326.i.i to i32
  %mod_tmp126.i.i = urem i32 %cast_tmp21.i.i327.i.i, 10
  %cast_tmp127.i.i = trunc i32 %mod_tmp126.i.i to i8
  br label %endif128.i.i

endif128.i.i:                                     ; preds = %then115.i.i, %bool_and_rhs107.i.i
  %.1202.i.i = phi i8 [ %cast_tmp127.i.i, %then115.i.i ], [ 0, %bool_and_rhs107.i.i ]
  %52 = icmp ult i32 %mul_tmp.i276.i.i, 2097152
  br i1 %52, label %endif145.thread.i.i, label %else137.i.i

endif145.thread.i.i:                              ; preds = %endif128.i.i, %else82.i.i
  %.1202331.i.i = phi i8 [ %.1202.i.i, %endif128.i.i ], [ 0, %else82.i.i ]
  %spec.select216.i.i = select i1 %8, i1 %bool_or_tmp.i.i, i1 false
  %not..i.i = xor i1 %8, true
  %53 = sext i1 %not..i.i to i32
  %spec.select217.i.i = add i32 %cast_tmp21.i.i302.i.i, %53
  %.0173380.i.i = trunc i64 %rshift_tmp18.i.i290.i.i to i32
  br label %while_condition_check.preheader.i.i

else137.i.i:                                      ; preds = %endif128.i.i
  %54 = icmp ult i32 %mul_tmp.i276.i.i, 32505856
  br i1 %54, label %then139.i.i, label %endif145.i.i

then139.i.i:                                      ; preds = %else137.i.i
  %sub_tmp142.i.i = add nsw i32 %rshift_tmp.i277.i.i, -1
  %notmask.i.i.i = shl nsw i32 -1, %sub_tmp142.i.i
  %sub_tmp.i.i.i = xor i32 %notmask.i.i.i, -1
  %bit_and_tmp.i.i.i = and i32 %mul_tmp.i.i, %sub_tmp.i.i.i
  %55 = icmp eq i32 %bit_and_tmp.i.i.i, 0
  br label %endif145.i.i

endif145.i.i:                                     ; preds = %then139.i.i, %else137.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i, %endif60.i.i
  %.2203.i.i = phi i8 [ %.0201329.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %.0201329.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ %.0201329.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ %.0201.i.i, %endif60.i.i ], [ %.1202.i.i, %else137.i.i ], [ %.1202.i.i, %then139.i.i ]
  %.2197.i.i = phi i1 [ %30, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ false, %endif60.i.i ], [ false, %else137.i.i ], [ %55, %then139.i.i ]
  %.2193.i.i = phi i1 [ false, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ false, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ %34, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ false, %endif60.i.i ], [ false, %else137.i.i ], [ false, %then139.i.i ]
  %.0190.i.i = phi i32 [ %rshift_tmp.i.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %rshift_tmp.i.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ %rshift_tmp.i.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ %rshift_tmp.i.i.i, %endif60.i.i ], [ %add_tmp87.i.i, %else137.i.i ], [ %add_tmp87.i.i, %then139.i.i ]
  %.0179.i.i = phi i32 [ %cast_tmp21.i.i241.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %cast_tmp21.i.i241.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ %cast_tmp21.i.i241.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ %cast_tmp21.i.i241.i.i, %endif60.i.i ], [ %cast_tmp21.i.i313.i.i, %else137.i.i ], [ %cast_tmp21.i.i313.i.i, %then139.i.i ]
  %.2176.i.i = phi i32 [ %cast_tmp21.i.i230.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %sub_tmp78.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ %cast_tmp21.i.i230.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ %cast_tmp21.i.i230.i.i, %endif60.i.i ], [ %cast_tmp21.i.i302.i.i, %else137.i.i ], [ %cast_tmp21.i.i302.i.i, %then139.i.i ]
  %.0173.in.i.i = phi i64 [ %rshift_tmp18.i.i.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %rshift_tmp18.i.i.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit275.i.i ], [ %rshift_tmp18.i.i.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit265.i.i ], [ %rshift_tmp18.i.i.i.i, %endif60.i.i ], [ %rshift_tmp18.i.i290.i.i, %else137.i.i ], [ %rshift_tmp18.i.i290.i.i, %then139.i.i ]
  %.0173.i.i = trunc i64 %.0173.in.i.i to i32
  %spec.select.i.i = select i1 %.2193.i.i, i1 true, i1 %.2197.i.i
  br i1 %spec.select.i.i, label %while_condition_check.preheader.i.i, label %while_condition_check228.preheader.i.i

while_condition_check228.preheader.i.i:           ; preds = %endif145.i.i
  %div_tmp231334.i.i = udiv i32 %.2176.i.i, 10
  %div_tmp233335.i.i = udiv i32 %.0179.i.i, 10
  %56 = icmp ugt i32 %div_tmp231334.i.i, %div_tmp233335.i.i
  br i1 %56, label %while234.i.i, label %endwhile229.i.i

while_condition_check.preheader.i.i:              ; preds = %endif145.i.i, %endif145.thread.i.i
  %.0173389.i.i = phi i32 [ %.0173380.i.i, %endif145.thread.i.i ], [ %.0173.i.i, %endif145.i.i ]
  %.2176388.i.i = phi i32 [ %spec.select217.i.i, %endif145.thread.i.i ], [ %.2176.i.i, %endif145.i.i ]
  %.0179387.i.i = phi i32 [ %cast_tmp21.i.i313.i.i, %endif145.thread.i.i ], [ %.0179.i.i, %endif145.i.i ]
  %.0190386.i.i = phi i32 [ %add_tmp87.i.i, %endif145.thread.i.i ], [ %.0190.i.i, %endif145.i.i ]
  %.2193384.i.i = phi i1 [ %spec.select216.i.i, %endif145.thread.i.i ], [ %.2193.i.i, %endif145.i.i ]
  %.2197383.i.i = phi i1 [ true, %endif145.thread.i.i ], [ %.2197.i.i, %endif145.i.i ]
  %.2203382.i.i = phi i8 [ %.1202331.i.i, %endif145.thread.i.i ], [ %.2203.i.i, %endif145.i.i ]
  %div_tmp153343.i.i = udiv i32 %.2176388.i.i, 10
  %div_tmp155344.i.i = udiv i32 %.0179387.i.i, 10
  %57 = icmp ugt i32 %div_tmp153343.i.i, %div_tmp155344.i.i
  br i1 %57, label %while.i.i, label %endwhile.i.i

endwhile.i.i.loopexit:                            ; preds = %while.i.i
  %cast_tmp168.i.i.le = trunc i32 %mod_tmp167.i.i to i8
  br label %endwhile.i.i

endwhile.i.i:                                     ; preds = %endwhile.i.i.loopexit, %while_condition_check.preheader.i.i
  %.3204.lcssa.i.i = phi i8 [ %.2203382.i.i, %while_condition_check.preheader.i.i ], [ %cast_tmp168.i.i.le, %endwhile.i.i.loopexit ]
  %.3198.lcssa.i.i = phi i1 [ %.2197383.i.i, %while_condition_check.preheader.i.i ], [ %bit_and_tmp165.i.i, %endwhile.i.i.loopexit ]
  %.3194.lcssa.i.i = phi i1 [ %.2193384.i.i, %while_condition_check.preheader.i.i ], [ %bit_and_tmp162.i.i, %endwhile.i.i.loopexit ]
  %.0185.lcssa.i.i = phi i32 [ 0, %while_condition_check.preheader.i.i ], [ %61, %endwhile.i.i.loopexit ]
  %.1180.lcssa.i.i = phi i32 [ %.0179387.i.i, %while_condition_check.preheader.i.i ], [ %div_tmp155352.i.i, %endwhile.i.i.loopexit ]
  %.1.lcssa.i.i = phi i32 [ %.0173389.i.i, %while_condition_check.preheader.i.i ], [ %div_tmp170.i.i, %endwhile.i.i.loopexit ]
  %mod_tmp181358.i.i = urem i32 %.1180.lcssa.i.i, 10
  %58 = icmp eq i32 %mod_tmp181358.i.i, 0
  %or.cond.i.i = select i1 %.3194.lcssa.i.i, i1 %58, i1 false
  br i1 %or.cond.i.i, label %while182.i.i, label %endif196.i.i

while.i.i:                                        ; preds = %while_condition_check.preheader.i.i, %while.i.i
  %div_tmp155352.i.i = phi i32 [ %div_tmp155.i.i, %while.i.i ], [ %div_tmp155344.i.i, %while_condition_check.preheader.i.i ]
  %div_tmp153351.i.i = phi i32 [ %div_tmp153.i.i, %while.i.i ], [ %div_tmp153343.i.i, %while_condition_check.preheader.i.i ]
  %.1350.i.i = phi i32 [ %div_tmp170.i.i, %while.i.i ], [ %.0173389.i.i, %while_condition_check.preheader.i.i ]
  %.1180349.i.i = phi i32 [ %div_tmp155352.i.i, %while.i.i ], [ %.0179387.i.i, %while_condition_check.preheader.i.i ]
  %.0185348.i.i = phi i32 [ %61, %while.i.i ], [ 0, %while_condition_check.preheader.i.i ]
  %.3194347.i.i = phi i1 [ %bit_and_tmp162.i.i, %while.i.i ], [ %.2193384.i.i, %while_condition_check.preheader.i.i ]
  %.3198346.i.i = phi i1 [ %bit_and_tmp165.i.i, %while.i.i ], [ %.2197383.i.i, %while_condition_check.preheader.i.i ]
  %.3204345.i.i = phi i8 [ %cast_tmp168.i.i, %while.i.i ], [ %.2203382.i.i, %while_condition_check.preheader.i.i ]
  %mul_tmp159.neg.i.i = mul i32 %div_tmp155352.i.i, -10
  %sub_tmp160.i.i = sub i32 0, %.1180349.i.i
  %59 = icmp eq i32 %mul_tmp159.neg.i.i, %sub_tmp160.i.i
  %bit_and_tmp162.i.i = and i1 %59, %.3194347.i.i
  %60 = icmp eq i8 %.3204345.i.i, 0
  %bit_and_tmp165.i.i = and i1 %.3198346.i.i, %60
  %mod_tmp167.i.i = urem i32 %.1350.i.i, 10
  %cast_tmp168.i.i = trunc i32 %mod_tmp167.i.i to i8
  %div_tmp170.i.i = udiv i32 %.1350.i.i, 10
  %61 = add i32 %.0185348.i.i, 1
  %div_tmp153.i.i = udiv i32 %div_tmp153351.i.i, 10
  %div_tmp155.i.i = udiv i32 %div_tmp155352.i.i, 10
  %62 = icmp ugt i32 %div_tmp153.i.i, %div_tmp155.i.i
  br i1 %62, label %while.i.i, label %endwhile.i.i.loopexit

while182.i.i:                                     ; preds = %endwhile.i.i, %while182.i.i
  %.2363.i.i = phi i32 [ %div_tmp190.i.i, %while182.i.i ], [ %.1.lcssa.i.i, %endwhile.i.i ]
  %.2181362.i.i = phi i32 [ %div_tmp194.i.i, %while182.i.i ], [ %.1180.lcssa.i.i, %endwhile.i.i ]
  %.1186361.i.i = phi i32 [ %64, %while182.i.i ], [ %.0185.lcssa.i.i, %endwhile.i.i ]
  %.4199360.i.i = phi i1 [ %bit_and_tmp185.i.i, %while182.i.i ], [ %.3198.lcssa.i.i, %endwhile.i.i ]
  %.4205359.i.i = phi i8 [ %cast_tmp188.i.i, %while182.i.i ], [ %.3204.lcssa.i.i, %endwhile.i.i ]
  %63 = icmp eq i8 %.4205359.i.i, 0
  %bit_and_tmp185.i.i = and i1 %.4199360.i.i, %63
  %mod_tmp187.i.i = urem i32 %.2363.i.i, 10
  %cast_tmp188.i.i = trunc i32 %mod_tmp187.i.i to i8
  %div_tmp190.i.i = udiv i32 %.2363.i.i, 10
  %div_tmp194.i.i = udiv i32 %.2181362.i.i, 10
  %64 = add i32 %.1186361.i.i, 1
  %mod_tmp181.i.i = urem i32 %div_tmp194.i.i, 10
  %65 = icmp eq i32 %mod_tmp181.i.i, 0
  br i1 %65, label %while182.i.i, label %endif196.i.i.loopexit

endif196.i.i.loopexit:                            ; preds = %while182.i.i
  %cast_tmp188.i.i.le = trunc i32 %mod_tmp187.i.i to i8
  br label %endif196.i.i

endif196.i.i:                                     ; preds = %endif196.i.i.loopexit, %endwhile.i.i
  %.5206.i.i = phi i8 [ %.3204.lcssa.i.i, %endwhile.i.i ], [ %cast_tmp188.i.i.le, %endif196.i.i.loopexit ]
  %.5200.i.i = phi i1 [ %.3198.lcssa.i.i, %endwhile.i.i ], [ %bit_and_tmp185.i.i, %endif196.i.i.loopexit ]
  %.2187.i.i = phi i32 [ %.0185.lcssa.i.i, %endwhile.i.i ], [ %64, %endif196.i.i.loopexit ]
  %.3182.i.i = phi i32 [ %.1180.lcssa.i.i, %endwhile.i.i ], [ %div_tmp194.i.i, %endif196.i.i.loopexit ]
  %.3.i.i = phi i32 [ %.1.lcssa.i.i, %endwhile.i.i ], [ %div_tmp190.i.i, %endif196.i.i.loopexit ]
  %66 = icmp eq i8 %.5206.i.i, 5
  %bool_and_tmp201.i.i = select i1 %.5200.i.i, i1 %66, i1 false
  %mod_tmp204.i.i = and i32 %.3.i.i, 1
  %67 = icmp eq i32 %mod_tmp204.i.i, 0
  %spec.select215.i.i = select i1 %67, i8 4, i8 5
  %.6.i.i = select i1 %bool_and_tmp201.i.i, i8 %spec.select215.i.i, i8 %.5206.i.i
  %68 = icmp eq i32 %.3.i.i, %.3182.i.i
  br i1 %68, label %bool_and_rhs212.i.i, label %bool_or_rhs221.i.i

bool_and_rhs212.i.i:                              ; preds = %endif196.i.i
  %69 = select i1 %8, i1 %.3194.lcssa.i.i, i1 false
  br i1 %69, label %bool_or_rhs221.i.i, label %bool_or_end223.i.i

bool_or_rhs221.i.i:                               ; preds = %bool_and_rhs212.i.i, %endif196.i.i
  %70 = icmp ugt i8 %.6.i.i, 4
  %phi.cast.i.i = zext i1 %70 to i32
  br label %bool_or_end223.i.i

bool_or_end223.i.i:                               ; preds = %bool_or_rhs221.i.i, %bool_and_rhs212.i.i
  %bool_or_tmp224.i.i = phi i32 [ 1, %bool_and_rhs212.i.i ], [ %phi.cast.i.i, %bool_or_rhs221.i.i ]
  %add_tmp226.i.i = add i32 %bool_or_tmp224.i.i, %.3.i.i
  br label %"func.std.ryu.f2d..2.builtin.uint32.builtin.uint32.struct.std::ryu::floating_decimal_32.exit.i"

while_condition_check228.endwhile229_crit_edge.i.i: ; preds = %while234.i.i
  %cast_tmp237.le.i.i = trunc i32 %mod_tmp236.le.i.i to i8
  br label %endwhile229.i.i

endwhile229.i.i:                                  ; preds = %while_condition_check228.endwhile229_crit_edge.i.i, %while_condition_check228.preheader.i.i
  %.7.lcssa.i.i = phi i8 [ %cast_tmp237.le.i.i, %while_condition_check228.endwhile229_crit_edge.i.i ], [ %.2203.i.i, %while_condition_check228.preheader.i.i ]
  %.3188.lcssa.i.i = phi i32 [ %73, %while_condition_check228.endwhile229_crit_edge.i.i ], [ 0, %while_condition_check228.preheader.i.i ]
  %.4183.lcssa.i.i = phi i32 [ %div_tmp233339.i.i, %while_condition_check228.endwhile229_crit_edge.i.i ], [ %.0179.i.i, %while_condition_check228.preheader.i.i ]
  %.4.lcssa.i.i = phi i32 [ %div_tmp239.i.i, %while_condition_check228.endwhile229_crit_edge.i.i ], [ %.0173.i.i, %while_condition_check228.preheader.i.i ]
  %71 = icmp eq i32 %.4.lcssa.i.i, %.4183.lcssa.i.i
  %72 = icmp ugt i8 %.7.lcssa.i.i, 4
  %bool_or_tmp251.i.i = select i1 %71, i1 true, i1 %72
  %cast_tmp252.i.i = zext i1 %bool_or_tmp251.i.i to i32
  %add_tmp253.i.i = add i32 %.4.lcssa.i.i, %cast_tmp252.i.i
  br label %"func.std.ryu.f2d..2.builtin.uint32.builtin.uint32.struct.std::ryu::floating_decimal_32.exit.i"

while234.i.i:                                     ; preds = %while_condition_check228.preheader.i.i, %while234.i.i
  %div_tmp233339.i.i = phi i32 [ %div_tmp233.i.i, %while234.i.i ], [ %div_tmp233335.i.i, %while_condition_check228.preheader.i.i ]
  %div_tmp231338.i.i = phi i32 [ %div_tmp231.i.i, %while234.i.i ], [ %div_tmp231334.i.i, %while_condition_check228.preheader.i.i ]
  %.4337.i.i = phi i32 [ %div_tmp239.i.i, %while234.i.i ], [ %.0173.i.i, %while_condition_check228.preheader.i.i ]
  %.3188336.i.i = phi i32 [ %73, %while234.i.i ], [ 0, %while_condition_check228.preheader.i.i ]
  %div_tmp239.i.i = udiv i32 %.4337.i.i, 10
  %mod_tmp236.le.i.i = urem i32 %.4337.i.i, 10
  %73 = add i32 %.3188336.i.i, 1
  %div_tmp231.i.i = udiv i32 %div_tmp231338.i.i, 10
  %div_tmp233.i.i = udiv i32 %div_tmp233339.i.i, 10
  %74 = icmp ugt i32 %div_tmp231.i.i, %div_tmp233.i.i
  br i1 %74, label %while234.i.i, label %while_condition_check228.endwhile229_crit_edge.i.i

"func.std.ryu.f2d..2.builtin.uint32.builtin.uint32.struct.std::ryu::floating_decimal_32.exit.i": ; preds = %endwhile229.i.i, %bool_or_end223.i.i
  %.0190385.i.i = phi i32 [ %.0190386.i.i, %bool_or_end223.i.i ], [ %.0190.i.i, %endwhile229.i.i ]
  %.4189.i.i = phi i32 [ %.2187.i.i, %bool_or_end223.i.i ], [ %.3188.lcssa.i.i, %endwhile229.i.i ]
  %.0184.i.i = phi i32 [ %add_tmp226.i.i, %bool_or_end223.i.i ], [ %add_tmp253.i.i, %endwhile229.i.i ]
  %add_tmp257.i.i = add i32 %.4189.i.i, %.0190385.i.i
  %.sroa.4.0.insert.ext.i.i = zext i32 %add_tmp257.i.i to i64
  br i1 %3, label %then.i29.i, label %endif.i31.i

then.i29.i:                                       ; preds = %"func.std.ryu.f2d..2.builtin.uint32.builtin.uint32.struct.std::ryu::floating_decimal_32.exit.i"
  store i8 45, i8* %1, align 1
  %75 = getelementptr i8, i8* %1, i64 1
  br label %endif.i31.i

endif.i31.i:                                      ; preds = %then.i29.i, %"func.std.ryu.f2d..2.builtin.uint32.builtin.uint32.struct.std::ryu::floating_decimal_32.exit.i"
  %.0.i30.i = phi i8* [ %75, %then.i29.i ], [ %1, %"func.std.ryu.f2d..2.builtin.uint32.builtin.uint32.struct.std::ryu::floating_decimal_32.exit.i" ]
  %76 = icmp ult i32 %.0184.i.i, 1000000000
  tail call void @llvm.assume(i1 %76) #8
  %77 = icmp ugt i32 %.0184.i.i, 99999999
  br i1 %77, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread.i.i, label %else.i.i.i

else.i.i.i:                                       ; preds = %endif.i31.i
  %78 = icmp ugt i32 %.0184.i.i, 9999999
  br i1 %78, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread61.i.i, label %else4.i.i.i

else4.i.i.i:                                      ; preds = %else.i.i.i
  %79 = icmp ugt i32 %.0184.i.i, 999999
  br i1 %79, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread.i, label %else7.i.i.i

else7.i.i.i:                                      ; preds = %else4.i.i.i
  %80 = icmp ugt i32 %.0184.i.i, 99999
  br i1 %80, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread45.i, label %else10.i.i.i

else10.i.i.i:                                     ; preds = %else7.i.i.i
  %81 = icmp ugt i32 %.0184.i.i, 9999
  br i1 %81, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.thread, label %else13.i.i.i

else13.i.i.i:                                     ; preds = %else10.i.i.i
  %82 = icmp ugt i32 %.0184.i.i, 999
  %83 = icmp ugt i32 %.0184.i.i, 99
  %84 = icmp ugt i32 %.0184.i.i, 9
  %..i.i.i = select i1 %84, i32 2, i32 1
  %85 = select i1 %83, i32 3, i32 %..i.i.i
  %86 = select i1 %82, i32 4, i32 %85
  %add_tmp.i32.i = add i32 %add_tmp257.i.i, 3
  %87 = add i32 %add_tmp.i32.i, %86
  %88 = icmp ult i32 %87, 11
  br i1 %88, label %else13.i.i.i.i, label %else13.i.i34.i.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.thread: ; preds = %else10.i.i.i
  %89 = add i32 %add_tmp257.i.i, 8
  %90 = icmp ult i32 %89, 11
  br i1 %90, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i, label %while.lr.ph.i38.i.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread45.i: ; preds = %else7.i.i.i
  %91 = add i32 %add_tmp257.i.i, 9
  %92 = icmp ult i32 %91, 11
  br i1 %92, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i, label %while.lr.ph.i38.i.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread.i: ; preds = %else4.i.i.i
  %93 = add i32 %add_tmp257.i.i, 10
  %94 = icmp ult i32 %93, 11
  br i1 %94, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i, label %while.lr.ph.i38.i.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread61.i.i: ; preds = %else.i.i.i
  %95 = icmp ugt i32 %add_tmp257.i.i, -12
  br i1 %95, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i, label %while.lr.ph.i38.i.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread.i.i: ; preds = %endif.i31.i
  %96 = add i32 %add_tmp257.i.i, 12
  %97 = icmp ult i32 %96, 11
  br i1 %97, label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i, label %while.lr.ph.i38.i.i

else13.i.i.i.i:                                   ; preds = %else13.i.i.i
  %spec.select = select i1 %82, i32 4, i32 %85
  br label %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i

func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i: ; preds = %else13.i.i.i.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.thread, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread.i.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread61.i.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread45.i
  %98 = phi i32 [ 9, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread.i.i ], [ 8, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread61.i.i ], [ 7, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread.i ], [ 6, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread45.i ], [ 5, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.thread ], [ %spec.select, %else13.i.i.i.i ]
  %sub_tmp.i.i33.i = add i32 %98, %add_tmp257.i.i
  %add_tmp.i.i.i = add i32 %sub_tmp.i.i33.i, -1
  %99 = icmp slt i32 %add_tmp.i.i.i, 0
  br i1 %99, label %then.i.i.i, label %endif.i.i.i

then.i.i.i:                                       ; preds = %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i
  %unary_minus_tmp.i.i.i = sub i32 1, %sub_tmp.i.i33.i
  %add_tmp7.i.i.i = sub i32 2, %sub_tmp.i.i33.i
  %cast_tmp.i.i.i = sext i32 %add_tmp7.i.i.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.0.i30.i, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %cast_tmp.i.i.i, i1 false) #8
  %100 = sext i32 %unary_minus_tmp.i.i.i to i64
  %ptr_add_tmp.i.i.i = getelementptr i8, i8* %.0.i30.i, i64 %100
  br label %endif.i.i.i

endif.i.i.i:                                      ; preds = %then.i.i.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i
  %.0.i.i.i = phi i8* [ %ptr_add_tmp.i.i.i, %then.i.i.i ], [ %.0.i30.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.i ]
  %101 = icmp ugt i32 %.0184.i.i, 9999
  br i1 %101, label %while.lr.ph.i.i.i, label %endwhile.i.i.i

while.lr.ph.i.i.i:                                ; preds = %endif.i.i.i
  %102 = zext i32 %98 to i64
  %ptr_add_tmp23.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %102
  br label %while.i.i.i

endwhile.loopexit.i.i.i:                          ; preds = %while.i.i.i
  %phi.cast.i.i.i = zext i32 %add_tmp37.i.i.i to i64
  br label %endwhile.i.i.i

endwhile.i.i.i:                                   ; preds = %endwhile.loopexit.i.i.i, %endif.i.i.i
  %.060.lcssa.i.i.i = phi i64 [ 0, %endif.i.i.i ], [ %phi.cast.i.i.i, %endwhile.loopexit.i.i.i ]
  %.058.lcssa.i.i.i = phi i32 [ %.0184.i.i, %endif.i.i.i ], [ %div_tmp.i.i.i, %endwhile.loopexit.i.i.i ]
  %103 = icmp ugt i32 %.058.lcssa.i.i.i, 99
  br i1 %103, label %then39.i.i.i, label %endif55.i.i.i

while.i.i.i:                                      ; preds = %while.i.i.i, %while.lr.ph.i.i.i
  %.05865.i.i.i = phi i32 [ %.0184.i.i, %while.lr.ph.i.i.i ], [ %div_tmp.i.i.i, %while.i.i.i ]
  %.06064.i.i.i = phi i32 [ 0, %while.lr.ph.i.i.i ], [ %add_tmp37.i.i.i, %while.i.i.i ]
  %div_tmp.i.i.i = udiv i32 %.05865.i.i.i, 10000
  %mul_tmp.neg.i.i.i = mul nsw i32 %div_tmp.i.i.i, -10000
  %sub_tmp14.i.i.i = add i32 %mul_tmp.neg.i.i.i, %.05865.i.i.i
  %mod_tmp.i.i.i = urem i32 %sub_tmp14.i.i.i, 100
  %lshift_tmp.i.i.i = shl nuw nsw i32 %mod_tmp.i.i.i, 1
  %div_tmp19.i.i.i = udiv i32 %sub_tmp14.i.i.i, 100
  %lshift_tmp20.i.i.i = shl nuw nsw i32 %div_tmp19.i.i.i, 1
  %104 = zext i32 %.06064.i.i.i to i64
  %105 = sub nsw i64 0, %104
  %ptr_sub_tmp.i.i.i = getelementptr i8, i8* %ptr_add_tmp23.i.i.i, i64 %105
  %ptr_sub_tmp25.i.i.i = getelementptr i8, i8* %ptr_sub_tmp.i.i.i, i64 -1
  %106 = zext i32 %lshift_tmp.i.i.i to i64
  %ptr_add_tmp27.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %106
  %107 = bitcast i8* %ptr_add_tmp27.i.i.i to i16*
  %108 = bitcast i8* %ptr_sub_tmp25.i.i.i to i16*
  %109 = load i16, i16* %107, align 2
  store i16 %109, i16* %108, align 1
  %ptr_sub_tmp33.i.i.i = getelementptr i8, i8* %ptr_sub_tmp.i.i.i, i64 -3
  %110 = zext i32 %lshift_tmp20.i.i.i to i64
  %ptr_add_tmp35.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %110
  %111 = bitcast i8* %ptr_add_tmp35.i.i.i to i16*
  %112 = bitcast i8* %ptr_sub_tmp33.i.i.i to i16*
  %113 = load i16, i16* %111, align 2
  store i16 %113, i16* %112, align 1
  %add_tmp37.i.i.i = add i32 %.06064.i.i.i, 4
  %114 = icmp ugt i32 %.05865.i.i.i, 99999999
  br i1 %114, label %while.i.i.i, label %endwhile.loopexit.i.i.i

then39.i.i.i:                                     ; preds = %endwhile.i.i.i
  %mod_tmp41.lhs.trunc.i.i.i = trunc i32 %.058.lcssa.i.i.i to i16
  %mod_tmp4161.i.i.i = urem i16 %mod_tmp41.lhs.trunc.i.i.i, 100
  %115 = shl nuw nsw i16 %mod_tmp4161.i.i.i, 1
  %div_tmp4462.i.i.i = udiv i16 %mod_tmp41.lhs.trunc.i.i.i, 100
  %div_tmp44.zext.i.i.i = zext i16 %div_tmp4462.i.i.i to i32
  %116 = zext i32 %98 to i64
  %ptr_add_tmp47.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %116
  %117 = sub nsw i64 0, %.060.lcssa.i.i.i
  %ptr_sub_tmp49.i.i.i = getelementptr i8, i8* %ptr_add_tmp47.i.i.i, i64 %117
  %ptr_sub_tmp50.i.i.i = getelementptr i8, i8* %ptr_sub_tmp49.i.i.i, i64 -1
  %118 = zext i16 %115 to i64
  %ptr_add_tmp52.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %118
  %119 = bitcast i8* %ptr_add_tmp52.i.i.i to i16*
  %120 = bitcast i8* %ptr_sub_tmp50.i.i.i to i16*
  %121 = load i16, i16* %119, align 2
  store i16 %121, i16* %120, align 1
  br label %endif55.i.i.i

endif55.i.i.i:                                    ; preds = %then39.i.i.i, %endwhile.i.i.i
  %.159.i.i.i = phi i32 [ %div_tmp44.zext.i.i.i, %then39.i.i.i ], [ %.058.lcssa.i.i.i, %endwhile.i.i.i ]
  %122 = icmp ugt i32 %.159.i.i.i, 9
  br i1 %122, label %then57.i.i.i, label %else.i27.i.i

then57.i.i.i:                                     ; preds = %endif55.i.i.i
  %lshift_tmp59.i.i.i = shl nuw nsw i32 %.159.i.i.i, 1
  %ptr_add_tmp61.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 1
  %123 = zext i32 %lshift_tmp59.i.i.i to i64
  %ptr_add_tmp63.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %123
  %124 = bitcast i8* %ptr_add_tmp63.i.i.i to i16*
  %125 = bitcast i8* %ptr_add_tmp61.i.i.i to i16*
  %126 = load i16, i16* %124, align 2
  store i16 %126, i16* %125, align 1
  br label %endif69.i.i.i

else.i27.i.i:                                     ; preds = %endif55.i.i.i
  %127 = trunc i32 %.159.i.i.i to i8
  %cast_tmp66.i.i.i = add nuw nsw i8 %127, 48
  %ptr_add_tmp68.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 1
  store i8 %cast_tmp66.i.i.i, i8* %ptr_add_tmp68.i.i.i, align 1
  br label %endif69.i.i.i

endif69.i.i.i:                                    ; preds = %else.i27.i.i, %then57.i.i.i
  %.sroa.4.0.insert.shift.i.mask.i = and i64 %.sroa.4.0.insert.ext.i.i, 2147483648
  %128 = icmp eq i64 %.sroa.4.0.insert.shift.i.mask.i, 0
  br i1 %128, label %then71.i.i.i, label %endif78.i.i.i

then71.i.i.i:                                     ; preds = %endif69.i.i.i
  %129 = zext i32 %98 to i64
  %ptr_add_tmp74.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %129
  %ptr_add_tmp75.i.i.i = getelementptr i8, i8* %ptr_add_tmp74.i.i.i, i64 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %ptr_add_tmp75.i.i.i, i8 48, i64 %.sroa.4.0.insert.ext.i.i, i1 false) #8
  br label %endif78.i.i.i

endif78.i.i.i:                                    ; preds = %then71.i.i.i, %endif69.i.i.i
  %130 = icmp sgt i32 %add_tmp.i.i.i, -1
  br i1 %130, label %then80.i.i.i, label %endif91.i.i.i

then80.i.i.i:                                     ; preds = %endif78.i.i.i
  %ptr_add_tmp83.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 1
  %cast_tmp86.i.i.i = sext i32 %sub_tmp.i.i33.i to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %.0.i.i.i, i8* align 1 %ptr_add_tmp83.i.i.i, i64 %cast_tmp86.i.i.i, i1 false) #8
  %131 = zext i32 %add_tmp.i.i.i to i64
  %ptr_add_tmp89.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %131
  %ptr_add_tmp90.i.i.i = getelementptr i8, i8* %ptr_add_tmp89.i.i.i, i64 1
  store i8 46, i8* %ptr_add_tmp90.i.i.i, align 1
  br label %endif91.i.i.i

endif91.i.i.i:                                    ; preds = %then80.i.i.i, %endif78.i.i.i
  %add_tmp93.i.i.i = add i32 %98, 1
  %132 = zext i32 %add_tmp93.i.i.i to i64
  %ptr_add_tmp95.i.i.i = getelementptr i8, i8* %.0.i.i.i, i64 %132
  br i1 %128, label %then97.i.i.i, label %func.std.ryu.f2s_shortest..2.builtin.float32.0P.builtin.uint8.0P.builtin.uint8.exit

then97.i.i.i:                                     ; preds = %endif91.i.i.i
  %ptr_add_tmp100.i.i.i = getelementptr i8, i8* %ptr_add_tmp95.i.i.i, i64 %.sroa.4.0.insert.ext.i.i
  store i8 48, i8* %ptr_add_tmp100.i.i.i, align 1
  %133 = getelementptr i8, i8* %ptr_add_tmp100.i.i.i, i64 1
  br label %func.std.ryu.f2s_shortest..2.builtin.float32.0P.builtin.uint8.0P.builtin.uint8.exit

else13.i.i34.i.i:                                 ; preds = %else13.i.i.i
  br i1 %82, label %then.i49.i.i, label %endwhile.i40.i.i

while.lr.ph.i38.i.i:                              ; preds = %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.thread, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread.i.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread61.i.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread.i, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread45.i
  %.ph.i.i.i = phi i32 [ 9, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread.i.i ], [ 8, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.thread61.i.i ], [ 7, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread.i ], [ 6, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.thread45.i ], [ 5, %func.std.ryu.decimalLength9..1.builtin.uint32.builtin.uint32.exit.i.i.thread ]
  %134 = zext i32 %.ph.i.i.i to i64
  %ptr_add_tmp.i37.i.i = getelementptr i8, i8* %.0.i30.i, i64 %134
  br label %while.i48.i.i

endwhile.i40.i.i:                                 ; preds = %while.i48.i.i, %else13.i.i34.i.i
  %135 = phi i32 [ %85, %else13.i.i34.i.i ], [ %.ph.i.i.i, %while.i48.i.i ]
  %.058.lcssa.i39.i.i = phi i32 [ 0, %else13.i.i34.i.i ], [ %add_tmp.i47.i.i, %while.i48.i.i ]
  %.056.lcssa.i.i.i = phi i32 [ %.0184.i.i, %else13.i.i34.i.i ], [ %div_tmp.i41.i.i, %while.i48.i.i ]
  %136 = icmp ugt i32 %.056.lcssa.i.i.i, 99
  br i1 %136, label %then.i49.i.i, label %endif.i51.i.i

while.i48.i.i:                                    ; preds = %while.i48.i.i, %while.lr.ph.i38.i.i
  %.05664.i.i.i = phi i32 [ %.0184.i.i, %while.lr.ph.i38.i.i ], [ %div_tmp.i41.i.i, %while.i48.i.i ]
  %.05863.i.i.i = phi i32 [ 0, %while.lr.ph.i38.i.i ], [ %add_tmp.i47.i.i, %while.i48.i.i ]
  %div_tmp.i41.i.i = udiv i32 %.05664.i.i.i, 10000
  %mul_tmp.neg.i42.i.i = mul nsw i32 %div_tmp.i41.i.i, -10000
  %sub_tmp.i43.i.i = add i32 %mul_tmp.neg.i42.i.i, %.05664.i.i.i
  %mod_tmp.i44.i.i = urem i32 %sub_tmp.i43.i.i, 100
  %lshift_tmp.i45.i.i = shl nuw nsw i32 %mod_tmp.i44.i.i, 1
  %div_tmp9.i.i.i = udiv i32 %sub_tmp.i43.i.i, 100
  %lshift_tmp10.i.i.i = shl nuw nsw i32 %div_tmp9.i.i.i, 1
  %137 = zext i32 %.05863.i.i.i to i64
  %138 = sub nsw i64 0, %137
  %ptr_sub_tmp.i46.i.i = getelementptr i8, i8* %ptr_add_tmp.i37.i.i, i64 %138
  %ptr_sub_tmp14.i.i.i = getelementptr i8, i8* %ptr_sub_tmp.i46.i.i, i64 -1
  %139 = zext i32 %lshift_tmp.i45.i.i to i64
  %ptr_add_tmp16.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %139
  %140 = bitcast i8* %ptr_add_tmp16.i.i.i to i16*
  %141 = bitcast i8* %ptr_sub_tmp14.i.i.i to i16*
  %142 = load i16, i16* %140, align 2
  store i16 %142, i16* %141, align 1
  %ptr_sub_tmp22.i.i.i = getelementptr i8, i8* %ptr_sub_tmp.i46.i.i, i64 -3
  %143 = zext i32 %lshift_tmp10.i.i.i to i64
  %ptr_add_tmp24.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %143
  %144 = bitcast i8* %ptr_add_tmp24.i.i.i to i16*
  %145 = bitcast i8* %ptr_sub_tmp22.i.i.i to i16*
  %146 = load i16, i16* %144, align 2
  store i16 %146, i16* %145, align 1
  %add_tmp.i47.i.i = add i32 %.05863.i.i.i, 4
  %147 = icmp ugt i32 %.05664.i.i.i, 99999999
  br i1 %147, label %while.i48.i.i, label %endwhile.i40.i.i

then.i49.i.i:                                     ; preds = %endwhile.i40.i.i, %else13.i.i34.i.i
  %.056.lcssa69.i.i.i = phi i32 [ %.056.lcssa.i.i.i, %endwhile.i40.i.i ], [ %.0184.i.i, %else13.i.i34.i.i ]
  %.058.lcssa68.i.i.i = phi i32 [ %.058.lcssa.i39.i.i, %endwhile.i40.i.i ], [ 0, %else13.i.i34.i.i ]
  %148 = phi i32 [ %135, %endwhile.i40.i.i ], [ 4, %else13.i.i34.i.i ]
  %mod_tmp28.lhs.trunc.i.i.i = trunc i32 %.056.lcssa69.i.i.i to i16
  %mod_tmp2861.i.i.i = urem i16 %mod_tmp28.lhs.trunc.i.i.i, 100
  %149 = shl nuw nsw i16 %mod_tmp2861.i.i.i, 1
  %div_tmp3162.i.i.i = udiv i16 %mod_tmp28.lhs.trunc.i.i.i, 100
  %div_tmp31.zext.i.i.i = zext i16 %div_tmp3162.i.i.i to i32
  %150 = zext i32 %148 to i64
  %ptr_add_tmp34.i.i.i = getelementptr i8, i8* %.0.i30.i, i64 %150
  %151 = zext i32 %.058.lcssa68.i.i.i to i64
  %152 = sub nsw i64 0, %151
  %ptr_sub_tmp36.i.i.i = getelementptr i8, i8* %ptr_add_tmp34.i.i.i, i64 %152
  %ptr_sub_tmp37.i.i.i = getelementptr i8, i8* %ptr_sub_tmp36.i.i.i, i64 -1
  %153 = zext i16 %149 to i64
  %ptr_add_tmp39.i.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %153
  %154 = bitcast i8* %ptr_add_tmp39.i.i.i to i16*
  %155 = bitcast i8* %ptr_sub_tmp37.i.i.i to i16*
  %156 = load i16, i16* %154, align 2
  store i16 %156, i16* %155, align 1
  %add_tmp41.i.i.i = or i32 %.058.lcssa68.i.i.i, 2
  br label %endif.i51.i.i

endif.i51.i.i:                                    ; preds = %then.i49.i.i, %endwhile.i40.i.i
  %157 = phi i32 [ %148, %then.i49.i.i ], [ %135, %endwhile.i40.i.i ]
  %.159.i50.i.i = phi i32 [ %add_tmp41.i.i.i, %then.i49.i.i ], [ %.058.lcssa.i39.i.i, %endwhile.i40.i.i ]
  %.157.i.i.i = phi i32 [ %div_tmp31.zext.i.i.i, %then.i49.i.i ], [ %.056.lcssa.i.i.i, %endwhile.i40.i.i ]
  %158 = icmp ugt i32 %.157.i.i.i, 9
  br i1 %158, label %then43.i.i.i, label %else.i53.i.i

then43.i.i.i:                                     ; preds = %endif.i51.i.i
  %lshift_tmp45.i.i.i = shl nuw nsw i32 %.157.i.i.i, 1
  %add_tmp47.i.i.i = or i32 %lshift_tmp45.i.i.i, 1
  %159 = zext i32 %add_tmp47.i.i.i to i64
  %160 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %159
  %161 = zext i32 %157 to i64
  %ptr_add_tmp50.i.i.i = getelementptr i8, i8* %.0.i30.i, i64 %161
  %162 = zext i32 %.159.i50.i.i to i64
  %163 = sub nsw i64 0, %162
  %ptr_sub_tmp52.i.i.i = getelementptr i8, i8* %ptr_add_tmp50.i.i.i, i64 %163
  %load_tmp53.i.i.i = load i8, i8* %160, align 1
  store i8 %load_tmp53.i.i.i, i8* %ptr_sub_tmp52.i.i.i, align 1
  %164 = zext i32 %lshift_tmp45.i.i.i to i64
  %165 = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %164
  %load_tmp56.i.i.i = load i8, i8* %165, align 2
  br label %endif60.i.i.i

else.i53.i.i:                                     ; preds = %endif.i51.i.i
  %166 = trunc i32 %.157.i.i.i to i8
  %cast_tmp.i52.i.i = add nuw nsw i8 %166, 48
  br label %endif60.i.i.i

endif60.i.i.i:                                    ; preds = %else.i53.i.i, %then43.i.i.i
  %storemerge.i.i.i = phi i8 [ %cast_tmp.i52.i.i, %else.i53.i.i ], [ %load_tmp56.i.i.i, %then43.i.i.i ]
  store i8 %storemerge.i.i.i, i8* %.0.i30.i, align 1
  %167 = icmp ugt i32 %157, 1
  %ptr_add_tmp64.i.i.i = getelementptr i8, i8* %.0.i30.i, i64 1
  br i1 %167, label %then62.i.i.i, label %endif71.i.i.i

then62.i.i.i:                                     ; preds = %endif60.i.i.i
  store i8 46, i8* %ptr_add_tmp64.i.i.i, align 1
  %add_tmp66.i.i.i = add nsw i32 %157, 1
  %168 = zext i32 %add_tmp66.i.i.i to i64
  %ptr_add_tmp68.i54.i.i = getelementptr i8, i8* %.0.i30.i, i64 %168
  br label %endif71.i.i.i

endif71.i.i.i:                                    ; preds = %then62.i.i.i, %endif60.i.i.i
  %.055.i.i.i = phi i8* [ %ptr_add_tmp68.i54.i.i, %then62.i.i.i ], [ %ptr_add_tmp64.i.i.i, %endif60.i.i.i ]
  store i8 101, i8* %.055.i.i.i, align 1
  %169 = getelementptr i8, i8* %.055.i.i.i, i64 1
  %add_tmp76.i.i.i = add i32 %157, %add_tmp257.i.i
  %sub_tmp77.i.i.i = add i32 %add_tmp76.i.i.i, -1
  %170 = icmp slt i32 %sub_tmp77.i.i.i, 0
  br i1 %170, label %then79.i.i.i, label %else83.i.i.i

then79.i.i.i:                                     ; preds = %endif71.i.i.i
  store i8 45, i8* %169, align 1
  %unary_minus_tmp.i55.i.i = sub i32 1, %add_tmp76.i.i.i
  br label %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_32.0P.builtin.uint8.0P.builtin.uint8.exit.i.i"

else83.i.i.i:                                     ; preds = %endif71.i.i.i
  store i8 43, i8* %169, align 1
  br label %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_32.0P.builtin.uint8.0P.builtin.uint8.exit.i.i"

"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_32.0P.builtin.uint8.0P.builtin.uint8.exit.i.i": ; preds = %else83.i.i.i, %then79.i.i.i
  %.0.i56.i.i = phi i32 [ %unary_minus_tmp.i55.i.i, %then79.i.i.i ], [ %sub_tmp77.i.i.i, %else83.i.i.i ]
  %.1.i57.i.i = getelementptr i8, i8* %.055.i.i.i, i64 2
  %mul_tmp89.i.i.i = shl i32 %.0.i56.i.i, 1
  %171 = sext i32 %mul_tmp89.i.i.i to i64
  %ptr_add_tmp90.i58.i.i = getelementptr [200 x i8], [200 x i8]* @std.ryu.DIGIT_TABLE, i64 0, i64 %171
  %172 = bitcast i8* %ptr_add_tmp90.i58.i.i to i16*
  %173 = bitcast i8* %.1.i57.i.i to i16*
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 1
  %ptr_add_tmp92.i.i.i = getelementptr i8, i8* %.055.i.i.i, i64 4
  br label %func.std.ryu.f2s_shortest..2.builtin.float32.0P.builtin.uint8.0P.builtin.uint8.exit

func.std.ryu.f2s_shortest..2.builtin.float32.0P.builtin.uint8.0P.builtin.uint8.exit: ; preds = %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i, %endif91.i.i.i, %then97.i.i.i, %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_32.0P.builtin.uint8.0P.builtin.uint8.exit.i.i"
  %common.ret.op.i = phi i8* [ %ptr_add_tmp15.i.i, %func.std.ryu.copy_short_special_str..4.0P.builtin.uint8.builtin.bool.builtin.bool.builtin.bool.0P.builtin.uint8.exit.i ], [ %ptr_add_tmp92.i.i.i, %"func.std.ryu.to_chars_scientific..2.struct.std::ryu::floating_decimal_32.0P.builtin.uint8.0P.builtin.uint8.exit.i.i" ], [ %133, %then97.i.i.i ], [ %ptr_add_tmp95.i.i.i, %endif91.i.i.i ]
  ret i8* %common.ret.op.i
}

; Function Attrs: nofree nosync nounwind
define i32 @s2d_str(i8* %0, i8* %1, double* nocapture writeonly %2) local_unnamed_addr #0 {
alloca:
  %3 = ptrtoint i8* %1 to i64
  %4 = ptrtoint i8* %0 to i64
  %5 = sub i64 %3, %4
  %cast_tmp.i = trunc i64 %5 to i32
  %6 = icmp eq i32 %cast_tmp.i, 0
  br i1 %6, label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit, label %endif.i.i

endif.i.i:                                        ; preds = %alloca
  %load_tmp5.i.i = load i8, i8* %0, align 1
  %7 = icmp eq i8 %load_tmp5.i.i, 45
  %spec.select300.i.i = zext i1 %7 to i32
  %8 = icmp slt i32 %spec.select300.i.i, %cast_tmp.i
  br i1 %8, label %for.preheader.i.i, label %endif113.i.i

for.preheader.i.i:                                ; preds = %endif.i.i
  %9 = zext i1 %7 to i64
  %wide.trip.count.i.i = and i64 %5, 4294967295
  br label %for.i.i

for_iteration.i.i:                                ; preds = %endif30.i.i, %then17.i.i
  %.1278.i.i = phi i64 [ %add_tmp.i.i, %endif30.i.i ], [ %.0277339.i.i, %then17.i.i ]
  %.1273.i.i = phi i32 [ %.0272340.i.i, %endif30.i.i ], [ %11, %then17.i.i ]
  %.1.i.i = phi i32 [ %spec.select301.i.i, %endif30.i.i ], [ %.0341.i.i, %then17.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %endif117.thread.i.i, label %for.i.i

for.i.i:                                          ; preds = %for_iteration.i.i, %for.preheader.i.i
  %indvars.iv.i.i = phi i64 [ %9, %for.preheader.i.i ], [ %indvars.iv.next.i.i, %for_iteration.i.i ]
  %.0341.i.i = phi i32 [ 0, %for.preheader.i.i ], [ %.1.i.i, %for_iteration.i.i ]
  %.0272340.i.i = phi i32 [ %cast_tmp.i, %for.preheader.i.i ], [ %.1273.i.i, %for_iteration.i.i ]
  %.0277339.i.i = phi i64 [ 0, %for.preheader.i.i ], [ %.1278.i.i, %for_iteration.i.i ]
  %ptr_add_tmp14.i.i = getelementptr i8, i8* %0, i64 %indvars.iv.i.i
  %load_tmp15.i.i = load i8, i8* %ptr_add_tmp14.i.i, align 1
  %cast_tmp.i.i = zext i8 %load_tmp15.i.i to i64
  %10 = icmp eq i8 %load_tmp15.i.i, 46
  br i1 %10, label %then17.i.i, label %endif23.i.i

then17.i.i:                                       ; preds = %for.i.i
  %.not299.i.i = icmp eq i32 %.0272340.i.i, %cast_tmp.i
  %11 = trunc i64 %indvars.iv.i.i to i32
  br i1 %.not299.i.i, label %for_iteration.i.i, label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit

endif23.i.i:                                      ; preds = %for.i.i
  %12 = add i8 %load_tmp15.i.i, -58
  %13 = icmp ult i8 %12, -10
  br i1 %13, label %bool_and_rhs.i.i, label %endif27.i.i

endif27.i.i:                                      ; preds = %endif23.i.i
  %14 = icmp sgt i32 %.0341.i.i, 16
  br i1 %14, label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit, label %endif30.i.i

endif30.i.i:                                      ; preds = %endif27.i.i
  %mul_tmp.i.i = mul i64 %.0277339.i.i, 10
  %sub_tmp.i.i = add nuw nsw i64 %cast_tmp.i.i, 4294967248
  %cast_tmp33.i.i = and i64 %sub_tmp.i.i, 4294967295
  %add_tmp.i.i = add i64 %cast_tmp33.i.i, %mul_tmp.i.i
  %.not298.i.i = icmp ne i64 %add_tmp.i.i, 0
  %15 = zext i1 %.not298.i.i to i32
  %spec.select301.i.i = add nsw i32 %.0341.i.i, %15
  br label %for_iteration.i.i

bool_and_rhs.i.i:                                 ; preds = %endif23.i.i
  %16 = trunc i64 %indvars.iv.i.i to i32
  switch i8 %load_tmp15.i.i, label %endif113.i.i [
    i8 101, label %then53.i.i
    i8 69, label %then53.i.i
  ]

then53.i.i:                                       ; preds = %bool_and_rhs.i.i, %bool_and_rhs.i.i
  %17 = add nuw nsw i32 %16, 1
  %18 = icmp slt i32 %17, %cast_tmp.i
  br i1 %18, label %bool_and_rhs58.i.i, label %endif81.i.i

bool_and_rhs58.i.i:                               ; preds = %then53.i.i
  %19 = zext i32 %17 to i64
  %ptr_add_tmp61.i.i = getelementptr i8, i8* %0, i64 %19
  %load_tmp62.i.i = load i8, i8* %ptr_add_tmp61.i.i, align 1
  switch i8 %load_tmp62.i.i, label %endif81.i.i [
    i8 45, label %then74.i.i
    i8 43, label %then74.i.i
  ]

then74.i.i:                                       ; preds = %bool_and_rhs58.i.i, %bool_and_rhs58.i.i
  %20 = icmp eq i8 %load_tmp62.i.i, 45
  %21 = add nuw nsw i32 %16, 2
  br label %endif81.i.i

endif81.i.i:                                      ; preds = %then74.i.i, %bool_and_rhs58.i.i, %then53.i.i
  %.2290.i.i = phi i32 [ %21, %then74.i.i ], [ %17, %then53.i.i ], [ %17, %bool_and_rhs58.i.i ]
  %.0286.i.i = phi i1 [ %20, %then74.i.i ], [ false, %then53.i.i ], [ false, %bool_and_rhs58.i.i ]
  %22 = icmp slt i32 %.2290.i.i, %cast_tmp.i
  br i1 %22, label %for88.preheader.i.i, label %endif113.i.i

for88.preheader.i.i:                              ; preds = %endif81.i.i
  %23 = sext i32 %.2290.i.i to i64
  br label %for88.i.i

for88.i.i:                                        ; preds = %endif112.i.i, %for88.preheader.i.i
  %indvars.iv365.i.i = phi i64 [ %23, %for88.preheader.i.i ], [ %indvars.iv.next366.i.i, %endif112.i.i ]
  %.0269347.i.i = phi i32 [ 0, %for88.preheader.i.i ], [ %.1270.i.i, %endif112.i.i ]
  %.0279346.i.i = phi i32 [ 0, %for88.preheader.i.i ], [ %.1280.i.i, %endif112.i.i ]
  %ptr_add_tmp91.i.i = getelementptr i8, i8* %0, i64 %indvars.iv365.i.i
  %load_tmp92.i.i = load i8, i8* %ptr_add_tmp91.i.i, align 1
  %cast_tmp93.i.i = zext i8 %load_tmp92.i.i to i32
  %24 = add i8 %load_tmp92.i.i, -58
  %25 = icmp ult i8 %24, -10
  br i1 %25, label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit, label %endif100.i.i

endif100.i.i:                                     ; preds = %for88.i.i
  %26 = icmp sgt i32 %.0269347.i.i, 3
  br i1 %26, label %endif112.i.i, label %else.i.i

else.i.i:                                         ; preds = %endif100.i.i
  %mul_tmp104.i.i = mul i32 %.0279346.i.i, 10
  %sub_tmp106.i.i = add i32 %mul_tmp104.i.i, -48
  %add_tmp107.i.i = add i32 %sub_tmp106.i.i, %cast_tmp93.i.i
  %.not297.i.i = icmp ne i32 %add_tmp107.i.i, 0
  %27 = zext i1 %.not297.i.i to i32
  %spec.select303.i.i = add nsw i32 %.0269347.i.i, %27
  br label %endif112.i.i

endif112.i.i:                                     ; preds = %else.i.i, %endif100.i.i
  %.1280.i.i = phi i32 [ %.0279346.i.i, %endif100.i.i ], [ %add_tmp107.i.i, %else.i.i ]
  %.1270.i.i = phi i32 [ %.0269347.i.i, %endif100.i.i ], [ %spec.select303.i.i, %else.i.i ]
  %indvars.iv.next366.i.i = add nsw i64 %indvars.iv365.i.i, 1
  %lftr.wideiv.i.i = trunc i64 %indvars.iv.next366.i.i to i32
  %exitcond368.not.i.i = icmp eq i32 %lftr.wideiv.i.i, %cast_tmp.i
  br i1 %exitcond368.not.i.i, label %endif117.i.i, label %for88.i.i

endif113.i.i:                                     ; preds = %endif81.i.i, %bool_and_rhs.i.i, %endif.i.i
  %.0277333.i.i = phi i64 [ %.0277339.i.i, %bool_and_rhs.i.i ], [ %.0277339.i.i, %endif81.i.i ], [ 0, %endif.i.i ]
  %.0272330.i.i = phi i32 [ %.0272340.i.i, %bool_and_rhs.i.i ], [ %.0272340.i.i, %endif81.i.i ], [ %cast_tmp.i, %endif.i.i ]
  %.0327.i.i = phi i32 [ %.0341.i.i, %bool_and_rhs.i.i ], [ %.0341.i.i, %endif81.i.i ], [ 0, %endif.i.i ]
  %.4292.i.i = phi i32 [ %16, %bool_and_rhs.i.i ], [ %.2290.i.i, %endif81.i.i ], [ %spec.select300.i.i, %endif.i.i ]
  %.1287.i.i = phi i1 [ false, %bool_and_rhs.i.i ], [ %.0286.i.i, %endif81.i.i ], [ false, %endif.i.i ]
  %.0275.i.i = phi i32 [ %cast_tmp.i, %bool_and_rhs.i.i ], [ %16, %endif81.i.i ], [ %cast_tmp.i, %endif.i.i ]
  %28 = icmp slt i32 %.4292.i.i, %cast_tmp.i
  br i1 %28, label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit, label %endif117.i.i

endif117.i.i:                                     ; preds = %endif112.i.i, %endif113.i.i
  %.2271383.i.i = phi i32 [ 0, %endif113.i.i ], [ %.1270.i.i, %endif112.i.i ]
  %.0275382.i.i = phi i32 [ %.0275.i.i, %endif113.i.i ], [ %16, %endif112.i.i ]
  %.2281381.i.i = phi i32 [ 0, %endif113.i.i ], [ %.1280.i.i, %endif112.i.i ]
  %.1287380.i.i = phi i1 [ %.1287.i.i, %endif113.i.i ], [ %.0286.i.i, %endif112.i.i ]
  %.0327379.i.i = phi i32 [ %.0327.i.i, %endif113.i.i ], [ %.0341.i.i, %endif112.i.i ]
  %.0272330378.i.i = phi i32 [ %.0272330.i.i, %endif113.i.i ], [ %.0272340.i.i, %endif112.i.i ]
  %.0277333377.i.i = phi i64 [ %.0277333.i.i, %endif113.i.i ], [ %.0277339.i.i, %endif112.i.i ]
  %unary_minus_tmp.i.i = sub i32 0, %.2281381.i.i
  %spec.select410.i.i = select i1 %.1287380.i.i, i32 %unary_minus_tmp.i.i, i32 %.2281381.i.i
  br label %endif117.thread.i.i

endif117.thread.i.i:                              ; preds = %for_iteration.i.i, %endif117.i.i
  %.0277333377397.i.i = phi i64 [ %.0277333377.i.i, %endif117.i.i ], [ %.1278.i.i, %for_iteration.i.i ]
  %.0272330378396.i.i = phi i32 [ %.0272330378.i.i, %endif117.i.i ], [ %.1273.i.i, %for_iteration.i.i ]
  %.0327379395.i.i = phi i32 [ %.0327379.i.i, %endif117.i.i ], [ %.1.i.i, %for_iteration.i.i ]
  %.1287380394.i.i = phi i1 [ %.1287380.i.i, %endif117.i.i ], [ false, %for_iteration.i.i ]
  %.0275382393.i.i = phi i32 [ %.0275382.i.i, %endif117.i.i ], [ %cast_tmp.i, %for_iteration.i.i ]
  %.2271383392.i.i = phi i32 [ %.2271383.i.i, %endif117.i.i ], [ 0, %for_iteration.i.i ]
  %29 = phi i32 [ %spec.select410.i.i, %endif117.i.i ], [ 0, %for_iteration.i.i ]
  %30 = icmp sgt i32 %.0275382393.i.i, %.0272330378396.i.i
  %31 = xor i32 %.0272330378396.i.i, -1
  %sub_tmp128.i.i = add i32 %.0275382393.i.i, %31
  %sub_tmp130.i.i = select i1 %30, i32 %sub_tmp128.i.i, i32 0
  %.4.i.i = sub i32 %29, %sub_tmp130.i.i
  %unary_minus_tmp207.i.i = sub i32 0, %.4.i.i
  %32 = icmp sgt i32 %.2271383392.i.i, 3
  %spec.select.i.i = select i1 %32, i1 %.1287380394.i.i, i1 false
  br i1 %spec.select.i.i, label %then147.i.i, label %bool_or_rhs137.i.i

bool_or_rhs137.i.i:                               ; preds = %endif117.thread.i.i
  %add_tmp140.i.i = add i32 %.4.i.i, %.0327379395.i.i
  %33 = icmp slt i32 %add_tmp140.i.i, -323
  %34 = icmp eq i64 %.0277333377397.i.i, 0
  %or.cond.i.i = select i1 %33, i1 true, i1 %34
  br i1 %or.cond.i.i, label %then147.i.i, label %else152.i.i

then147.i.i:                                      ; preds = %bool_or_rhs137.i.i, %endif117.thread.i.i
  %35 = select i1 %7, double -0.000000e+00, double 0.000000e+00
  store double %35, double* %2, align 8
  br label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit

else152.i.i:                                      ; preds = %bool_or_rhs137.i.i
  %36 = icmp sgt i32 %add_tmp140.i.i, 309
  %bool_or_tmp159.i.i = select i1 %32, i1 true, i1 %36
  br i1 %bool_or_tmp159.i.i, label %then160.i.i, label %endif167.i.i

then160.i.i:                                      ; preds = %else152.i.i
  %37 = select i1 %7, double 0xFFF0000000000000, double 0x7FF0000000000000
  store double %37, double* %2, align 8
  br label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit

endif167.i.i:                                     ; preds = %else152.i.i
  %38 = icmp sgt i32 %.4.i.i, -1
  %39 = tail call i64 @llvm.ctlz.i64(i64 %.0277333377397.i.i, i1 false) #8, !range !0
  %cast_tmp.i.i.i = trunc i64 %39 to i32
  br i1 %38, label %then169.i.i, label %else202.i.i

then169.i.i:                                      ; preds = %endif167.i.i
  %mul_tmp.i.i.i = mul nuw nsw i32 %.4.i.i, 1217359
  %rshift_tmp.i.i.i = lshr i32 %mul_tmp.i.i.i, 19
  %add_tmp172.i.i = sub nsw i32 10, %cast_tmp.i.i.i
  %add_tmp174.i.i = add nsw i32 %add_tmp172.i.i, %.4.i.i
  %sub_tmp175.i.i = add nsw i32 %add_tmp174.i.i, %rshift_tmp.i.i.i
  %sub_tmp178.i.i = sub nsw i32 %sub_tmp175.i.i, %.4.i.i
  %add_tmp.i.neg.i.i = xor i32 %rshift_tmp.i.i.i, -1
  %sub_tmp180.i.i = add nsw i32 %sub_tmp178.i.i, %add_tmp.i.neg.i.i
  %40 = icmp sgt i32 %sub_tmp180.i.i, -126
  tail call void @llvm.assume(i1 %40) #8
  %41 = icmp ult i32 %.4.i.i, 326
  tail call void @llvm.assume(i1 %41) #8
  %42 = zext i32 %.4.i.i to i64
  %43 = getelementptr [326 x [2 x i64]], [326 x [2 x i64]]* @std.ryu.DOUBLE_POW5_SPLIT, i64 0, i64 %42, i64 0
  %.val.i.i = load i64, i64* %43, align 16
  %.idx.i.i = getelementptr [326 x [2 x i64]], [326 x [2 x i64]]* @std.ryu.DOUBLE_POW5_SPLIT, i64 0, i64 %42, i64 1
  %.idx.val.i.i = load i64, i64* %.idx.i.i, align 8
  %rshift_tmp.i.i9.i = lshr i64 %.0277333377397.i.i, 32
  %rshift_tmp6.i.i10.i = lshr i64 %.idx.val.i.i, 32
  %cast_tmp9.i.i11.i = and i64 %.0277333377397.i.i, 4294967295
  %cast_tmp11.i.i12.i = and i64 %.idx.val.i.i, 4294967295
  %mul_tmp.i.i13.i = mul nuw i64 %cast_tmp11.i.i12.i, %cast_tmp9.i.i11.i
  %mul_tmp16.i.i14.i = mul nuw i64 %rshift_tmp6.i.i10.i, %cast_tmp9.i.i11.i
  %mul_tmp21.i.i15.i = mul nuw i64 %cast_tmp11.i.i12.i, %rshift_tmp.i.i9.i
  %mul_tmp26.i.i16.i = mul nuw i64 %rshift_tmp6.i.i10.i, %rshift_tmp.i.i9.i
  %rshift_tmp30.i.i17.i = lshr i64 %mul_tmp.i.i13.i, 32
  %add_tmp.i.i18.i = add nuw i64 %rshift_tmp30.i.i17.i, %mul_tmp21.i.i15.i
  %rshift_tmp38.i.i19.i = lshr i64 %add_tmp.i.i18.i, 32
  %cast_tmp42.i.i20.i = and i64 %add_tmp.i.i18.i, 4294967295
  %add_tmp43.i.i21.i = add nuw i64 %cast_tmp42.i.i20.i, %mul_tmp16.i.i14.i
  %rshift_tmp47.i.i22.i = lshr i64 %add_tmp43.i.i21.i, 32
  %add_tmp52.i.i23.i = add nuw i64 %rshift_tmp38.i.i19.i, %mul_tmp26.i.i16.i
  %add_tmp55.i.i24.i = add nuw i64 %add_tmp52.i.i23.i, %rshift_tmp47.i.i22.i
  %lshift_tmp.i.i25.i = shl i64 %add_tmp43.i.i21.i, 32
  %cast_tmp59.i.i26.i = and i64 %mul_tmp.i.i13.i, 4294967295
  %bit_or_tmp.i.i27.i = or i64 %lshift_tmp.i.i25.i, %cast_tmp59.i.i26.i
  %rshift_tmp6.i16.i28.i = lshr i64 %.val.i.i, 32
  %cast_tmp11.i18.i29.i = and i64 %.val.i.i, 4294967295
  %mul_tmp.i19.i30.i = mul nuw i64 %cast_tmp11.i18.i29.i, %cast_tmp9.i.i11.i
  %mul_tmp16.i20.i31.i = mul nuw i64 %rshift_tmp6.i16.i28.i, %cast_tmp9.i.i11.i
  %mul_tmp21.i21.i32.i = mul nuw i64 %cast_tmp11.i18.i29.i, %rshift_tmp.i.i9.i
  %mul_tmp26.i22.i33.i = mul nuw i64 %rshift_tmp6.i16.i28.i, %rshift_tmp.i.i9.i
  %rshift_tmp30.i23.i34.i = lshr i64 %mul_tmp.i19.i30.i, 32
  %add_tmp.i24.i35.i = add nuw i64 %rshift_tmp30.i23.i34.i, %mul_tmp21.i21.i32.i
  %rshift_tmp38.i25.i36.i = lshr i64 %add_tmp.i24.i35.i, 32
  %cast_tmp42.i26.i37.i = and i64 %add_tmp.i24.i35.i, 4294967295
  %add_tmp43.i27.i38.i = add nuw i64 %cast_tmp42.i26.i37.i, %mul_tmp16.i20.i31.i
  %rshift_tmp47.i28.i39.i = lshr i64 %add_tmp43.i27.i38.i, 32
  %add_tmp52.i29.i40.i = add nuw i64 %rshift_tmp38.i25.i36.i, %mul_tmp26.i22.i33.i
  %add_tmp55.i30.i41.i = add nuw i64 %add_tmp52.i29.i40.i, %rshift_tmp47.i28.i39.i
  %add_tmp.i42.i = add i64 %bit_or_tmp.i.i27.i, %add_tmp55.i30.i41.i
  %44 = icmp ult i64 %add_tmp.i42.i, %add_tmp55.i30.i41.i
  %45 = zext i1 %44 to i64
  %spec.select.i43.i = add nuw i64 %add_tmp55.i.i24.i, %45
  %sub_tmp.i44.i = add nsw i32 %sub_tmp180.i.i, 61
  %46 = icmp ne i32 %sub_tmp.i44.i, 0
  tail call void @llvm.assume(i1 %46) #8
  %sub_tmp.i.i45.i = sub nsw i32 3, %sub_tmp180.i.i
  %47 = zext i32 %sub_tmp.i.i45.i to i64
  %lshift_tmp.i34.i46.i = shl i64 %spec.select.i43.i, %47
  %48 = zext i32 %sub_tmp.i44.i to i64
  %rshift_tmp.i35.i47.i = lshr i64 %add_tmp.i42.i, %48
  %bit_or_tmp.i36.i48.i = or i64 %lshift_tmp.i34.i46.i, %rshift_tmp.i35.i47.i
  %49 = icmp slt i32 %sub_tmp175.i.i, %.4.i.i
  br i1 %49, label %endif227.i.i, label %bool_or_rhs189.i.i

bool_or_rhs189.i.i:                               ; preds = %then169.i.i
  %50 = icmp slt i32 %sub_tmp178.i.i, 64
  br i1 %50, label %bool_and_rhs193.i.i, label %endif227.i.i

bool_and_rhs193.i.i:                              ; preds = %bool_or_rhs189.i.i
  %51 = icmp ult i32 %sub_tmp178.i.i, 64
  tail call void @llvm.assume(i1 %51) #8
  %52 = zext i32 %sub_tmp178.i.i to i64
  %notmask.i.i.i = shl nsw i64 -1, %52
  %sub_tmp.i308.i.i = xor i64 %notmask.i.i.i, -1
  %bit_and_tmp.i.i.i = and i64 %.0277333377397.i.i, %sub_tmp.i308.i.i
  %53 = icmp eq i64 %bit_and_tmp.i.i.i, 0
  br label %endif227.i.i

else202.i.i:                                      ; preds = %endif167.i.i
  %mul_tmp.i.i311.i.i = mul i32 %.4.i.i, -1217359
  %rshift_tmp.i.i312.i.i = lshr i32 %mul_tmp.i.i311.i.i, 19
  %add_tmp.i313.neg.i.i = xor i32 %rshift_tmp.i.i312.i.i, -1
  %54 = sub nsw i32 10, %cast_tmp.i.i.i
  %sub_tmp208.i.i = add i32 %54, %.4.i.i
  %sub_tmp209.i.i = add i32 %sub_tmp208.i.i, %add_tmp.i313.neg.i.i
  %55 = sub i32 125, %.4.i.i
  %add_tmp215.i.i = add nuw i32 %55, %rshift_tmp.i.i312.i.i
  %add_tmp217.i.i = add i32 %add_tmp215.i.i, %sub_tmp209.i.i
  %56 = icmp ult i32 %unary_minus_tmp207.i.i, 342
  tail call void @llvm.assume(i1 %56) #8
  %57 = zext i32 %unary_minus_tmp207.i.i to i64
  %58 = getelementptr [342 x [2 x i64]], [342 x [2 x i64]]* @std.ryu.DOUBLE_POW5_INV_SPLIT, i64 0, i64 %57, i64 0
  %.val306.i.i = load i64, i64* %58, align 16
  %.idx307.i.i = getelementptr [342 x [2 x i64]], [342 x [2 x i64]]* @std.ryu.DOUBLE_POW5_INV_SPLIT, i64 0, i64 %57, i64 1
  %.idx307.val.i.i = load i64, i64* %.idx307.i.i, align 8
  %rshift_tmp.i.i4.i = lshr i64 %.0277333377397.i.i, 32
  %rshift_tmp6.i.i.i = lshr i64 %.idx307.val.i.i, 32
  %cast_tmp9.i.i.i = and i64 %.0277333377397.i.i, 4294967295
  %cast_tmp11.i.i.i = and i64 %.idx307.val.i.i, 4294967295
  %mul_tmp.i.i5.i = mul nuw i64 %cast_tmp11.i.i.i, %cast_tmp9.i.i.i
  %mul_tmp16.i.i.i = mul nuw i64 %rshift_tmp6.i.i.i, %cast_tmp9.i.i.i
  %mul_tmp21.i.i.i = mul nuw i64 %cast_tmp11.i.i.i, %rshift_tmp.i.i4.i
  %rshift_tmp30.i.i.i = lshr i64 %mul_tmp.i.i5.i, 32
  %add_tmp.i.i.i = add nuw i64 %rshift_tmp30.i.i.i, %mul_tmp21.i.i.i
  %cast_tmp42.i.i.i = and i64 %add_tmp.i.i.i, 4294967295
  %add_tmp43.i.i.i = add nuw i64 %cast_tmp42.i.i.i, %mul_tmp16.i.i.i
  %lshift_tmp.i.i.i = shl i64 %add_tmp43.i.i.i, 32
  %cast_tmp59.i.i.i = and i64 %mul_tmp.i.i5.i, 4294967295
  %bit_or_tmp.i.i.i = or i64 %lshift_tmp.i.i.i, %cast_tmp59.i.i.i
  %rshift_tmp6.i16.i.i = lshr i64 %.val306.i.i, 32
  %cast_tmp11.i18.i.i = and i64 %.val306.i.i, 4294967295
  %mul_tmp.i19.i.i = mul nuw i64 %cast_tmp11.i18.i.i, %cast_tmp9.i.i.i
  %mul_tmp16.i20.i.i = mul nuw i64 %rshift_tmp6.i16.i.i, %cast_tmp9.i.i.i
  %mul_tmp21.i21.i.i = mul nuw i64 %cast_tmp11.i18.i.i, %rshift_tmp.i.i4.i
  %mul_tmp26.i22.i.i = mul nuw i64 %rshift_tmp6.i16.i.i, %rshift_tmp.i.i4.i
  %rshift_tmp30.i23.i.i = lshr i64 %mul_tmp.i19.i.i, 32
  %add_tmp.i24.i.i = add nuw i64 %rshift_tmp30.i23.i.i, %mul_tmp21.i21.i.i
  %rshift_tmp38.i25.i.i = lshr i64 %add_tmp.i24.i.i, 32
  %cast_tmp42.i26.i.i = and i64 %add_tmp.i24.i.i, 4294967295
  %add_tmp43.i27.i.i = add nuw i64 %cast_tmp42.i26.i.i, %mul_tmp16.i20.i.i
  %rshift_tmp47.i28.i.i = lshr i64 %add_tmp43.i27.i.i, 32
  %add_tmp52.i29.i.i = add nuw i64 %rshift_tmp38.i25.i.i, %mul_tmp26.i22.i.i
  %add_tmp55.i30.i.i = add nuw i64 %add_tmp52.i29.i.i, %rshift_tmp47.i28.i.i
  %add_tmp.i6.i = add i64 %bit_or_tmp.i.i.i, %add_tmp55.i30.i.i
  %59 = icmp ult i64 %add_tmp.i6.i, %add_tmp55.i30.i.i
  %sub_tmp.i8.i = add nsw i32 %add_tmp217.i.i, -64
  %60 = icmp ne i32 %sub_tmp.i8.i, 0
  tail call void @llvm.assume(i1 %60) #8
  %sub_tmp.i.i.i = sub i32 128, %add_tmp217.i.i
  %61 = zext i32 %sub_tmp.i8.i to i64
  br label %for_condition_check.i.i.i.i

for_condition_check.i.i.i.i:                      ; preds = %for_condition_check.i.i.i.i, %else202.i.i
  %.014.i.i.i.i = phi i64 [ %.0277333377397.i.i, %else202.i.i ], [ %mul_tmp.i.i317.i.i, %for_condition_check.i.i.i.i ]
  %.0.i.i.i.i = phi i32 [ 0, %else202.i.i ], [ %64, %for_condition_check.i.i.i.i ]
  %62 = icmp ne i64 %.014.i.i.i.i, 0
  tail call void @llvm.assume(i1 %62) #8
  %mul_tmp.i.i317.i.i = mul i64 %.014.i.i.i.i, -3689348814741910323
  %63 = icmp ugt i64 %mul_tmp.i.i317.i.i, 3689348814741910323
  %64 = add i32 %.0.i.i.i.i, 1
  br i1 %63, label %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i, label %for_condition_check.i.i.i.i

func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i: ; preds = %for_condition_check.i.i.i.i
  %mul_tmp26.i.i.i = mul nuw i64 %rshift_tmp6.i.i.i, %rshift_tmp.i.i4.i
  %rshift_tmp38.i.i.i = lshr i64 %add_tmp.i.i.i, 32
  %add_tmp52.i.i.i = add nuw i64 %rshift_tmp38.i.i.i, %mul_tmp26.i.i.i
  %65 = zext i1 %59 to i64
  %66 = zext i32 %sub_tmp.i.i.i to i64
  %rshift_tmp.i35.i.i = lshr i64 %add_tmp.i6.i, %61
  %rshift_tmp47.i.i.i = lshr i64 %add_tmp43.i.i.i, 32
  %add_tmp55.i.i.i = add nuw i64 %add_tmp52.i.i.i, %rshift_tmp47.i.i.i
  %spec.select.i7.i = add nuw i64 %add_tmp55.i.i.i, %65
  %lshift_tmp.i34.i.i = shl i64 %spec.select.i7.i, %66
  %bit_or_tmp.i36.i.i = or i64 %lshift_tmp.i34.i.i, %rshift_tmp.i35.i.i
  %67 = icmp uge i32 %.0.i.i.i.i, %unary_minus_tmp207.i.i
  br label %endif227.i.i

endif227.i.i:                                     ; preds = %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i, %bool_and_rhs193.i.i, %bool_or_rhs189.i.i, %then169.i.i
  %.0284.i.i = phi i32 [ %sub_tmp209.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ %sub_tmp175.i.i, %bool_or_rhs189.i.i ], [ %sub_tmp175.i.i, %bool_and_rhs193.i.i ], [ %sub_tmp175.i.i, %then169.i.i ]
  %.0283.i.i = phi i64 [ %bit_or_tmp.i36.i.i, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ %bit_or_tmp.i36.i48.i, %bool_or_rhs189.i.i ], [ %bit_or_tmp.i36.i48.i, %bool_and_rhs193.i.i ], [ %bit_or_tmp.i36.i48.i, %then169.i.i ]
  %.0282.i.i = phi i1 [ %67, %func.std.ryu.multipleOfPowerOf5..2.builtin.uint64.builtin.uint32.builtin.bool.exit.i.i ], [ false, %bool_or_rhs189.i.i ], [ %53, %bool_and_rhs193.i.i ], [ true, %then169.i.i ]
  %68 = tail call i64 @llvm.ctlz.i64(i64 %.0283.i.i, i1 false) #8, !range !0
  %cast_tmp.i318.i.i = trunc i64 %68 to i32
  %69 = sub i32 %.0284.i.i, %cast_tmp.i318.i.i
  %add_tmp231.i.i = add i32 %69, 1086
  %70 = icmp sgt i32 %add_tmp231.i.i, 0
  %load_tmp2.sroa.speculated.i.i.i = select i1 %70, i32 %add_tmp231.i.i, i32 0
  %71 = icmp ugt i32 %load_tmp2.sroa.speculated.i.i.i, 2046
  br i1 %71, label %then233.i.i, label %endif240.i.i

then233.i.i:                                      ; preds = %endif227.i.i
  %72 = select i1 %7, double 0xFFF0000000000000, double 0x7FF0000000000000
  store double %72, double* %2, align 8
  br label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit

endif240.i.i:                                     ; preds = %endif227.i.i
  %73 = icmp slt i32 %add_tmp231.i.i, 1
  %sub_tmp246.i.i = sub i32 -1074, %.0284.i.i
  %sub_tmp250.i.i = sub i32 -1075, %.0284.i.i
  %sub_tmp252.i.i = add i32 %sub_tmp250.i.i, %load_tmp2.sroa.speculated.i.i.i
  %.0274.i.i = select i1 %73, i32 %sub_tmp246.i.i, i32 %sub_tmp252.i.i
  %74 = icmp sgt i32 %.0274.i.i, -1
  tail call void @llvm.assume(i1 %74) #8
  %sub_tmp257.i.i = add nsw i32 %.0274.i.i, -1
  %75 = zext i32 %sub_tmp257.i.i to i64
  %76 = shl nuw i64 1, %75
  %77 = and i64 %76, %.0283.i.i
  %.not.i.i = icmp eq i64 %77, 0
  br i1 %.not.i.i, label %bool_and_end276.i.i, label %bool_and_rhs267.i.i

bool_and_rhs267.i.i:                              ; preds = %endif240.i.i
  %notmask.i.i = shl nsw i64 -1, %75
  %sub_tmp259.i.i = xor i64 %notmask.i.i, -1
  %bit_and_tmp.i.i = and i64 %.0283.i.i, %sub_tmp259.i.i
  %78 = icmp eq i64 %bit_and_tmp.i.i, 0
  %bit_and_tmp261.i.i = and i1 %.0282.i.i, %78
  br i1 %bit_and_tmp261.i.i, label %bool_or_rhs269.i.i, label %bool_and_end276.i.i

bool_or_rhs269.i.i:                               ; preds = %bool_and_rhs267.i.i
  %79 = zext i32 %.0274.i.i to i64
  %80 = shl nuw i64 1, %79
  %81 = and i64 %80, %.0283.i.i
  %82 = icmp ne i64 %81, 0
  br label %bool_and_end276.i.i

bool_and_end276.i.i:                              ; preds = %bool_or_rhs269.i.i, %bool_and_rhs267.i.i, %endif240.i.i
  %bool_and_tmp277.i.i = phi i1 [ false, %endif240.i.i ], [ true, %bool_and_rhs267.i.i ], [ %82, %bool_or_rhs269.i.i ]
  %83 = zext i32 %.0274.i.i to i64
  %rshift_tmp280.i.i = lshr i64 %.0283.i.i, %83
  %cast_tmp282.i.i = zext i1 %bool_and_tmp277.i.i to i64
  %add_tmp283.i.i = add i64 %rshift_tmp280.i.i, %cast_tmp282.i.i
  %84 = icmp ult i64 %add_tmp283.i.i, 9007199254740993
  tail call void @llvm.assume(i1 %84) #8
  %bit_and_tmp286.i.i = and i64 %add_tmp283.i.i, 4503599627370495
  %85 = icmp eq i64 %bit_and_tmp286.i.i, 0
  %spec.select2.i.i = select i1 %85, i1 %bool_and_tmp277.i.i, i1 false
  %86 = zext i1 %spec.select2.i.i to i32
  %spec.select305.i.i = add nuw nsw i32 %load_tmp2.sroa.speculated.i.i.i, %86
  %lshift_tmp297.i.i = select i1 %7, i64 2048, i64 0
  %cast_tmp299.i.i = zext i32 %spec.select305.i.i to i64
  %bit_or_tmp300.i.i = or i64 %lshift_tmp297.i.i, %cast_tmp299.i.i
  %lshift_tmp301.i.i = shl i64 %bit_or_tmp300.i.i, 52
  %bit_or_tmp303.i.i = or i64 %lshift_tmp301.i.i, %bit_and_tmp286.i.i
  %87 = bitcast double* %2 to i64*
  store i64 %bit_or_tmp303.i.i, i64* %87, align 8
  br label %func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit

func.std.ryu.s2d_str..2.builtin.str.0P.builtin.float64.builtin.uint32.exit: ; preds = %then17.i.i, %endif27.i.i, %for88.i.i, %alloca, %endif113.i.i, %then147.i.i, %then160.i.i, %then233.i.i, %bool_and_end276.i.i
  %common.ret.op.i.i = phi i32 [ 0, %then147.i.i ], [ 0, %then160.i.i ], [ 0, %then233.i.i ], [ 0, %bool_and_end276.i.i ], [ 1, %alloca ], [ 3, %endif113.i.i ], [ 3, %for88.i.i ], [ 2, %endif27.i.i ], [ 3, %then17.i.i ]
  ret i32 %common.ret.op.i.i
}

; Function Attrs: nofree nosync nounwind
define i32 @s2f_str(i8* %0, i8* %1, float* nocapture writeonly %2) local_unnamed_addr #0 {
alloca:
  %3 = ptrtoint i8* %1 to i64
  %4 = ptrtoint i8* %0 to i64
  %5 = sub i64 %3, %4
  %cast_tmp.i = trunc i64 %5 to i32
  %6 = icmp eq i32 %cast_tmp.i, 0
  br i1 %6, label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit, label %endif.i.i

endif.i.i:                                        ; preds = %alloca
  %load_tmp5.i.i = load i8, i8* %0, align 1
  %7 = icmp eq i8 %load_tmp5.i.i, 45
  %spec.select305.i.i = zext i1 %7 to i32
  %8 = icmp slt i32 %spec.select305.i.i, %cast_tmp.i
  br i1 %8, label %for.preheader.i.i, label %endif113.i.i

for.preheader.i.i:                                ; preds = %endif.i.i
  %9 = zext i1 %7 to i64
  %wide.trip.count.i.i = and i64 %5, 4294967295
  br label %for.i.i

for_iteration.i.i:                                ; preds = %endif31.i.i, %then18.i.i
  %.1283.i.i = phi i32 [ %add_tmp.i.i, %endif31.i.i ], [ %.0282357.i.i, %then18.i.i ]
  %.1278.i.i = phi i32 [ %.0277358.i.i, %endif31.i.i ], [ %11, %then18.i.i ]
  %.1.i.i = phi i32 [ %spec.select306.i.i, %endif31.i.i ], [ %.0359.i.i, %then18.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %endif117.thread.i.i, label %for.i.i

for.i.i:                                          ; preds = %for_iteration.i.i, %for.preheader.i.i
  %indvars.iv.i.i = phi i64 [ %9, %for.preheader.i.i ], [ %indvars.iv.next.i.i, %for_iteration.i.i ]
  %.0359.i.i = phi i32 [ 0, %for.preheader.i.i ], [ %.1.i.i, %for_iteration.i.i ]
  %.0277358.i.i = phi i32 [ %cast_tmp.i, %for.preheader.i.i ], [ %.1278.i.i, %for_iteration.i.i ]
  %.0282357.i.i = phi i32 [ 0, %for.preheader.i.i ], [ %.1283.i.i, %for_iteration.i.i ]
  %ptr_add_tmp14.i.i = getelementptr i8, i8* %0, i64 %indvars.iv.i.i
  %load_tmp15.i.i = load i8, i8* %ptr_add_tmp14.i.i, align 1
  %cast_tmp16.i.i = zext i8 %load_tmp15.i.i to i32
  %10 = icmp eq i8 %load_tmp15.i.i, 46
  br i1 %10, label %then18.i.i, label %endif24.i.i

then18.i.i:                                       ; preds = %for.i.i
  %.not304.i.i = icmp eq i32 %.0277358.i.i, %cast_tmp.i
  %11 = trunc i64 %indvars.iv.i.i to i32
  br i1 %.not304.i.i, label %for_iteration.i.i, label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit

endif24.i.i:                                      ; preds = %for.i.i
  %12 = add i8 %load_tmp15.i.i, -58
  %13 = icmp ult i8 %12, -10
  br i1 %13, label %bool_and_rhs.i.i, label %endif28.i.i

endif28.i.i:                                      ; preds = %endif24.i.i
  %14 = icmp sgt i32 %.0359.i.i, 8
  br i1 %14, label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit, label %endif31.i.i

endif31.i.i:                                      ; preds = %endif28.i.i
  %mul_tmp.i.i = mul i32 %.0282357.i.i, 10
  %sub_tmp.i.i = add i32 %mul_tmp.i.i, -48
  %add_tmp.i.i = add i32 %sub_tmp.i.i, %cast_tmp16.i.i
  %.not303.i.i = icmp ne i32 %add_tmp.i.i, 0
  %15 = zext i1 %.not303.i.i to i32
  %spec.select306.i.i = add nsw i32 %.0359.i.i, %15
  br label %for_iteration.i.i

bool_and_rhs.i.i:                                 ; preds = %endif24.i.i
  %16 = trunc i64 %indvars.iv.i.i to i32
  switch i8 %load_tmp15.i.i, label %endif113.i.i [
    i8 101, label %then53.i.i
    i8 69, label %then53.i.i
  ]

then53.i.i:                                       ; preds = %bool_and_rhs.i.i, %bool_and_rhs.i.i
  %17 = add nuw nsw i32 %16, 1
  %18 = icmp slt i32 %17, %cast_tmp.i
  br i1 %18, label %bool_and_rhs58.i.i, label %endif81.i.i

bool_and_rhs58.i.i:                               ; preds = %then53.i.i
  %19 = zext i32 %17 to i64
  %ptr_add_tmp61.i.i = getelementptr i8, i8* %0, i64 %19
  %load_tmp62.i.i = load i8, i8* %ptr_add_tmp61.i.i, align 1
  switch i8 %load_tmp62.i.i, label %endif81.i.i [
    i8 45, label %then74.i.i
    i8 43, label %then74.i.i
  ]

then74.i.i:                                       ; preds = %bool_and_rhs58.i.i, %bool_and_rhs58.i.i
  %20 = icmp eq i8 %load_tmp62.i.i, 45
  %21 = add nuw nsw i32 %16, 2
  br label %endif81.i.i

endif81.i.i:                                      ; preds = %then74.i.i, %bool_and_rhs58.i.i, %then53.i.i
  %.2295.i.i = phi i32 [ %21, %then74.i.i ], [ %17, %then53.i.i ], [ %17, %bool_and_rhs58.i.i ]
  %.0291.i.i = phi i1 [ %20, %then74.i.i ], [ false, %then53.i.i ], [ false, %bool_and_rhs58.i.i ]
  %22 = icmp slt i32 %.2295.i.i, %cast_tmp.i
  br i1 %22, label %for88.preheader.i.i, label %endif113.i.i

for88.preheader.i.i:                              ; preds = %endif81.i.i
  %23 = sext i32 %.2295.i.i to i64
  br label %for88.i.i

for88.i.i:                                        ; preds = %endif112.i.i, %for88.preheader.i.i
  %indvars.iv384.i.i = phi i64 [ %23, %for88.preheader.i.i ], [ %indvars.iv.next385.i.i, %endif112.i.i ]
  %.0274365.i.i = phi i32 [ 0, %for88.preheader.i.i ], [ %.1275.i.i, %endif112.i.i ]
  %.0284364.i.i = phi i32 [ 0, %for88.preheader.i.i ], [ %.1285.i.i, %endif112.i.i ]
  %ptr_add_tmp91.i.i = getelementptr i8, i8* %0, i64 %indvars.iv384.i.i
  %load_tmp92.i.i = load i8, i8* %ptr_add_tmp91.i.i, align 1
  %cast_tmp93.i.i = zext i8 %load_tmp92.i.i to i32
  %24 = add i8 %load_tmp92.i.i, -58
  %25 = icmp ult i8 %24, -10
  br i1 %25, label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit, label %endif100.i.i

endif100.i.i:                                     ; preds = %for88.i.i
  %26 = icmp sgt i32 %.0274365.i.i, 3
  br i1 %26, label %endif112.i.i, label %else.i.i

else.i.i:                                         ; preds = %endif100.i.i
  %mul_tmp104.i.i = mul i32 %.0284364.i.i, 10
  %sub_tmp106.i.i = add i32 %mul_tmp104.i.i, -48
  %add_tmp107.i.i = add i32 %sub_tmp106.i.i, %cast_tmp93.i.i
  %.not302.i.i = icmp ne i32 %add_tmp107.i.i, 0
  %27 = zext i1 %.not302.i.i to i32
  %spec.select308.i.i = add nsw i32 %.0274365.i.i, %27
  br label %endif112.i.i

endif112.i.i:                                     ; preds = %else.i.i, %endif100.i.i
  %.1285.i.i = phi i32 [ %.0284364.i.i, %endif100.i.i ], [ %add_tmp107.i.i, %else.i.i ]
  %.1275.i.i = phi i32 [ %.0274365.i.i, %endif100.i.i ], [ %spec.select308.i.i, %else.i.i ]
  %indvars.iv.next385.i.i = add nsw i64 %indvars.iv384.i.i, 1
  %lftr.wideiv.i.i = trunc i64 %indvars.iv.next385.i.i to i32
  %exitcond387.not.i.i = icmp eq i32 %lftr.wideiv.i.i, %cast_tmp.i
  br i1 %exitcond387.not.i.i, label %endif117.i.i, label %for88.i.i

endif113.i.i:                                     ; preds = %endif81.i.i, %bool_and_rhs.i.i, %endif.i.i
  %.0282351.i.i = phi i32 [ %.0282357.i.i, %bool_and_rhs.i.i ], [ %.0282357.i.i, %endif81.i.i ], [ 0, %endif.i.i ]
  %.0277348.i.i = phi i32 [ %.0277358.i.i, %bool_and_rhs.i.i ], [ %.0277358.i.i, %endif81.i.i ], [ %cast_tmp.i, %endif.i.i ]
  %.0345.i.i = phi i32 [ %.0359.i.i, %bool_and_rhs.i.i ], [ %.0359.i.i, %endif81.i.i ], [ 0, %endif.i.i ]
  %.4297.i.i = phi i32 [ %16, %bool_and_rhs.i.i ], [ %.2295.i.i, %endif81.i.i ], [ %spec.select305.i.i, %endif.i.i ]
  %.1292.i.i = phi i1 [ false, %bool_and_rhs.i.i ], [ %.0291.i.i, %endif81.i.i ], [ false, %endif.i.i ]
  %.0280.i.i = phi i32 [ %cast_tmp.i, %bool_and_rhs.i.i ], [ %16, %endif81.i.i ], [ %cast_tmp.i, %endif.i.i ]
  %28 = icmp slt i32 %.4297.i.i, %cast_tmp.i
  br i1 %28, label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit, label %endif117.i.i

endif117.i.i:                                     ; preds = %endif112.i.i, %endif113.i.i
  %.2276402.i.i = phi i32 [ 0, %endif113.i.i ], [ %.1275.i.i, %endif112.i.i ]
  %.0280401.i.i = phi i32 [ %.0280.i.i, %endif113.i.i ], [ %16, %endif112.i.i ]
  %.2286400.i.i = phi i32 [ 0, %endif113.i.i ], [ %.1285.i.i, %endif112.i.i ]
  %.1292399.i.i = phi i1 [ %.1292.i.i, %endif113.i.i ], [ %.0291.i.i, %endif112.i.i ]
  %.0345398.i.i = phi i32 [ %.0345.i.i, %endif113.i.i ], [ %.0359.i.i, %endif112.i.i ]
  %.0277348397.i.i = phi i32 [ %.0277348.i.i, %endif113.i.i ], [ %.0277358.i.i, %endif112.i.i ]
  %.0282351396.i.i = phi i32 [ %.0282351.i.i, %endif113.i.i ], [ %.0282357.i.i, %endif112.i.i ]
  %unary_minus_tmp.i.i = sub i32 0, %.2286400.i.i
  %spec.select429.i.i = select i1 %.1292399.i.i, i32 %unary_minus_tmp.i.i, i32 %.2286400.i.i
  br label %endif117.thread.i.i

endif117.thread.i.i:                              ; preds = %for_iteration.i.i, %endif117.i.i
  %.0282351396416.i.i = phi i32 [ %.0282351396.i.i, %endif117.i.i ], [ %.1283.i.i, %for_iteration.i.i ]
  %.0277348397415.i.i = phi i32 [ %.0277348397.i.i, %endif117.i.i ], [ %.1278.i.i, %for_iteration.i.i ]
  %.0345398414.i.i = phi i32 [ %.0345398.i.i, %endif117.i.i ], [ %.1.i.i, %for_iteration.i.i ]
  %.1292399413.i.i = phi i1 [ %.1292399.i.i, %endif117.i.i ], [ false, %for_iteration.i.i ]
  %.0280401412.i.i = phi i32 [ %.0280401.i.i, %endif117.i.i ], [ %cast_tmp.i, %for_iteration.i.i ]
  %.2276402411.i.i = phi i32 [ %.2276402.i.i, %endif117.i.i ], [ 0, %for_iteration.i.i ]
  %29 = phi i32 [ %spec.select429.i.i, %endif117.i.i ], [ 0, %for_iteration.i.i ]
  %30 = icmp sgt i32 %.0280401412.i.i, %.0277348397415.i.i
  %31 = xor i32 %.0277348397415.i.i, -1
  %sub_tmp128.i.i = add i32 %.0280401412.i.i, %31
  %sub_tmp130.i.i = select i1 %30, i32 %sub_tmp128.i.i, i32 0
  %.4.i.i = sub i32 %29, %sub_tmp130.i.i
  %32 = icmp sgt i32 %.2276402411.i.i, 3
  %spec.select.i.i = select i1 %32, i1 %.1292399413.i.i, i1 false
  br i1 %spec.select.i.i, label %then147.i.i, label %bool_or_rhs137.i.i

bool_or_rhs137.i.i:                               ; preds = %endif117.thread.i.i
  %add_tmp140.i.i = add i32 %.4.i.i, %.0345398414.i.i
  %33 = icmp slt i32 %add_tmp140.i.i, -45
  %34 = icmp eq i32 %.0282351396416.i.i, 0
  %or.cond.i.i = select i1 %33, i1 true, i1 %34
  br i1 %or.cond.i.i, label %then147.i.i, label %else152.i.i

then147.i.i:                                      ; preds = %bool_or_rhs137.i.i, %endif117.thread.i.i
  %35 = select i1 %7, float -0.000000e+00, float 0.000000e+00
  store float %35, float* %2, align 4
  br label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit

else152.i.i:                                      ; preds = %bool_or_rhs137.i.i
  %36 = icmp sgt i32 %add_tmp140.i.i, 39
  %bool_or_tmp159.i.i = select i1 %32, i1 true, i1 %36
  br i1 %bool_or_tmp159.i.i, label %then160.i.i, label %endif167.i.i

then160.i.i:                                      ; preds = %else152.i.i
  %37 = select i1 %7, float 0xFFF0000000000000, float 0x7FF0000000000000
  store float %37, float* %2, align 4
  br label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit

endif167.i.i:                                     ; preds = %else152.i.i
  %38 = icmp sgt i32 %.4.i.i, -1
  %39 = tail call i32 @llvm.ctlz.i32(i32 %.0282351396416.i.i, i1 false) #8, !range !1
  br i1 %38, label %then169.i.i, label %else201.i.i

then169.i.i:                                      ; preds = %endif167.i.i
  %mul_tmp.i.i.i = mul nuw i32 %.4.i.i, 1217359
  %rshift_tmp.i.i.i = lshr i32 %mul_tmp.i.i.i, 19
  %add_tmp172.i.i = sub nsw i32 7, %39
  %add_tmp174.i.i = add nsw i32 %add_tmp172.i.i, %.4.i.i
  %sub_tmp175.i.i = add nsw i32 %add_tmp174.i.i, %rshift_tmp.i.i.i
  %sub_tmp178.i.i = sub nsw i32 %sub_tmp175.i.i, %.4.i.i
  %40 = icmp ult i32 %.4.i.i, 3529
  tail call void @llvm.assume(i1 %40) #8
  %add_tmp.i.neg.i.i = xor i32 %rshift_tmp.i.i.i, -1
  %sub_tmp180.i.i = add nsw i32 %sub_tmp178.i.i, %add_tmp.i.neg.i.i
  %41 = icmp sgt i32 %sub_tmp180.i.i, -62
  tail call void @llvm.assume(i1 %41) #8
  %42 = zext i32 %.4.i.i to i64
  %43 = getelementptr [47 x i64], [47 x i64]* @std.ryu.FLOAT_POW5_SPLIT, i64 0, i64 %42
  %load_tmp2.i.i.i = load i64, i64* %43, align 8
  %44 = add nsw i32 %sub_tmp180.i.i, 28
  %45 = icmp ult i32 %44, -33
  tail call void @llvm.assume(i1 %45) #8
  %rshift_tmp.i.i311.i.i = lshr i64 %load_tmp2.i.i.i, 32
  %cast_tmp5.i.i.i.i = zext i32 %.0282351396416.i.i to i64
  %cast_tmp7.i.i.i.i = and i64 %load_tmp2.i.i.i, 4294967295
  %mul_tmp.i.i312.i.i = mul nuw i64 %cast_tmp7.i.i.i.i, %cast_tmp5.i.i.i.i
  %mul_tmp12.i.i.i.i = mul nuw i64 %rshift_tmp.i.i311.i.i, %cast_tmp5.i.i.i.i
  %rshift_tmp14.i.i.i.i = lshr i64 %mul_tmp.i.i312.i.i, 32
  %add_tmp.i.i.i.i = add nuw i64 %rshift_tmp14.i.i.i.i, %mul_tmp12.i.i.i.i
  %sub_tmp.i.i.i.i = add nsw i32 %sub_tmp180.i.i, 29
  %46 = zext i32 %sub_tmp.i.i.i.i to i64
  %rshift_tmp18.i.i.i.i = lshr i64 %add_tmp.i.i.i.i, %46
  %47 = icmp ult i64 %rshift_tmp18.i.i.i.i, 4294967296
  tail call void @llvm.assume(i1 %47) #8
  %48 = icmp slt i32 %sub_tmp175.i.i, %.4.i.i
  br i1 %48, label %endif242.i.i, label %bool_or_rhs188.i.i

bool_or_rhs188.i.i:                               ; preds = %then169.i.i
  %49 = icmp slt i32 %sub_tmp178.i.i, 32
  br i1 %49, label %bool_and_rhs192.i.i, label %endif242.i.i

bool_and_rhs192.i.i:                              ; preds = %bool_or_rhs188.i.i
  %notmask.i.i.i = shl nsw i32 -1, %sub_tmp178.i.i
  %sub_tmp.i313.i.i = xor i32 %notmask.i.i.i, -1
  %bit_and_tmp.i.i.i = and i32 %.0282351396416.i.i, %sub_tmp.i313.i.i
  %50 = icmp eq i32 %bit_and_tmp.i.i.i, 0
  br label %endif242.i.i

else201.i.i:                                      ; preds = %endif167.i.i
  %unary_minus_tmp206.i.i = sub i32 0, %.4.i.i
  %mul_tmp.i.i315.i.i = mul i32 %.4.i.i, -1217359
  %rshift_tmp.i.i316.i.i = lshr i32 %mul_tmp.i.i315.i.i, 19
  %add_tmp.i317.i.i = add nuw nsw i32 %rshift_tmp.i.i316.i.i, 1
  %add_tmp.i317.neg.i.i = xor i32 %rshift_tmp.i.i316.i.i, -1
  %51 = sub nsw i32 7, %39
  %sub_tmp207.i.i = add i32 %51, %.4.i.i
  %sub_tmp208.i.i = add i32 %sub_tmp207.i.i, %add_tmp.i317.neg.i.i
  %sub_tmp211.i.i = sub i32 %sub_tmp208.i.i, %.4.i.i
  %52 = icmp ult i32 %unary_minus_tmp206.i.i, 3529
  tail call void @llvm.assume(i1 %52) #8
  %add_tmp214.i.i = add i32 %add_tmp.i317.i.i, %sub_tmp211.i.i
  %53 = zext i32 %unary_minus_tmp206.i.i to i64
  %54 = getelementptr [55 x i64], [55 x i64]* @std.ryu.FLOAT_POW5_INV_SPLIT, i64 0, i64 %53
  %load_tmp2.i321.i.i = load i64, i64* %54, align 8
  %55 = add i32 %add_tmp214.i.i, 25
  %56 = icmp ult i32 %55, -33
  tail call void @llvm.assume(i1 %56) #8
  %rshift_tmp.i.i322.i.i = lshr i64 %load_tmp2.i321.i.i, 32
  %cast_tmp5.i.i323.i.i = zext i32 %.0282351396416.i.i to i64
  %cast_tmp7.i.i324.i.i = and i64 %load_tmp2.i321.i.i, 4294967295
  %mul_tmp.i.i325.i.i = mul nuw i64 %cast_tmp7.i.i324.i.i, %cast_tmp5.i.i323.i.i
  %mul_tmp12.i.i326.i.i = mul nuw i64 %rshift_tmp.i.i322.i.i, %cast_tmp5.i.i323.i.i
  %rshift_tmp14.i.i327.i.i = lshr i64 %mul_tmp.i.i325.i.i, 32
  %add_tmp.i.i328.i.i = add nuw i64 %rshift_tmp14.i.i327.i.i, %mul_tmp12.i.i326.i.i
  %sub_tmp.i.i329.i.i = add i32 %add_tmp214.i.i, 26
  %57 = zext i32 %sub_tmp.i.i329.i.i to i64
  %rshift_tmp18.i.i330.i.i = lshr i64 %add_tmp.i.i328.i.i, %57
  %58 = icmp ult i64 %rshift_tmp18.i.i330.i.i, 4294967296
  tail call void @llvm.assume(i1 %58) #8
  %59 = icmp slt i32 %sub_tmp208.i.i, %.4.i.i
  br i1 %59, label %bool_and_rhs236.i.i, label %bool_or_rhs223.i.i

bool_or_rhs223.i.i:                               ; preds = %else201.i.i
  %60 = icmp slt i32 %sub_tmp211.i.i, 32
  br i1 %60, label %bool_and_rhs227.i.i, label %endif242.i.i

bool_and_rhs227.i.i:                              ; preds = %bool_or_rhs223.i.i
  %notmask.i332.i.i = shl nsw i32 -1, %sub_tmp211.i.i
  %sub_tmp.i333.i.i = xor i32 %notmask.i332.i.i, -1
  %bit_and_tmp.i334.i.i = and i32 %.0282351396416.i.i, %sub_tmp.i333.i.i
  %61 = icmp eq i32 %bit_and_tmp.i334.i.i, 0
  br i1 %61, label %bool_and_rhs236.i.i, label %endif242.i.i

bool_and_rhs236.i.i:                              ; preds = %bool_and_rhs227.i.i, %else201.i.i
  %mod_tmp17.i.i.i.i = urem i32 %.0282351396416.i.i, 5
  %.not18.i.i.i.i = icmp eq i32 %mod_tmp17.i.i.i.i, 0
  br i1 %.not18.i.i.i.i, label %endif.i.i.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i

endif.i.i.i.i:                                    ; preds = %bool_and_rhs236.i.i, %endif.i.i.i.i
  %.020.i.i.i.i = phi i32 [ %div_tmp.i.i.i.i, %endif.i.i.i.i ], [ %.0282351396416.i.i, %bool_and_rhs236.i.i ]
  %.01619.i.i.i.i = phi i32 [ %62, %endif.i.i.i.i ], [ 0, %bool_and_rhs236.i.i ]
  %div_tmp.i.i.i.i = udiv i32 %.020.i.i.i.i, 5
  %62 = add i32 %.01619.i.i.i.i, 1
  %63 = icmp ugt i32 %.020.i.i.i.i, 4
  tail call void @llvm.assume(i1 %63) #8
  %mod_tmp.i.i.i.i = urem i32 %div_tmp.i.i.i.i, 5
  %.not.i.i.i.i = icmp eq i32 %mod_tmp.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %endif.i.i.i.i, label %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i

func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i: ; preds = %endif.i.i.i.i, %bool_and_rhs236.i.i
  %.016.lcssa.i.i.i.i = phi i32 [ 0, %bool_and_rhs236.i.i ], [ %62, %endif.i.i.i.i ]
  %64 = icmp uge i32 %.016.lcssa.i.i.i.i, %unary_minus_tmp206.i.i
  br label %endif242.i.i

endif242.i.i:                                     ; preds = %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i, %bool_and_rhs227.i.i, %bool_or_rhs223.i.i, %bool_and_rhs192.i.i, %bool_or_rhs188.i.i, %then169.i.i
  %.0289.i.i = phi i32 [ %sub_tmp175.i.i, %bool_or_rhs188.i.i ], [ %sub_tmp175.i.i, %bool_and_rhs192.i.i ], [ %sub_tmp175.i.i, %then169.i.i ], [ %sub_tmp208.i.i, %bool_or_rhs223.i.i ], [ %sub_tmp208.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %sub_tmp208.i.i, %bool_and_rhs227.i.i ]
  %.0288.in.i.i = phi i64 [ %rshift_tmp18.i.i.i.i, %bool_or_rhs188.i.i ], [ %rshift_tmp18.i.i.i.i, %bool_and_rhs192.i.i ], [ %rshift_tmp18.i.i.i.i, %then169.i.i ], [ %rshift_tmp18.i.i330.i.i, %bool_or_rhs223.i.i ], [ %rshift_tmp18.i.i330.i.i, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ %rshift_tmp18.i.i330.i.i, %bool_and_rhs227.i.i ]
  %.0287.i.i = phi i1 [ false, %bool_or_rhs188.i.i ], [ %50, %bool_and_rhs192.i.i ], [ true, %then169.i.i ], [ false, %bool_or_rhs223.i.i ], [ %64, %func.std.ryu.multipleOfPowerOf5_32..2.builtin.uint32.builtin.uint32.builtin.bool.exit.i.i ], [ false, %bool_and_rhs227.i.i ]
  %.0288.i.i = trunc i64 %.0288.in.i.i to i32
  %65 = tail call i32 @llvm.ctlz.i32(i32 %.0288.i.i, i1 false) #8, !range !1
  %66 = sub i32 %.0289.i.i, %65
  %add_tmp246.i.i = add i32 %66, 158
  %67 = icmp sgt i32 %add_tmp246.i.i, 0
  %load_tmp2.sroa.speculated.i.i.i = select i1 %67, i32 %add_tmp246.i.i, i32 0
  %68 = icmp ugt i32 %load_tmp2.sroa.speculated.i.i.i, 254
  br i1 %68, label %then248.i.i, label %endif255.i.i

then248.i.i:                                      ; preds = %endif242.i.i
  %69 = select i1 %7, float 0xFFF0000000000000, float 0x7FF0000000000000
  store float %69, float* %2, align 4
  br label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit

endif255.i.i:                                     ; preds = %endif242.i.i
  %70 = icmp slt i32 %add_tmp246.i.i, 1
  %sub_tmp261.i.i = sub i32 -149, %.0289.i.i
  %sub_tmp265.i.i = sub i32 -150, %.0289.i.i
  %sub_tmp267.i.i = add i32 %sub_tmp265.i.i, %load_tmp2.sroa.speculated.i.i.i
  %.0279.i.i = select i1 %70, i32 %sub_tmp261.i.i, i32 %sub_tmp267.i.i
  %71 = icmp sgt i32 %.0279.i.i, -1
  tail call void @llvm.assume(i1 %71) #8
  %sub_tmp272.i.i = add nsw i32 %.0279.i.i, -1
  %72 = shl nuw i32 1, %sub_tmp272.i.i
  %73 = and i32 %72, %.0288.i.i
  %.not.i.i = icmp eq i32 %73, 0
  br i1 %.not.i.i, label %bool_and_end291.i.i, label %bool_and_rhs282.i.i

bool_and_rhs282.i.i:                              ; preds = %endif255.i.i
  %notmask.i.i = shl nsw i32 -1, %sub_tmp272.i.i
  %sub_tmp274.i.i = xor i32 %notmask.i.i, -1
  %bit_and_tmp.i.i = and i32 %sub_tmp274.i.i, %.0288.i.i
  %74 = icmp eq i32 %bit_and_tmp.i.i, 0
  %bit_and_tmp276.i.i = and i1 %.0287.i.i, %74
  br i1 %bit_and_tmp276.i.i, label %bool_or_rhs284.i.i, label %bool_and_end291.i.i

bool_or_rhs284.i.i:                               ; preds = %bool_and_rhs282.i.i
  %75 = shl nuw i32 1, %.0279.i.i
  %76 = and i32 %75, %.0288.i.i
  %77 = icmp ne i32 %76, 0
  br label %bool_and_end291.i.i

bool_and_end291.i.i:                              ; preds = %bool_or_rhs284.i.i, %bool_and_rhs282.i.i, %endif255.i.i
  %bool_and_tmp292.i.i = phi i1 [ false, %endif255.i.i ], [ true, %bool_and_rhs282.i.i ], [ %77, %bool_or_rhs284.i.i ]
  %rshift_tmp295.i.i = lshr i32 %.0288.i.i, %.0279.i.i
  %cast_tmp297.i.i = zext i1 %bool_and_tmp292.i.i to i32
  %add_tmp298.i.i = add i32 %rshift_tmp295.i.i, %cast_tmp297.i.i
  %78 = icmp ult i32 %add_tmp298.i.i, 16777217
  tail call void @llvm.assume(i1 %78) #8
  %bit_and_tmp301.i.i = and i32 %add_tmp298.i.i, 8388607
  %79 = icmp eq i32 %bit_and_tmp301.i.i, 0
  %spec.select2.i.i = select i1 %79, i1 %bool_and_tmp292.i.i, i1 false
  %80 = zext i1 %spec.select2.i.i to i32
  %spec.select310.i.i = add nuw nsw i32 %load_tmp2.sroa.speculated.i.i.i, %80
  %lshift_tmp312.i.i = select i1 %7, i32 256, i32 0
  %bit_or_tmp314.i.i = or i32 %spec.select310.i.i, %lshift_tmp312.i.i
  %lshift_tmp315.i.i = shl i32 %bit_or_tmp314.i.i, 23
  %bit_or_tmp317.i.i = or i32 %lshift_tmp315.i.i, %bit_and_tmp301.i.i
  %81 = bitcast float* %2 to i32*
  store i32 %bit_or_tmp317.i.i, i32* %81, align 4
  br label %func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit

func.std.ryu.s2f_str..2.builtin.str.0P.builtin.float32.builtin.uint32.exit: ; preds = %then18.i.i, %endif28.i.i, %for88.i.i, %alloca, %endif113.i.i, %then147.i.i, %then160.i.i, %then248.i.i, %bool_and_end291.i.i
  %common.ret.op.i.i = phi i32 [ 0, %then147.i.i ], [ 0, %then160.i.i ], [ 0, %then248.i.i ], [ 0, %bool_and_end291.i.i ], [ 1, %alloca ], [ 3, %endif113.i.i ], [ 3, %for88.i.i ], [ 2, %endif28.i.i ], [ 3, %then18.i.i ]
  ret i32 %common.ret.op.i.i
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn
define internal fastcc i32 @func.std.ryu.mulShift_mod1e9..3.builtin.uint64.0P.const.builtin.uint64.builtin.int32.builtin.uint32(i64 %0, i64 %.val, i64 %.1.val, i64 %.2.val, i32 %1) unnamed_addr #4 {
alloca:
  %rshift_tmp.i = lshr i64 %0, 32
  %rshift_tmp6.i = lshr i64 %.val, 32
  %cast_tmp9.i = and i64 %0, 4294967295
  %cast_tmp11.i = and i64 %.val, 4294967295
  %mul_tmp.i = mul nuw i64 %cast_tmp11.i, %cast_tmp9.i
  %mul_tmp16.i = mul nuw i64 %rshift_tmp6.i, %cast_tmp9.i
  %mul_tmp21.i = mul nuw i64 %cast_tmp11.i, %rshift_tmp.i
  %mul_tmp26.i = mul nuw i64 %rshift_tmp6.i, %rshift_tmp.i
  %rshift_tmp30.i = lshr i64 %mul_tmp.i, 32
  %add_tmp.i = add nuw i64 %rshift_tmp30.i, %mul_tmp21.i
  %rshift_tmp38.i = lshr i64 %add_tmp.i, 32
  %cast_tmp42.i = and i64 %add_tmp.i, 4294967295
  %add_tmp43.i = add nuw i64 %cast_tmp42.i, %mul_tmp16.i
  %rshift_tmp47.i = lshr i64 %add_tmp43.i, 32
  %add_tmp52.i = add nuw i64 %rshift_tmp38.i, %mul_tmp26.i
  %add_tmp55.i = add nuw i64 %add_tmp52.i, %rshift_tmp47.i
  %rshift_tmp6.i73 = lshr i64 %.1.val, 32
  %cast_tmp11.i75 = and i64 %.1.val, 4294967295
  %mul_tmp.i76 = mul nuw i64 %cast_tmp11.i75, %cast_tmp9.i
  %mul_tmp16.i77 = mul nuw i64 %rshift_tmp6.i73, %cast_tmp9.i
  %mul_tmp21.i78 = mul nuw i64 %cast_tmp11.i75, %rshift_tmp.i
  %mul_tmp26.i79 = mul nuw i64 %rshift_tmp6.i73, %rshift_tmp.i
  %rshift_tmp30.i80 = lshr i64 %mul_tmp.i76, 32
  %add_tmp.i81 = add nuw i64 %rshift_tmp30.i80, %mul_tmp21.i78
  %rshift_tmp38.i82 = lshr i64 %add_tmp.i81, 32
  %cast_tmp42.i83 = and i64 %add_tmp.i81, 4294967295
  %add_tmp43.i84 = add nuw i64 %cast_tmp42.i83, %mul_tmp16.i77
  %rshift_tmp47.i85 = lshr i64 %add_tmp43.i84, 32
  %add_tmp52.i86 = add nuw i64 %rshift_tmp38.i82, %mul_tmp26.i79
  %add_tmp55.i87 = add nuw i64 %add_tmp52.i86, %rshift_tmp47.i85
  %lshift_tmp.i88 = shl i64 %add_tmp43.i84, 32
  %cast_tmp59.i89 = and i64 %mul_tmp.i76, 4294967295
  %bit_or_tmp.i90 = or i64 %lshift_tmp.i88, %cast_tmp59.i89
  %rshift_tmp6.i92 = lshr i64 %.2.val, 32
  %cast_tmp11.i94 = and i64 %.2.val, 4294967295
  %mul_tmp.i95 = mul nuw i64 %cast_tmp11.i94, %cast_tmp9.i
  %mul_tmp16.i96 = mul nuw i64 %rshift_tmp6.i92, %cast_tmp9.i
  %mul_tmp21.i97 = mul nuw i64 %cast_tmp11.i94, %rshift_tmp.i
  %mul_tmp26.i98 = mul nuw i64 %rshift_tmp6.i92, %rshift_tmp.i
  %rshift_tmp30.i99 = lshr i64 %mul_tmp.i95, 32
  %add_tmp.i100 = add nuw i64 %rshift_tmp30.i99, %mul_tmp21.i97
  %rshift_tmp38.i101 = lshr i64 %add_tmp.i100, 32
  %cast_tmp42.i102 = and i64 %add_tmp.i100, 4294967295
  %add_tmp43.i103 = add nuw i64 %cast_tmp42.i102, %mul_tmp16.i96
  %rshift_tmp47.i104 = lshr i64 %add_tmp43.i103, 32
  %add_tmp52.i105 = add nuw i64 %rshift_tmp38.i101, %mul_tmp26.i98
  %add_tmp55.i106 = add nuw i64 %add_tmp52.i105, %rshift_tmp47.i104
  %lshift_tmp.i107 = shl i64 %add_tmp43.i103, 32
  %cast_tmp59.i108 = and i64 %mul_tmp.i95, 4294967295
  %bit_or_tmp.i109 = or i64 %lshift_tmp.i107, %cast_tmp59.i108
  %2 = xor i64 %bit_or_tmp.i90, -1
  %3 = icmp ugt i64 %add_tmp55.i, %2
  %add_tmp18 = add i64 %add_tmp55.i87, %bit_or_tmp.i109
  %cast_tmp20 = zext i1 %3 to i64
  %add_tmp21 = add i64 %add_tmp18, %cast_tmp20
  %4 = icmp ult i64 %add_tmp21, %bit_or_tmp.i109
  %cast_tmp27 = zext i1 %4 to i64
  %add_tmp28 = add nuw i64 %add_tmp55.i106, %cast_tmp27
  %5 = icmp ugt i32 %1, 127
  tail call void @llvm.assume(i1 %5) #8
  %6 = icmp ult i32 %1, 181
  tail call void @llvm.assume(i1 %6) #8
  %7 = icmp ult i32 %1, 160
  %8 = urem i64 %add_tmp28, 1000000000
  %bit_or_tmp = tail call i64 @llvm.fshl.i64(i64 %8, i64 %add_tmp21, i64 32)
  br i1 %7, label %then, label %common.ret

common.ret:                                       ; preds = %alloca, %then
  %.sink = phi i32 [ -128, %then ], [ -160, %alloca ]
  %bit_or_tmp.sink = phi i64 [ %bit_or_tmp40, %then ], [ %bit_or_tmp, %alloca ]
  %sub_tmp53 = add nsw i32 %.sink, %1
  %9 = zext i32 %sub_tmp53 to i64
  %rshift_tmp54 = lshr i64 %bit_or_tmp.sink, %9
  %common.ret.op.in = urem i64 %rshift_tmp54, 1000000000
  %common.ret.op = trunc i64 %common.ret.op.in to i32
  ret i32 %common.ret.op

then:                                             ; preds = %alloca
  %10 = urem i64 %bit_or_tmp, 1000000000
  %lshift_tmp38 = shl nuw nsw i64 %10, 32
  %bit_and_tmp = and i64 %add_tmp21, 4294967295
  %bit_or_tmp40 = or i64 %lshift_tmp38, %bit_and_tmp
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
define internal fastcc i64 @func.std.ryu.mulShiftAll64..6.builtin.uint64.0P.const.builtin.uint64.builtin.uint32.0P.builtin.uint64.0P.builtin.uint64.builtin.uint32.builtin.uint64(i64 %0, i64* nocapture readonly %1, i32 %2, i64* nocapture writeonly %3, i64* nocapture writeonly %4, i32 %5) unnamed_addr #4 {
alloca:
  %lshift_tmp = shl i64 %0, 1
  %load_tmp3 = load i64, i64* %1, align 8
  %rshift_tmp.i = lshr i64 %lshift_tmp, 32
  %rshift_tmp6.i = lshr i64 %load_tmp3, 32
  %cast_tmp9.i = and i64 %lshift_tmp, 4294967294
  %cast_tmp11.i = and i64 %load_tmp3, 4294967295
  %mul_tmp.i = mul nuw i64 %cast_tmp11.i, %cast_tmp9.i
  %mul_tmp16.i = mul nuw i64 %rshift_tmp6.i, %cast_tmp9.i
  %mul_tmp21.i = mul nuw i64 %cast_tmp11.i, %rshift_tmp.i
  %mul_tmp26.i = mul nuw i64 %rshift_tmp6.i, %rshift_tmp.i
  %rshift_tmp30.i = lshr i64 %mul_tmp.i, 32
  %add_tmp.i = add nuw i64 %rshift_tmp30.i, %mul_tmp21.i
  %rshift_tmp38.i = lshr i64 %add_tmp.i, 32
  %cast_tmp42.i = and i64 %add_tmp.i, 4294967295
  %add_tmp43.i = add nuw i64 %cast_tmp42.i, %mul_tmp16.i
  %rshift_tmp47.i = lshr i64 %add_tmp43.i, 32
  %add_tmp52.i = add nuw i64 %rshift_tmp38.i, %mul_tmp26.i
  %add_tmp55.i = add nuw i64 %add_tmp52.i, %rshift_tmp47.i
  %lshift_tmp.i = shl i64 %add_tmp43.i, 32
  %cast_tmp59.i = and i64 %mul_tmp.i, 4294967294
  %bit_or_tmp.i = or i64 %lshift_tmp.i, %cast_tmp59.i
  %ptr_add_tmp = getelementptr i64, i64* %1, i64 1
  %load_tmp7 = load i64, i64* %ptr_add_tmp, align 8
  %rshift_tmp6.i83 = lshr i64 %load_tmp7, 32
  %cast_tmp11.i85 = and i64 %load_tmp7, 4294967295
  %mul_tmp.i86 = mul nuw i64 %cast_tmp11.i85, %cast_tmp9.i
  %mul_tmp16.i87 = mul nuw i64 %rshift_tmp6.i83, %cast_tmp9.i
  %mul_tmp21.i88 = mul nuw i64 %cast_tmp11.i85, %rshift_tmp.i
  %mul_tmp26.i89 = mul nuw i64 %rshift_tmp6.i83, %rshift_tmp.i
  %rshift_tmp30.i90 = lshr i64 %mul_tmp.i86, 32
  %add_tmp.i91 = add nuw i64 %rshift_tmp30.i90, %mul_tmp21.i88
  %rshift_tmp38.i92 = lshr i64 %add_tmp.i91, 32
  %cast_tmp42.i93 = and i64 %add_tmp.i91, 4294967295
  %add_tmp43.i94 = add nuw i64 %cast_tmp42.i93, %mul_tmp16.i87
  %rshift_tmp47.i95 = lshr i64 %add_tmp43.i94, 32
  %add_tmp52.i96 = add nuw i64 %rshift_tmp38.i92, %mul_tmp26.i89
  %add_tmp55.i97 = add nuw i64 %add_tmp52.i96, %rshift_tmp47.i95
  %lshift_tmp.i98 = shl i64 %add_tmp43.i94, 32
  %cast_tmp59.i99 = and i64 %mul_tmp.i86, 4294967294
  %bit_or_tmp.i100 = or i64 %lshift_tmp.i98, %cast_tmp59.i99
  %add_tmp = add i64 %bit_or_tmp.i100, %add_tmp55.i
  %6 = icmp ult i64 %add_tmp, %add_tmp55.i
  %add_tmp11 = zext i1 %6 to i64
  %spec.select = add nuw i64 %add_tmp55.i97, %add_tmp11
  %add_tmp20 = add i64 %add_tmp, %load_tmp7
  %7 = xor i64 %bit_or_tmp.i, -1
  %8 = icmp ugt i64 %load_tmp3, %7
  %cast_tmp = zext i1 %8 to i64
  %add_tmp23 = add i64 %add_tmp20, %cast_tmp
  %9 = icmp ult i64 %add_tmp23, %add_tmp
  %cast_tmp27 = zext i1 %9 to i64
  %add_tmp28 = add nuw i64 %spec.select, %cast_tmp27
  %sub_tmp32 = add nsw i32 %2, -65
  %10 = icmp ne i32 %sub_tmp32, 0
  tail call void @llvm.assume(i1 %10) #8
  %sub_tmp.i = sub i32 129, %2
  %11 = zext i32 %sub_tmp.i to i64
  %lshift_tmp.i101 = shl i64 %add_tmp28, %11
  %12 = zext i32 %sub_tmp32 to i64
  %rshift_tmp.i102 = lshr i64 %add_tmp23, %12
  %bit_or_tmp.i103 = or i64 %lshift_tmp.i101, %rshift_tmp.i102
  store i64 %bit_or_tmp.i103, i64* %3, align 8
  %13 = icmp eq i32 %5, 1
  br i1 %13, label %then35, label %else

then35:                                           ; preds = %alloca
  %load_tmp38 = load i64, i64* %1, align 8
  %load_tmp43 = load i64, i64* %ptr_add_tmp, align 8
  %sub_tmp44 = sub i64 %add_tmp, %load_tmp43
  %14 = icmp ugt i64 %load_tmp38, %bit_or_tmp.i
  %cast_tmp47.neg = sext i1 %14 to i64
  %sub_tmp48 = add i64 %sub_tmp44, %cast_tmp47.neg
  %15 = icmp ugt i64 %sub_tmp48, %add_tmp
  %cast_tmp52.neg = sext i1 %15 to i64
  %sub_tmp53 = add i64 %spec.select, %cast_tmp52.neg
  %lshift_tmp.i105 = shl i64 %sub_tmp53, %11
  %rshift_tmp.i106 = lshr i64 %sub_tmp48, %12
  %bit_or_tmp.i107 = or i64 %lshift_tmp.i105, %rshift_tmp.i106
  br label %endif100

else:                                             ; preds = %alloca
  %sub_tmp = add i32 %2, -64
  %add_tmp62 = shl i64 %bit_or_tmp.i, 1
  %add_tmp65 = shl i64 %add_tmp, 1
  %16 = icmp ult i64 %add_tmp62, %bit_or_tmp.i
  %cast_tmp68 = zext i1 %16 to i64
  %add_tmp69 = or i64 %add_tmp65, %cast_tmp68
  %add_tmp72 = shl i64 %spec.select, 1
  %17 = icmp ult i64 %add_tmp69, %add_tmp
  %cast_tmp75 = zext i1 %17 to i64
  %add_tmp76 = or i64 %add_tmp72, %cast_tmp75
  %load_tmp79 = load i64, i64* %1, align 8
  %load_tmp84 = load i64, i64* %ptr_add_tmp, align 8
  %sub_tmp85 = sub i64 %add_tmp69, %load_tmp84
  %18 = icmp ugt i64 %load_tmp79, %add_tmp62
  %cast_tmp88.neg = sext i1 %18 to i64
  %sub_tmp89 = add i64 %sub_tmp85, %cast_tmp88.neg
  %19 = icmp ugt i64 %sub_tmp89, %add_tmp69
  %cast_tmp93.neg = sext i1 %19 to i64
  %sub_tmp94 = add i64 %add_tmp76, %cast_tmp93.neg
  %20 = icmp ult i32 %sub_tmp, 64
  tail call void @llvm.assume(i1 %20) #8
  %21 = icmp ne i32 %sub_tmp, 0
  tail call void @llvm.assume(i1 %21) #8
  %sub_tmp.i108 = sub nuw nsw i32 128, %2
  %22 = zext i32 %sub_tmp.i108 to i64
  %lshift_tmp.i109 = shl i64 %sub_tmp94, %22
  %23 = zext i32 %sub_tmp to i64
  %rshift_tmp.i110 = lshr i64 %sub_tmp89, %23
  %bit_or_tmp.i111 = or i64 %lshift_tmp.i109, %rshift_tmp.i110
  br label %endif100

endif100:                                         ; preds = %else, %then35
  %storemerge = phi i64 [ %bit_or_tmp.i111, %else ], [ %bit_or_tmp.i107, %then35 ]
  store i64 %storemerge, i64* %4, align 8
  %lshift_tmp.i113 = shl i64 %spec.select, %11
  %rshift_tmp.i114 = lshr i64 %add_tmp, %12
  %bit_or_tmp.i115 = or i64 %lshift_tmp.i113, %rshift_tmp.i114
  ret i64 %bit_or_tmp.i115
}

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fshl.i64(i64, i64, i64) #7

attributes #0 = { nofree nosync nounwind }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #3 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #4 = { mustprogress nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind }

!0 = !{i64 0, i64 65}
!1 = !{i32 0, i32 33}
